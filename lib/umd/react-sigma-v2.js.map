{"version":3,"sources":["webpack://react-sigma-v2/webpack/universalModuleDefinition","webpack://react-sigma-v2/./src/hooks.ts","webpack://react-sigma-v2/external \"react\"","webpack://react-sigma-v2/./src/context.ts","webpack://react-sigma-v2/./src/SigmaContainer.tsx","webpack://react-sigma-v2/./node_modules/sigma/sigma.js","webpack://react-sigma-v2/./node_modules/events/events.js","webpack://react-sigma-v2/./node_modules/graphology-metrics/extent.js","webpack://react-sigma-v2/./node_modules/graphology-utils/is-graph.js","webpack://react-sigma-v2/./node_modules/sigma/core/camera.js","webpack://react-sigma-v2/./node_modules/sigma/utils/animate.js","webpack://react-sigma-v2/./node_modules/sigma/utils/index.js","webpack://react-sigma-v2/./node_modules/sigma/node_modules/graphology-utils/is-graph.js","webpack://react-sigma-v2/./node_modules/sigma/utils/matrices.js","webpack://react-sigma-v2/./node_modules/sigma/utils/easings.js","webpack://react-sigma-v2/./node_modules/sigma/core/captors/mouse.js","webpack://react-sigma-v2/./node_modules/sigma/core/captors/captor.js","webpack://react-sigma-v2/./node_modules/sigma/core/quadtree.js","webpack://react-sigma-v2/./node_modules/@yomguithereal/helpers/extend.js","webpack://react-sigma-v2/./node_modules/sigma/core/labels.js","webpack://react-sigma-v2/./node_modules/sigma/settings.js","webpack://react-sigma-v2/./node_modules/sigma/rendering/canvas/label.js","webpack://react-sigma-v2/./node_modules/sigma/rendering/canvas/hover.js","webpack://react-sigma-v2/./node_modules/sigma/rendering/canvas/node.js","webpack://react-sigma-v2/./node_modules/sigma/rendering/canvas/edge-label.js","webpack://react-sigma-v2/./node_modules/sigma/rendering/webgl/programs/node.fast.js","webpack://react-sigma-v2/./node_modules/sigma/rendering/webgl/shaders/node.fast.vert.glsl.js","webpack://react-sigma-v2/./node_modules/sigma/rendering/webgl/shaders/node.fast.frag.glsl.js","webpack://react-sigma-v2/./node_modules/sigma/rendering/webgl/programs/common/node.js","webpack://react-sigma-v2/./node_modules/sigma/rendering/webgl/programs/common/program.js","webpack://react-sigma-v2/./node_modules/sigma/rendering/webgl/shaders/utils.js","webpack://react-sigma-v2/./node_modules/sigma/rendering/webgl/programs/edge.js","webpack://react-sigma-v2/./node_modules/sigma/rendering/webgl/shaders/edge.vert.glsl.js","webpack://react-sigma-v2/./node_modules/sigma/rendering/webgl/shaders/edge.frag.glsl.js","webpack://react-sigma-v2/./node_modules/sigma/rendering/webgl/programs/common/edge.js","webpack://react-sigma-v2/./node_modules/sigma/rendering/webgl/programs/edge.arrow.js","webpack://react-sigma-v2/./node_modules/sigma/rendering/webgl/programs/edge.arrowHead.js","webpack://react-sigma-v2/./node_modules/sigma/rendering/webgl/shaders/edge.arrowHead.vert.glsl.js","webpack://react-sigma-v2/./node_modules/sigma/rendering/webgl/shaders/edge.arrowHead.frag.glsl.js","webpack://react-sigma-v2/./node_modules/sigma/rendering/webgl/programs/edge.clamped.js","webpack://react-sigma-v2/./node_modules/sigma/rendering/webgl/shaders/edge.clamped.vert.glsl.js","webpack://react-sigma-v2/./node_modules/sigma/core/captors/touch.js","webpack://react-sigma-v2/external \"graphology\"","webpack://react-sigma-v2/./src/controls/ControlsContainer.tsx","webpack://react-sigma-v2/./src/controls/ForceAtlasControl.tsx","webpack://react-sigma-v2/./node_modules/graphology-layout-forceatlas2/worker.js","webpack://react-sigma-v2/./node_modules/graphology-layout-forceatlas2/webworker.js","webpack://react-sigma-v2/./node_modules/graphology-layout-forceatlas2/helpers.js","webpack://react-sigma-v2/./node_modules/graphology-layout-forceatlas2/defaults.js","webpack://react-sigma-v2/./src/controls/ZoomControl.tsx","webpack://react-sigma-v2/./src/controls/FullScreenControl.tsx","webpack://react-sigma-v2/./src/controls/SearchControl.tsx","webpack://react-sigma-v2/webpack/bootstrap","webpack://react-sigma-v2/webpack/runtime/make namespace object","webpack://react-sigma-v2/./src/index.ts","webpack://react-sigma-v2/./src/assets/index.scss?c244"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;;;;;;;;;;ACVA,uCAA4C;AAI5C,yCAA4C;AAG5C,SAAgB,QAAQ;IACtB,OAAO,yBAAe,EAAE,CAAC,KAAK,CAAC;AACjC,CAAC;AAFD,4BAEC;AAED,SAAgB,YAAY;IAC1B,MAAM,KAAK,GAAG,QAAQ,EAAE,CAAC;IAEzB,OAAO,CAAC,KAAY,EAAE,KAAK,GAAG,IAAI,EAAE,EAAE;QACpC,IAAI,KAAK,IAAI,KAAK,EAAE;YAClB,IAAI,KAAK,IAAI,KAAK,CAAC,QAAQ,EAAE,CAAC,KAAK,GAAG,CAAC;gBAAE,KAAK,CAAC,QAAQ,EAAE,CAAC,KAAK,EAAE,CAAC;YAClE,KAAK,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SAChC;IACH,CAAC,CAAC;AACJ,CAAC;AATD,oCASC;AAED,SAAgB,iBAAiB;IAC/B,MAAM,KAAK,GAAG,QAAQ,EAAE,CAAC;IACzB,MAAM,CAAC,aAAa,EAAE,gBAAgB,CAAC,GAAG,gBAAQ,CAAyB,EAAE,CAAC,CAAC;IAE/E,iBAAS,CAAC,GAAG,EAAE;QACb,IAAI,KAAK,IAAI,aAAa,EAAE;YAC1B,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;gBACxC,IAAI,IAAI,KAAK,eAAe,EAAE;oBAC5B,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,EAAE,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;iBAC5C;qBAAM;oBACL,KAAK,CAAC,EAAE,CAAC,IAAI,EAAE,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;iBACrC;YACH,CAAC,CAAC,CAAC;YACH,UAAU;YACV,OAAO,GAAG,EAAE;gBACV,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;oBACxC,IAAI,IAAI,KAAK,eAAe,EAAE;wBAC5B,KAAK,CAAC,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;qBACxD;yBAAM;wBACL,KAAK,CAAC,cAAc,CAAC,IAAI,EAAE,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;qBACjD;gBACH,CAAC,CAAC,CAAC;YACL,CAAC,CAAC;SACH;IACH,CAAC,EAAE,CAAC,KAAK,EAAE,aAAa,CAAC,CAAC,CAAC;IAE3B,OAAO,gBAAgB,CAAC;AAC1B,CAAC;AA3BD,8CA2BC;AAED,SAAgB,cAAc;IAC5B,MAAM,KAAK,GAAG,QAAQ,EAAE,CAAC;IACzB,MAAM,CAAC,QAAQ,EAAE,WAAW,CAAC,GAAG,gBAAQ,CAAoB,EAAE,CAAC,CAAC;IAEhE,iBAAS,CAAC,GAAG,EAAE;QACb,IAAI,KAAK,IAAI,QAAQ,EAAE;YACrB,MAAM,YAAY,GAAsB,EAAE,CAAC;YAE3C,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;gBAClC,YAAY,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;gBAC1C,KAAK,CAAC,UAAU,CAAC,GAAG,EAAE,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;YACvC,CAAC,CAAC,CAAC;YAEH,UAAU;YACV,OAAO,GAAG,EAAE;gBACV,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;oBACtC,KAAK,CAAC,UAAU,CAAC,GAAG,EAAE,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC;gBAC3C,CAAC,CAAC,CAAC;YACL,CAAC,CAAC;SACH;IACH,CAAC,EAAE,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,CAAC;IAEtB,OAAO,WAAW,CAAC;AACrB,CAAC;AAvBD,wCAuBC;;;;;;;;AC1ED,gD;;;;;;;;;;ACAA,uCAAkD;AAOrC,oBAAY,GAAG,qBAAa,CAA+B,IAAI,CAAC,CAAC;AAEjE,qBAAa,GAAG,oBAAY,CAAC,QAAQ,CAAC;AAEnD,SAAgB,eAAe;IAC7B,MAAM,OAAO,GAAG,kBAAU,CAAC,oBAAY,CAAC,CAAC;IACzC,IAAI,OAAO,IAAI,IAAI,EAAE;QACnB,MAAM,IAAI,KAAK,CAAC,6FAA6F,CAAC,CAAC;KAChH;IACD,OAAO,OAAO,CAAC;AACjB,CAAC;AAND,0CAMC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBD,qDAA8F;AAC9F,wDAAgC;AAEhC,8DAA+B;AAE/B,yCAAwD;AAWjD,MAAM,cAAc,GAAkC,CAAC,EAC5D,YAAY,EACZ,EAAE,EACF,SAAS,EACT,KAAK,EACL,eAAe,EACf,QAAQ,GACT,EAAE,EAAE;IACH,sCAAsC;IACtC,MAAM,YAAY,GAAG,cAAM,CAAiB,IAAI,CAAC,CAAC;IAClD,sCAAsC;IACtC,MAAM,CAAC,KAAK,CAAC,GAAG,gBAAQ,CAAC,EAAE,SAAS,EAAE,kBAAkB,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC;IACnG,qBAAqB;IACrB,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,gBAAQ,CAAe,IAAI,CAAC,CAAC;IAEvD,wCAAwC;IACxC,iBAAS,CAAC,GAAG,EAAE;QACb,IAAI,YAAY,CAAC,OAAO,KAAK,IAAI,EAAE;YACjC,MAAM,QAAQ,GAAG,IAAI,eAAK,CAAC,IAAI,oBAAK,CAAC,YAAY,CAAC,EAAE,YAAY,CAAC,OAAO,EAAE,eAAe,CAAC,CAAC;YAC3F,QAAQ,CAAC,QAAQ,CAAC,CAAC;SACpB;QACD,OAAO,GAAG,EAAE;YACV,QAAQ,CAAC,QAAQ,CAAC,EAAE;gBAClB,IAAI,QAAQ;oBAAE,QAAQ,CAAC,IAAI,EAAE,CAAC;gBAC9B,OAAO,IAAI,CAAC;YACd,CAAC,CAAC,CAAC;QACL,CAAC,CAAC;IACJ,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC;IAEnB,MAAM,OAAO,GAAG,eAAO,CAAC,GAAG,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;IACnE,MAAM,QAAQ,GAAG,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC,8BAAC,uBAAa,IAAC,KAAK,EAAE,OAAO,IAAG,QAAQ,CAAiB,CAAC,CAAC,CAAC,IAAI,CAAC;IAErG,OAAO,CACL,uDAAS,KAAK;QACZ,uCAAK,SAAS,EAAE,iBAAiB,EAAE,GAAG,EAAE,YAAY,GAAQ;QAC3D,QAAQ,CACL,CACP,CAAC;AACJ,CAAC,CAAC;AAtCW,sBAAc,kBAsCzB;;;;;;;;ACtDW;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,8EAA8E;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA,4CAA4C;AAC5C;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D;AACA;AACA;AACA;AACA;AACA,eAAe,mBAAO,CAAC,CAAQ;AAC/B,+BAA+B,mBAAO,CAAC,CAA2B;AAClE,+BAA+B,mBAAO,CAAC,CAAe;AACtD,8BAA8B,mBAAO,CAAC,EAAsB;AAC5D,iCAAiC,mBAAO,CAAC,EAAiB;AAC1D,cAAc,mBAAO,CAAC,EAAS;AAC/B,eAAe,mBAAO,CAAC,EAAe;AACtC,iBAAiB,mBAAO,CAAC,EAAY;AACrC,8BAA8B,mBAAO,CAAC,EAAsB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,kCAAkC,eAAe;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE,2CAA2C,GAAG,uBAAuB;AAC9I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA,iDAAiD,OAAO;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,0BAA0B;AACvE;AACA,yCAAyC,oBAAoB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,aAAa;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,qDAAqD,OAAO;AAC5D;AACA;AACA;AACA;AACA;AACA,+DAA+D,kCAAkC;AACjG;AACA,wDAAwD,WAAW;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+EAA+E,0CAA0C,EAAE;AAC3H,yCAAyC,OAAO;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+EAA+E,0CAA0C,EAAE;AAC3H,yCAAyC,OAAO;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,mDAAmD,OAAO;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,uDAAuD,OAAO;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,2CAA2C;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,wBAAwB;AACxC;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,oCAAoC;AACpD;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,IAAI;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,IAAI;AACpB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,IAAI;AACpB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,YAAY;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,YAAY;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,eAAe;;;;;;;;ACl8Bf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB;;AAEnB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,sBAAsB;AACvC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,cAAc;AACd;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA,iCAAiC,QAAQ;AACzC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;AACA,sCAAsC,QAAQ;AAC9C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;;AAEA;AACA,QAAQ,yBAAyB;AACjC;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,6DAA6D,aAAa;AAC1E;AACA,6DAA6D,aAAa;AAC1E;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,oCAAoC,aAAa;AACjD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;;;;;;AChfA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,mBAAO,CAAC,CAA2B;;AAEjD;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY,aAAa;AACzB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA,aAAa,uBAAuB;AACpC;;AAEA;AACA;;AAEA;AACA,eAAe,uBAAuB;AACtC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY,aAAa;AACzB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA,aAAa,uBAAuB;AACpC;;AAEA;AACA;;AAEA;AACA,eAAe,uBAAuB;AACtC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACjGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,IAAI;AAChB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACtBa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,8EAA8E;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA,gDAAgD,OAAO;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,MAAM,gBAAgB;AACzC;AACA;AACA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mBAAO,CAAC,CAAQ;AAC/B,gBAAgB,mBAAO,CAAC,EAAkB;AAC1C,gCAAgC,mBAAO,CAAC,EAAkB;AAC1D,cAAc,mBAAO,CAAC,EAAU;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA,yDAAyD,iCAAiC,gDAAgD,gDAAgD,+CAA+C,uCAAuC;AAChR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,qBAAqB,2KAA2K;AACnO;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB,gBAAgB,0BAA0B;AAC1C,gBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,cAAc;AAC9B,gBAAgB;AAChB;AACA;AACA;AACA,0BAA0B,4CAA4C;AACtE;AACA;AACA;AACA,qCAAqC,sCAAsC;AAC3E;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,gBAAgB,cAAc;AAC9B;AACA;AACA;AACA,0BAA0B,4CAA4C;AACtE;AACA;AACA;AACA,qCAAqC,sCAAsC;AAC3E;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,eAAe;;;;;;;;AC3XF;AACb;AACA,4CAA4C;AAC5C;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,oBAAoB,GAAG,wBAAwB;AAC/C,cAAc,mBAAO,CAAC,EAAS;AAC/B,gCAAgC,mBAAO,CAAC,EAAW;AACnD,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;;;;;;;;ACvDP;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,MAAM,gBAAgB;AACzC;AACA;AACA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,qBAAqB,GAAG,2BAA2B,GAAG,oBAAoB,GAAG,wBAAwB,GAAG,kBAAkB,GAAG,sBAAsB,GAAG,mCAAmC,GAAG,qBAAqB,GAAG,qBAAqB,GAAG,mBAAmB,GAAG,oBAAoB,GAAG,kBAAkB,GAAG,qBAAqB;AACnU,iCAAiC,mBAAO,CAAC,EAA2B;AACpE,iBAAiB,mBAAO,CAAC,EAAY;AACrC;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY;AACZ;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA,uCAAuC,OAAO;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,oBAAoB;AACpB,2BAA2B,wCAAwC;AACnE,2BAA2B,gCAAgC;AAC3D,mBAAmB;AACnB,4BAA4B,wCAAwC;AACpE,4BAA4B,gCAAgC;AAC5D;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,SAAS;AACrB,YAAY,MAAM;AAClB,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,qBAAqB;;;;;;;AC/PrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,IAAI;AAChB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACtBa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,gBAAgB,GAAG,iBAAiB,GAAG,cAAc,GAAG,aAAa,GAAG,gBAAgB;AACxF;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;;;;;;;;ACtDH;AACb,8CAA6C,CAAC,cAAc,EAAC;AAC7D,kBAAkB,GAAG,gBAAgB,GAAG,eAAe,GAAG,sBAAsB,GAAG,oBAAoB,GAAG,mBAAmB,GAAG,cAAc;AAC9I;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,UAAU;AACrC,cAAc;AACd,gCAAgC,cAAc;AAC9C,mBAAmB;AACnB,iCAAiC,oBAAoB;AACrD,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,4BAA4B,kBAAkB;AAC9C,eAAe;AACf,6BAA6B,wBAAwB;AACrD,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;;;;;;;;ACzCF;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,8EAA8E;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA,kCAAkC,oCAAoC,aAAa,EAAE,EAAE;AACvF,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA,yCAAyC,6BAA6B;AACtE,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,4BAA4B,mBAAO,CAAC,EAAU;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,2CAA2C;AAC3G;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,gCAAgC,kCAAkC,EAAE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,uEAAuE,eAAe;AACtF;AACA;AACA;AACA,kCAAkC,aAAa;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,2CAA2C;AAC3G;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,eAAe;;;;;;;;AC7QF;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,8EAA8E;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA6C,CAAC,cAAc,EAAC;AAC7D,qBAAqB,GAAG,sBAAsB,GAAG,uBAAuB,GAAG,sBAAsB,GAAG,mBAAmB,GAAG,YAAY,GAAG,YAAY;AACrJ;AACA;AACA;AACA;AACA;AACA,eAAe,mBAAO,CAAC,CAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,YAAY,MAAM;AAClB;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,8DAA8D,OAAO;AACrE;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,eAAe;;;;;;;;ACjJF;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,MAAM,gBAAgB;AACzC;AACA;AACA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA,oDAAoD,QAAQ;AAC5D;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,iCAAiC,GAAG,8BAA8B,GAAG,wCAAwC,GAAG,0BAA0B;AAC1I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,mBAAO,CAAC,EAA+B;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,UAAU;AACtB,YAAY;AACZ;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA,WAAW,UAAU;AACrB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA,iCAAiC;AACjlB;AACA;AACA;AACA,gCAAgC,aAAa;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,eAAe;;;;;;;ACrUf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY,MAAM;AAClB;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA,iBAAiB,QAAQ;AACzB;AACA;;;;;;;;ACxCa;AACb;AACA,4CAA4C;AAC5C;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,oCAAoC,GAAG,+BAA+B;AACtE,+BAA+B,mBAAO,CAAC,CAAU;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,IAAI;AAChB,YAAY,MAAM;AAClB,YAAY,MAAM;AAClB,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,OAAO;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,6BAA6B,EAAE;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,OAAO;AACnD;AACA;AACA;AACA,2BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,2BAA2B,EAAE;AAC1E;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,IAAI;AAChB,YAAY,IAAI;AAChB,YAAY,MAAM;AAClB,YAAY,OAAO;AACnB,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kCAAkC;AACrD;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,qCAAqC;AACxD;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA,oCAAoC;;;;;;;;ACnOvB;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,wBAAwB,GAAG,wBAAwB;AACnD,8BAA8B,mBAAO,CAAC,EAA0B;AAChE,8BAA8B,mBAAO,CAAC,EAA0B;AAChE,mCAAmC,mBAAO,CAAC,EAA+B;AAC1E,kCAAkC,mBAAO,CAAC,EAAsC;AAChF,6BAA6B,mBAAO,CAAC,EAAiC;AACtE,mCAAmC,mBAAO,CAAC,EAAuC;AAClF;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,cAAc;AACtF;AACA;AACA,wBAAwB;AACxB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;;;;;;;;ACpEa;AACb,8CAA6C,CAAC,cAAc,EAAC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;;;;;;;;ACRF;AACb;AACA,4CAA4C;AAC5C;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,6BAA6B,mBAAO,CAAC,EAAQ;AAC7C,8BAA8B,mBAAO,CAAC,EAAS;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;;;;;;;;ACrCF;AACb,8CAA6C,CAAC,cAAc,EAAC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;;;;;;;;ACVF;AACb,8CAA6C,CAAC,cAAc,EAAC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;;;;;;;;AC/BF;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,8EAA8E;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA,4CAA4C;AAC5C;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,cAAc,mBAAO,CAAC,EAAgB;AACtC,4CAA4C,mBAAO,CAAC,EAAmC;AACvF,4CAA4C,mBAAO,CAAC,EAAmC;AACvF,aAAa,mBAAO,CAAC,EAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,eAAe;;;;;;;AC3Df,MAAM,aAAa,OAAO,UAAU,+DAA+D,uBAAuB,EAAE,0DAA0D,4FAA4F,eAAe,wCAAwC,SAAS,GAAG,MAAM,cAAc,cAAc,EAAE,mCAAmC,yBAAyB,yBAAyB,0BAA0B,wBAAwB,wBAAwB,yBAAyB,yBAAyB,qCAAqC,iBAAiB,wFAAwF,uLAAuL,kDAAkD,iDAAiD,sBAAsB,GAAG,IAAI,iBAAiB,I;;;;;;ACAhiC,MAAM,aAAa,OAAO,UAAU,+DAA+D,uBAAuB,EAAE,0DAA0D,4FAA4F,eAAe,wCAAwC,SAAS,GAAG,MAAM,cAAc,cAAc,EAAE,iCAAiC,yBAAyB,yBAAyB,6BAA6B,qBAAqB,2CAA2C,4CAA4C,oCAAoC,oBAAoB,sCAAsC,kDAAkD,6CAA6C,GAAG,IAAI,iBAAiB,I;;;;;;;ACA7xB;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,8EAA8E;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA6C,CAAC,cAAc,EAAC;AAC7D,iCAAiC,GAAG,2BAA2B;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,mBAAO,CAAC,EAAW;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA,wEAAwE,6BAA6B,EAAE;AACvG;AACA;AACA,sDAAsD,6BAA6B,EAAE;AACrF;AACA;AACA,sDAAsD,mCAAmC,EAAE;AAC3F;AACA;AACA;AACA;AACA;AACA,sDAAsD,+BAA+B,EAAE;AACvF;AACA;AACA,sDAAsD,8CAA8C,EAAE;AACtG;AACA;AACA,KAAK;AACL;AACA,iCAAiC;;;;;;;;AChGpB;AACb,8CAA6C,CAAC,cAAc,EAAC;AAC7D,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,mBAAO,CAAC,EAAqB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,uBAAuB;;;;;;;;AC1CV;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,mBAAmB,GAAG,0BAA0B,GAAG,wBAAwB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,OAAO;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;;;;;;;;AC/DN;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,8EAA8E;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA,4CAA4C;AAC5C;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,mBAAO,CAAC,EAAgB;AACtC,uCAAuC,mBAAO,CAAC,EAA8B;AAC7E,uCAAuC,mBAAO,CAAC,EAA8B;AAC7E,aAAa,mBAAO,CAAC,EAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,OAAO;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,SAAS;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,eAAe;;;;;;;ACxLf,MAAM,aAAa,OAAO,UAAU,+DAA+D,uBAAuB,EAAE,0DAA0D,4FAA4F,eAAe,wCAAwC,SAAS,GAAG,MAAM,cAAc,cAAc,EAAE,mCAAmC,0BAA0B,8BAA8B,yBAAyB,0BAA0B,wBAAwB,8BAA8B,gCAAgC,iCAAiC,yBAAyB,wBAAwB,4BAA4B,mCAAmC,mCAAmC,iBAAiB,oIAAoI,+DAA+D,uLAAuL,yCAAyC,0BAA0B,4BAA4B,iDAAiD,sBAAsB,GAAG,IAAI,iBAAiB,I;;;;;;ACA11C,MAAM,aAAa,OAAO,UAAU,+DAA+D,uBAAuB,EAAE,0DAA0D,4FAA4F,eAAe,wCAAwC,SAAS,GAAG,MAAM,cAAc,cAAc,EAAE,iCAAiC,yBAAyB,wBAAwB,4BAA4B,gCAAgC,+CAA+C,qBAAqB,gDAAgD,yFAAyF,6CAA6C,GAAG,IAAI,iBAAiB,I;;;;;;;ACA5wB;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,8EAA8E;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA6C,CAAC,cAAc,EAAC;AAC7D,iCAAiC,GAAG,2BAA2B;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,mBAAO,CAAC,EAAW;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,2BAA2B;AAC3B;AACA;AACA;AACA,wEAAwE,6BAA6B,EAAE;AACvG;AACA;AACA,sDAAsD,6BAA6B,EAAE;AACrF;AACA;AACA,sDAAsD,mCAAmC,EAAE;AAC3F;AACA;AACA;AACA;AACA;AACA,sDAAsD,iCAAiC,EAAE;AACzF;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,sDAAsD,sEAAsE,EAAE;AAC9H;AACA;AACA,KAAK;AACL;AACA,iCAAiC;;;;;;;;ACpEpB;AACb;AACA,4CAA4C;AAC5C;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,mBAAO,CAAC,EAAe;AACpC,uCAAuC,mBAAO,CAAC,EAAkB;AACjE,qCAAqC,mBAAO,CAAC,EAAgB;AAC7D;AACA,eAAe;;;;;;;;AChBF;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,8EAA8E;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA,4CAA4C;AAC5C;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,cAAc,mBAAO,CAAC,EAAgB;AACtC,iDAAiD,mBAAO,CAAC,EAAwC;AACjG,iDAAiD,mBAAO,CAAC,EAAwC;AACjG,aAAa,mBAAO,CAAC,EAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,SAAS;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,eAAe;;;;;;;AClJf,MAAM,aAAa,OAAO,UAAU,+DAA+D,uBAAuB,EAAE,0DAA0D,4FAA4F,eAAe,wCAAwC,SAAS,GAAG,MAAM,cAAc,cAAc,EAAE,mCAAmC,0BAA0B,8BAA8B,2BAA2B,yBAAyB,+BAA+B,0BAA0B,wBAAwB,8BAA8B,gCAAgC,iCAAiC,yBAAyB,oDAAoD,+CAA+C,iCAAiC,mCAAmC,iBAAiB,oIAAoI,+DAA+D,uFAAuF,4FAA4F,iFAAiF,iCAAiC,+BAA+B,+BAA+B,oeAAoe,kEAAkE,yCAAyC,iDAAiD,sBAAsB,GAAG,IAAI,iBAAiB,I;;;;;;ACA7lE,MAAM,aAAa,OAAO,UAAU,+DAA+D,uBAAuB,EAAE,0DAA0D,4FAA4F,eAAe,wCAAwC,SAAS,GAAG,MAAM,cAAc,cAAc,EAAE,iCAAiC,yBAAyB,qBAAqB,2BAA2B,GAAG,IAAI,iBAAiB,I;;;;;;;ACA9e;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,8EAA8E;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA,4CAA4C;AAC5C;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,aAAa,mBAAO,CAAC,EAAe;AACpC,cAAc,mBAAO,CAAC,EAAgB;AACtC,+CAA+C,mBAAO,CAAC,EAAsC;AAC7F,uCAAuC,mBAAO,CAAC,EAA8B;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,SAAS;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,OAAO;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,eAAe;;;;;;;AC9Kf,MAAM,aAAa,OAAO,UAAU,+DAA+D,uBAAuB,EAAE,0DAA0D,4FAA4F,eAAe,wCAAwC,SAAS,GAAG,MAAM,cAAc,cAAc,EAAE,mCAAmC,0BAA0B,8BAA8B,yBAAyB,2BAA2B,0BAA0B,wBAAwB,8BAA8B,gCAAgC,iCAAiC,yBAAyB,wBAAwB,4BAA4B,oDAAoD,iCAAiC,mCAAmC,iBAAiB,oIAAoI,+DAA+D,uCAAuC,iFAAiF,4EAA4E,mFAAmF,8JAA8J,iJAAiJ,oEAAoE,yCAAyC,0BAA0B,4BAA4B,iDAAiD,sBAAsB,GAAG,IAAI,iBAAiB,I;;;;;;;ACA72D;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,8EAA8E;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA,kCAAkC,oCAAoC,aAAa,EAAE,EAAE;AACvF,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA,yCAAyC,6BAA6B;AACtE,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,MAAM,gBAAgB;AACzC;AACA;AACA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,4BAA4B,mBAAO,CAAC,EAAU;AAC9C,+BAA+B,mBAAO,CAAC,CAAW;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,eAAe;;;;;;;;ACnPf,iD;;;;;;;;;;;;;ACAA,wDAAyC;AAOlC,MAAM,iBAAiB,GAAoB,CAAC,EAAE,QAAQ,EAAE,QAAQ,GAAG,aAAa,EAAE,EAAE,EAAE;IAC3F,OAAO,uCAAK,SAAS,EAAE,wBAAwB,QAAQ,EAAE,IAAG,QAAQ,CAAO,CAAC;AAC9E,CAAC,CAAC;AAFW,yBAAiB,qBAE5B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTF,qDAA8F;AAC9F,0DAA0G;AAC1G,uCAAoC;AAgB7B,MAAM,iBAAiB,GAAoB,CAAC,EAAE,QAAQ,EAAE,UAAU,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE;IAClF,YAAY;IACZ,MAAM,KAAK,GAAG,gBAAQ,EAAE,CAAC;IACzB,iBAAiB;IACjB,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,gBAAQ,CAA6B,IAAI,CAAC,CAAC;IACjE,oBAAoB;IACpB,MAAM,CAAC,YAAY,EAAE,eAAe,CAAC,GAAG,gBAAQ,CAAU,KAAK,CAAC,CAAC;IAEjE,iBAAS,CAAC,GAAG,EAAE;QACb,IAAI,KAAK,EAAE;YACT,wBAAwB;YACxB,MAAM,IAAI,GAAG,IAAI,gBAAmB,CAAC,KAAK,CAAC,QAAQ,EAAE,EAAE,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;YACjF,MAAM,CAAC,IAAI,CAAC,CAAC;YAEb,kBAAkB;YAClB,IAAI,OAAO,GAAG,IAAI,CAAC;YACnB,IAAI,UAAU,GAAG,CAAC,CAAC,IAAI,KAAK,CAAC,QAAQ,EAAE,CAAC,KAAK,GAAG,CAAC,EAAE;gBACjD,eAAe,CAAC,IAAI,CAAC,CAAC;gBACtB,2BAA2B;gBAC3B,OAAO;oBACL,UAAU,GAAG,CAAC;wBACZ,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,EAAE;4BACrB,eAAe,CAAC,KAAK,CAAC,CAAC;wBACzB,CAAC,EAAE,UAAU,CAAC;wBAChB,CAAC,CAAC,IAAI,CAAC;aACZ;YAED,UAAU;YACV,OAAO,GAAG,EAAE;gBACV,IAAI,IAAI;oBAAE,IAAI,CAAC,IAAI,EAAE,CAAC;gBACtB,IAAI,OAAO;oBAAE,YAAY,CAAC,OAAO,CAAC,CAAC;YACrC,CAAC,CAAC;SACH;IACH,CAAC,EAAE,CAAC,UAAU,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC,CAAC;IAElC,iBAAS,CAAC,GAAG,EAAE;QACb,IAAI;YACF,IAAI,GAAG,EAAE;gBACP,IAAI,YAAY,KAAK,IAAI,EAAE;oBACzB,GAAG,CAAC,KAAK,EAAE,CAAC;iBACb;qBAAM;oBACL,GAAG,CAAC,IAAI,EAAE,CAAC;iBACZ;aACF;SACF;QAAC,OAAO,CAAC,EAAE,GAAE;IAChB,CAAC,EAAE,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC,CAAC;IAExB,OAAO,CACL,uCAAK,SAAS,EAAE,mCAAmC,YAAY,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,EAAE;QACvF,0CACE,OAAO,EAAE,GAAG,EAAE,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EACvC,KAAK,EAAE,YAAY,CAAC,CAAC,CAAC,2BAA2B,CAAC,CAAC,CAAC,4BAA4B,GACxE,CACN,CACP,CAAC;AACJ,CAAC,CAAC;AAvDW,yBAAiB,qBAuD5B;;;;;;;ACzEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,mBAAO,CAAC,EAAgB;AAC7C,cAAc,mBAAO,CAAC,CAA2B;AACjD,cAAc,mBAAO,CAAC,EAAc;;AAEpC,uBAAuB,mBAAO,CAAC,EAAe;;AAE9C;AACA;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY,cAAc;AAC1B,YAAY,OAAO;AACnB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kCAAkC;AAClC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;AC1LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,aAAa;AACzB,YAAY,aAAa;AACzB,YAAY,OAAO;AACnB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,WAAW;AAC1B;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,WAAW;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,WAAW;;AAE1B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,kDAAkD;;AAElyBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,eAAe,WAAW;;AAE1B;;AAEA,YAAY;AACZ;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB;;AAEpB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,kBAAkB;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,YAAY;AAC5B,kBAAkB,SAAS;;AAE3B;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,aAAa,WAAW;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,UAAU;AACvB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,eAAe,WAAW;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,WAAW;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,GAAG;;AAEH;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;;;;;;;ACr2BA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY;AACZ;AACA,cAAc;AACd;;AAEA;AACA;AACA;AACA;;AAEA,iCAAiC,OAAO;AACxC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY;AACZ;AACA,wBAAwB;;AAExB;AACA;AACA,YAAY;;AAEZ;AACA;AACA,YAAY;;AAEZ;AACA;AACA,YAAY;;AAEZ;AACA;AACA;AACA,YAAY;;AAEZ;AACA;AACA;AACA,YAAY;;AAEZ;AACA;AACA,YAAY;;AAEZ;AACA;AACA;AACA,YAAY;;AAEZ;AACA;AACA;AACA,YAAY;;AAEZ;AACA;AACA,YAAY;;AAEZ;AACA;AACA;AACA,YAAY;;AAEZ;AACA;;AAEA;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY,OAAO;AACnB;AACA,yBAAyB;AACzB;AACA;AACA,gBAAgB;AAChB;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,aAAa;AACxB;AACA,2BAA2B;AAC3B;;AAEA,+CAA+C,OAAO;AACtD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY,aAAa;AACzB,YAAY,OAAO;AACnB;AACA,4BAA4B;AAC5B;AACA;;AAEA,+CAA+C,OAAO;AACtD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,SAAS;AACrB,YAAY;AACZ;AACA,oBAAoB;AACpB;AACA;AACA,4EAA4E,KAAK,wBAAwB;AACzG;AACA;;AAEA;AACA;;;;;;;ACzMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACfA,wDAA0B;AAC1B,uCAAoC;AAM7B,MAAM,WAAW,GAAoB,CAAC,EAAE,iBAAiB,GAAG,GAAG,EAAE,EAAE,EAAE;IAC1E,YAAY;IACZ,MAAM,KAAK,GAAG,gBAAQ,EAAE,CAAC;IAEzB;;OAEG;IACH,SAAS,IAAI,CAAC,KAAc;QAC1B,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,KAAK,EAAE;gBACV,KAAK,CAAC,SAAS,EAAE,CAAC,aAAa,CAAC,EAAE,QAAQ,EAAE,iBAAiB,EAAE,CAAC,CAAC;aAClE;iBAAM,IAAI,KAAK,GAAG,CAAC,EAAE;gBACpB,KAAK,CAAC,SAAS,EAAE,CAAC,YAAY,CAAC,EAAE,QAAQ,EAAE,iBAAiB,EAAE,CAAC,CAAC;aACjE;iBAAM,IAAI,KAAK,GAAG,CAAC,EAAE;gBACpB,KAAK,CAAC,SAAS,EAAE,CAAC,cAAc,CAAC,EAAE,QAAQ,EAAE,iBAAiB,EAAE,CAAC,CAAC;aACnE;SACF;IACH,CAAC;IAED,OAAO,CACL;QACE,uCAAK,SAAS,EAAC,6BAA6B;YAC1C,0CAAQ,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,KAAK,EAAC,SAAS,GAAU,CACrD;QACN,uCAAK,SAAS,EAAC,8BAA8B;YAC3C,0CAAQ,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,EAAC,UAAU,GAAU,CACvD;QACN,uCAAK,SAAS,EAAC,iCAAiC;YAC9C,0CAAQ,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,EAAE,EAAE,KAAK,EAAC,iBAAiB,GAAU,CAC5D,CACL,CACJ,CAAC;AACJ,CAAC,CAAC;AAhCW,mBAAW,eAgCtB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvCF,qDAA2D;AAC3D,uCAAoC;AAI7B,MAAM,iBAAiB,GAAoB,CAAC,EAAE,EAAE,EAAE;IACvD,YAAY;IACZ,MAAM,KAAK,GAAG,gBAAQ,EAAE,CAAC;IACzB,8BAA8B;IAC9B,MAAM,CAAC,YAAY,EAAE,aAAa,CAAC,GAAG,gBAAQ,CAAU,KAAK,CAAC,CAAC;IAC/D,8BAA8B;IAC9B,MAAM,YAAY,GAAG,cAAM,CAAiB,IAAI,CAAC,CAAC;IAElD,iBAAS,CAAC,GAAG,EAAE;QACb,IAAI,YAAY,CAAC,OAAO,EAAE;YACxB,MAAM,gBAAgB,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC;YAC5E,IAAI,gBAAgB,EAAE;gBACpB,IAAI,YAAY,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,QAAQ,CAAC,YAAY,CAAC;oBACpE,gBAAgB,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;gBAC/C,KAAK,CAAC,OAAO,EAAE,CAAC;gBAChB,IAAI,CAAC,YAAY,IAAI,gBAAgB,CAAC,SAAS,CAAC,QAAQ,CAAC,YAAY,CAAC;oBACpE,gBAAgB,CAAC,SAAS,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;gBAClD,KAAK,CAAC,OAAO,EAAE,CAAC;aACjB;SACF;IACH,CAAC,EAAE,CAAC,YAAY,EAAE,gBAAQ,CAAC,CAAC,CAAC;IAE7B,OAAO,CACL;QACE,uCAAK,GAAG,EAAE,YAAY,EAAE,SAAS,EAAE,uBAAuB,YAAY,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,YAAY,EAAE;YACtG,0CAAQ,OAAO,EAAE,GAAG,EAAE,CAAC,aAAa,CAAC,CAAC,YAAY,CAAC,EAAE,KAAK,EAAC,mBAAmB,GAAU,CACpF,CACL,CACJ,CAAC;AACJ,CAAC,CAAC;AA7BW,yBAAiB,qBA6B5B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClCF,qDAAmD;AACnD,uCAAoC;AAG7B,MAAM,aAAa,GAAoB,CAAC,EAAE,EAAE,EAAE;IACnD,YAAY;IACZ,MAAM,KAAK,GAAG,gBAAQ,EAAE,CAAC;IACzB,eAAe;IACf,MAAM,CAAC,MAAM,EAAE,SAAS,CAAC,GAAG,gBAAQ,CAAS,EAAE,CAAC,CAAC;IACjD,kBAAkB;IAClB,MAAM,CAAC,MAAM,EAAE,SAAS,CAAC,GAAG,gBAAQ,CAAuC,EAAE,CAAC,CAAC;IAC/E,WAAW;IACX,MAAM,CAAC,QAAQ,EAAE,WAAW,CAAC,GAAG,gBAAQ,CAAgB,IAAI,CAAC,CAAC;IAE9D,iBAAS,CAAC,GAAG,EAAE;QACb,MAAM,SAAS,GAAyC,EAAE,CAAC;QAC3D,IAAI,CAAC,QAAQ,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;YAClC,KAAK,CAAC,QAAQ,EAAE,CAAC,WAAW,CAAC,CAAC,GAAW,EAAE,UAAe,EAAQ,EAAE;gBAClE,IAAI,UAAU,CAAC,KAAK,IAAI,UAAU,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC;oBACnF,SAAS,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,UAAU,CAAC,KAAK,EAAE,CAAC,CAAC;YACzD,CAAC,CAAC,CAAC;SACJ;QACD,SAAS,CAAC,SAAS,CAAC,CAAC;IACvB,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;IAEb,iBAAS,CAAC,GAAG,EAAE;QACb,IAAI,QAAQ,EAAE;YACZ,KAAK,CAAC,QAAQ,EAAE,CAAC,gBAAgB,CAAC,QAAQ,EAAE,aAAa,EAAE,IAAI,CAAC,CAAC;YACjE,KAAK,CAAC,SAAS,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,iBAAiB,CAAC,QAAQ,CAAC,EAAE;gBAC3D,MAAM,EAAE,QAAQ;gBAChB,QAAQ,EAAE,GAAG;aACd,CAAC,CAAC;YACH,OAAO,GAAG,EAAE;gBACV,KAAK,CAAC,QAAQ,EAAE,CAAC,gBAAgB,CAAC,QAAQ,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC;YACpE,CAAC,CAAC;SACH;IACH,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC;IAEf,MAAM,aAAa,GAAG,CAAC,CAAC,EAAE;QACxB,MAAM,YAAY,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC;QACpC,MAAM,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,KAAK,YAAY,CAAC,CAAC;QACrE,IAAI,SAAS,EAAE;YACb,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YAC3B,SAAS,CAAC,EAAE,CAAC,CAAC;YACd,WAAW,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;SAC3B;aAAM;YACL,WAAW,CAAC,IAAI,CAAC,CAAC;YAClB,SAAS,CAAC,YAAY,CAAC,CAAC;SACzB;IACH,CAAC,CAAC;IAEF,OAAO,CACL;QACE,yCAAO,IAAI,EAAC,MAAM,EAAC,WAAW,EAAC,WAAW,EAAC,IAAI,EAAC,OAAO,EAAC,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,aAAa,GAAI;QAClG,4CAAU,EAAE,EAAC,OAAO,IACjB,MAAM,CAAC,GAAG,CAAC,CAAC,KAAoC,EAAE,EAAE,CAAC,CACpD,0CAAQ,GAAG,EAAE,KAAK,CAAC,EAAE,EAAE,KAAK,EAAE,KAAK,CAAC,KAAK,IACtC,KAAK,CAAC,KAAK,CACL,CACV,CAAC,CACO,CACP,CACP,CAAC;AACJ,CAAC,CAAC;AA3DW,qBAAa,iBA2DxB;;;;;;UC/DF;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;;;;;;;;;ACLA,uCAAoF;AA6BlF,0FA7BO,gBAAQ,QA6BP;AACR,mGA9BiB,yBAAiB,QA8BjB;AACjB,8FA/BoC,oBAAY,QA+BpC;AACZ,gGAhCkD,sBAAc,QAgClD;AA/BhB,gDAAkD;AA0BhD,gGA1BO,+BAAc,QA0BP;AAzBhB,oDAAiE;AAoB/D,mGApBO,qCAAiB,QAoBP;AAnBnB,oDAAiE;AAqB/D,mGArBO,qCAAiB,QAqBP;AApBnB,8CAAqD;AAwBnD,6FAxBO,yBAAW,QAwBP;AAvBb,oDAAiE;AAoB/D,mGApBO,qCAAiB,QAoBP;AAnBnB,gDAAyD;AAoBvD,+FApBO,6BAAa,QAoBP;;;;;;;;AC3Bf","file":"react-sigma-v2.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"graphology\"), require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"graphology\", \"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"react-sigma-v2\"] = factory(require(\"graphology\"), require(\"react\"));\n\telse\n\t\troot[\"react-sigma-v2\"] = factory(root[\"graphology\"], root[\"react\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE__42__, __WEBPACK_EXTERNAL_MODULE__2__) {\nreturn ","import { useEffect, useState } from \"react\";\nimport { Sigma } from \"sigma/sigma\";\nimport { Settings } from \"sigma/settings\";\nimport Graph from \"graphology\";\nimport { useSigmaContext } from \"./context\";\nimport { EventHandlers } from \"./index\";\n\nexport function useSigma(): Sigma {\n  return useSigmaContext().sigma;\n}\n\nexport function useLoadGraph(): (graph: Graph, clear?: boolean) => void {\n  const sigma = useSigma();\n\n  return (graph: Graph, clear = true) => {\n    if (sigma && graph) {\n      if (clear && sigma.getGraph().order > 0) sigma.getGraph().clear();\n      sigma.getGraph().import(graph);\n    }\n  };\n}\n\nexport function useRegisterEvents(): (eventHandlers: Partial<EventHandlers>) => void {\n  const sigma = useSigma();\n  const [eventHandlers, setEventHandlers] = useState<Partial<EventHandlers>>({});\n\n  useEffect(() => {\n    if (sigma && eventHandlers) {\n      Object.keys(eventHandlers).forEach(name => {\n        if (name === \"cameraUpdated\") {\n          sigma.camera.on(name, eventHandlers[name]);\n        } else {\n          sigma.on(name, eventHandlers[name]);\n        }\n      });\n      // cleanup\n      return () => {\n        Object.keys(eventHandlers).forEach(name => {\n          if (name === \"cameraUpdated\") {\n            sigma.camera.removeListener(name, eventHandlers[name]);\n          } else {\n            sigma.removeListener(name, eventHandlers[name]);\n          }\n        });\n      };\n    }\n  }, [sigma, eventHandlers]);\n\n  return setEventHandlers;\n}\n\nexport function useSetSettings(): (settings: Partial<Settings>) => void {\n  const sigma = useSigma();\n  const [settings, setSettings] = useState<Partial<Settings>>({});\n\n  useEffect(() => {\n    if (sigma && settings) {\n      const prevSettings: Partial<Settings> = {};\n\n      Object.keys(settings).forEach(key => {\n        prevSettings[key] = sigma.getSetting(key);\n        sigma.setSetting(key, settings[key]);\n      });\n\n      // cleanup\n      return () => {\n        Object.keys(prevSettings).forEach(key => {\n          sigma.setSetting(key, prevSettings[key]);\n        });\n      };\n    }\n  }, [sigma, settings]);\n\n  return setSettings;\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","import { createContext, useContext } from \"react\";\nimport { Sigma } from \"sigma/sigma\";\n\nexport interface SigmaContextInterface {\n  sigma: Sigma;\n}\n\nexport const SigmaContext = createContext<SigmaContextInterface | null>(null);\n\nexport const SigmaProvider = SigmaContext.Provider;\n\nexport function useSigmaContext(): SigmaContextInterface {\n  const context = useContext(SigmaContext);\n  if (context == null) {\n    throw new Error(\"No context provided: useSigmaContext() can only be used in a descendant of <SigmaContainer>\");\n  }\n  return context;\n}\n","import React, { CSSProperties, ReactNode, useEffect, useMemo, useRef, useState } from \"react\";\nimport Sigma from \"sigma/sigma\";\nimport { Settings } from \"sigma/settings\";\nimport Graph from \"graphology\";\nimport { GraphOptions } from \"graphology-types\";\nimport { SigmaContext, SigmaProvider } from \"./context\";\n\ninterface SigmaContainerProps {\n  graphOptions?: GraphOptions;\n  initialSettings?: Settings;\n  id?: string;\n  className?: string;\n  style?: CSSProperties;\n  children?: ReactNode;\n}\n\nexport const SigmaContainer: React.FC<SigmaContainerProps> = ({\n  graphOptions,\n  id,\n  className,\n  style,\n  initialSettings,\n  children,\n}) => {\n  // HTML element for the sigma instance\n  const containerRef = useRef<HTMLDivElement>(null);\n  // Common html props for the container\n  const [props] = useState({ className: `react-sigma-v2 ${className ? className : \"\"}`, id, style });\n  // The sigma instance\n  const [sigma, setSigma] = useState<Sigma | null>(null);\n\n  // When graphOptions or settings changed\n  useEffect(() => {\n    if (containerRef.current !== null) {\n      const instance = new Sigma(new Graph(graphOptions), containerRef.current, initialSettings);\n      setSigma(instance);\n    }\n    return () => {\n      setSigma(instance => {\n        if (instance) instance.kill();\n        return null;\n      });\n    };\n  }, [containerRef]);\n\n  const context = useMemo(() => (sigma ? { sigma } : null), [sigma]);\n  const contents = context !== null ? <SigmaProvider value={context}>{children}</SigmaProvider> : null;\n\n  return (\n    <div {...props}>\n      <div className={\"sigma-container\"} ref={containerRef}></div>\n      {contents}\n    </div>\n  );\n};\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Sigma.js\n * ========\n * @module\n */\nvar events_1 = require(\"events\");\nvar extent_1 = __importDefault(require(\"graphology-metrics/extent\"));\nvar camera_1 = __importDefault(require(\"./core/camera\"));\nvar mouse_1 = __importDefault(require(\"./core/captors/mouse\"));\nvar quadtree_1 = __importDefault(require(\"./core/quadtree\"));\nvar utils_1 = require(\"./utils\");\nvar labels_1 = require(\"./core/labels\");\nvar settings_1 = require(\"./settings\");\nvar touch_1 = __importDefault(require(\"./core/captors/touch\"));\nvar nodeExtent = extent_1.default.nodeExtent, edgeExtent = extent_1.default.edgeExtent;\n/**\n * Constants.\n */\nvar PIXEL_RATIO = utils_1.getPixelRatio();\nvar WEBGL_OVERSAMPLING_RATIO = utils_1.getPixelRatio();\n/**\n * Important functions.\n */\nfunction applyNodeDefaults(settings, key, data) {\n    if (!data.hasOwnProperty(\"x\") || !data.hasOwnProperty(\"y\"))\n        throw new Error(\"Sigma: could not find a valid position (x, y) for node \\\"\" + key + \"\\\". All your nodes must have a number \\\"x\\\" and \\\"y\\\". Maybe your forgot to apply a layout or your \\\"nodeReducer\\\" is not returning the correct data?\");\n    if (!data.color)\n        data.color = settings.defaultNodeColor;\n    if (!data.label)\n        data.label = \"\";\n    if (!data.size)\n        data.size = 2;\n    if (!data.hasOwnProperty(\"hidden\"))\n        data.hidden = false;\n    if (!data.hasOwnProperty(\"highlighted\"))\n        data.highlighted = false;\n}\nfunction applyEdgeDefaults(settings, key, data) {\n    if (!data.color)\n        data.color = settings.defaultEdgeColor;\n    if (!data.label)\n        data.label = \"\";\n    if (!data.size)\n        data.size = 0.5;\n    if (!data.hasOwnProperty(\"hidden\"))\n        data.hidden = false;\n}\n/**\n * Main class.\n *\n * @constructor\n * @param {Graph}       graph     - Graph to render.\n * @param {HTMLElement} container - DOM container in which to render.\n * @param {object}      settings  - Optional settings.\n */\nvar Sigma = /** @class */ (function (_super) {\n    __extends(Sigma, _super);\n    function Sigma(graph, container, settings) {\n        if (settings === void 0) { settings = {}; }\n        var _this = _super.call(this) || this;\n        _this.elements = {};\n        _this.canvasContexts = {};\n        _this.webGLContexts = {};\n        _this.activeListeners = {};\n        _this.quadtree = new quadtree_1.default();\n        _this.nodeDataCache = {};\n        _this.edgeDataCache = {};\n        _this.nodeKeyToIndex = {};\n        _this.edgeKeyToIndex = {};\n        _this.nodeExtent = null;\n        _this.edgeExtent = null;\n        _this.normalizationFunction = utils_1.createNormalizationFunction({\n            x: [-Infinity, Infinity],\n            y: [-Infinity, Infinity],\n        });\n        // Starting dimensions\n        _this.width = 0;\n        _this.height = 0;\n        // State\n        _this.highlightedNodes = new Set();\n        _this.displayedLabels = new Set();\n        _this.hoveredNode = null;\n        _this.renderFrame = null;\n        _this.renderHighlightedNodesFrame = null;\n        _this.needToProcess = false;\n        _this.needToSoftProcess = false;\n        // programs\n        _this.nodePrograms = {};\n        _this.edgePrograms = {};\n        _this.settings = utils_1.assignDeep({}, settings_1.DEFAULT_SETTINGS, settings);\n        // Validating\n        settings_1.validateSettings(_this.settings);\n        utils_1.validateGraph(graph);\n        if (!(container instanceof HTMLElement))\n            throw new Error(\"Sigma: container should be an html element.\");\n        // Properties\n        _this.graph = graph;\n        _this.container = container;\n        _this.initializeCache();\n        // Initializing contexts\n        _this.createWebGLContext(\"edges\");\n        _this.createWebGLContext(\"nodes\");\n        _this.createCanvasContext(\"edgeLabels\");\n        _this.createCanvasContext(\"labels\");\n        _this.createCanvasContext(\"hovers\");\n        _this.createCanvasContext(\"mouse\");\n        // Blending\n        var gl = _this.webGLContexts.nodes;\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.enable(gl.BLEND);\n        gl = _this.webGLContexts.edges;\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.enable(gl.BLEND);\n        // Loading programs\n        for (var type in _this.settings.nodeProgramClasses) {\n            var NodeProgramClass = _this.settings.nodeProgramClasses[type];\n            _this.nodePrograms[type] = new NodeProgramClass(_this.webGLContexts.nodes);\n        }\n        for (var type in _this.settings.edgeProgramClasses) {\n            var EdgeProgramClass = _this.settings.edgeProgramClasses[type];\n            _this.edgePrograms[type] = new EdgeProgramClass(_this.webGLContexts.edges);\n        }\n        // Initial resize\n        _this.resize();\n        // Initializing the camera\n        _this.camera = new camera_1.default();\n        // Binding camera events\n        _this.bindCameraHandlers();\n        // Initializing captors\n        _this.mouseCaptor = new mouse_1.default(_this.elements.mouse, _this.camera);\n        _this.touchCaptor = new touch_1.default(_this.elements.mouse, _this.camera);\n        // Binding event handlers\n        _this.bindEventHandlers();\n        // Binding graph handlers\n        _this.bindGraphHandlers();\n        // Processing data for the first time & render\n        _this.process();\n        _this.render();\n        return _this;\n    }\n    /**---------------------------------------------------------------------------\n     * Internal methods.\n     **---------------------------------------------------------------------------\n     */\n    /**\n     * Internal function used to create a canvas element.\n     * @param  {string} id - Context's id.\n     * @return {Sigma}\n     */\n    Sigma.prototype.createCanvas = function (id) {\n        var canvas = utils_1.createElement(\"canvas\", {\n            position: \"absolute\",\n        }, {\n            class: \"sigma-\" + id,\n        });\n        this.elements[id] = canvas;\n        this.container.appendChild(canvas);\n        return canvas;\n    };\n    /**\n     * Internal function used to create a canvas context and add the relevant\n     * DOM elements.\n     *\n     * @param  {string} id - Context's id.\n     * @return {Sigma}\n     */\n    Sigma.prototype.createCanvasContext = function (id) {\n        var canvas = this.createCanvas(id);\n        var contextOptions = {\n            preserveDrawingBuffer: false,\n            antialias: false,\n        };\n        this.canvasContexts[id] = canvas.getContext(\"2d\", contextOptions);\n        return this;\n    };\n    /**\n     * Internal function used to create a canvas context and add the relevant\n     * DOM elements.\n     *\n     * @param  {string} id - Context's id.\n     * @return {Sigma}\n     */\n    Sigma.prototype.createWebGLContext = function (id) {\n        var canvas = this.createCanvas(id);\n        var contextOptions = {\n            preserveDrawingBuffer: false,\n            antialias: false,\n        };\n        var context;\n        // First we try webgl2 for an easy performance boost\n        context = canvas.getContext(\"webgl2\", contextOptions);\n        // Else we fall back to webgl\n        if (!context)\n            context = canvas.getContext(\"webgl\", contextOptions);\n        // Edge, I am looking right at you...\n        if (!context)\n            context = canvas.getContext(\"experimental-webgl\", contextOptions);\n        this.webGLContexts[id] = context;\n        return this;\n    };\n    /**\n     * Method used to initialize display data cache.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.initializeCache = function () {\n        var _this = this;\n        var graph = this.graph;\n        // NOTE: the data caches are never reset to avoid paying a GC cost\n        // But this could prove to be a bad decision. In which case just \"reset\"\n        // them here.\n        var i = 0;\n        graph.forEachNode(function (key) {\n            _this.nodeKeyToIndex[key] = i++;\n            _this.nodeDataCache[key] = {};\n        });\n        i = 0;\n        graph.forEachEdge(function (key) {\n            _this.edgeKeyToIndex[key] = i++;\n            _this.edgeDataCache[key] = {};\n        });\n    };\n    /**\n     * Method binding camera handlers.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.bindCameraHandlers = function () {\n        var _this = this;\n        this.activeListeners.camera = function () {\n            _this.scheduleRefresh();\n        };\n        this.camera.on(\"updated\", this.activeListeners.camera);\n        return this;\n    };\n    /**\n     * Method binding event handlers.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.bindEventHandlers = function () {\n        var _this = this;\n        // Handling window resize\n        this.activeListeners.handleResize = function () {\n            _this.needToSoftProcess = true;\n            _this.scheduleRefresh();\n        };\n        window.addEventListener(\"resize\", this.activeListeners.handleResize);\n        // Function checking if the mouse is on the given node\n        var mouseIsOnNode = function (mouseX, mouseY, nodeX, nodeY, size) {\n            return (mouseX > nodeX - size &&\n                mouseX < nodeX + size &&\n                mouseY > nodeY - size &&\n                mouseY < nodeY + size &&\n                Math.sqrt(Math.pow(mouseX - nodeX, 2) + Math.pow(mouseY - nodeY, 2)) < size);\n        };\n        // Function returning the nodes in the mouse's quad\n        var getQuadNodes = function (mouseX, mouseY) {\n            var mouseGraphPosition = _this.camera.viewportToFramedGraph({ width: _this.width, height: _this.height }, { x: mouseX, y: mouseY });\n            // TODO: minus 1? lol\n            return _this.quadtree.point(mouseGraphPosition.x, 1 - mouseGraphPosition.y);\n        };\n        // Handling mouse move\n        this.activeListeners.handleMove = function (e) {\n            // NOTE: for the canvas renderer, testing the pixel's alpha should\n            // give some boost but this slows things down for WebGL empirically.\n            // TODO: this should be a method from the camera (or can be passed to graph to display somehow)\n            var sizeRatio = Math.pow(_this.camera.getState().ratio, 0.5);\n            var quadNodes = getQuadNodes(e.x, e.y);\n            var dimensions = { width: _this.width, height: _this.height };\n            // We will hover the node whose center is closest to mouse\n            var minDistance = Infinity, nodeToHover = null;\n            for (var i = 0, l = quadNodes.length; i < l; i++) {\n                var node = quadNodes[i];\n                var data = _this.nodeDataCache[node];\n                var pos = _this.camera.framedGraphToViewport(dimensions, data);\n                var size = data.size / sizeRatio;\n                if (mouseIsOnNode(e.x, e.y, pos.x, pos.y, size)) {\n                    var distance = Math.sqrt(Math.pow(e.x - pos.x, 2) + Math.pow(e.y - pos.y, 2));\n                    // TODO: sort by min size also for cases where center is the same\n                    if (distance < minDistance) {\n                        minDistance = distance;\n                        nodeToHover = node;\n                    }\n                }\n            }\n            if (nodeToHover && _this.hoveredNode !== nodeToHover) {\n                // Handling passing from one node to the other directly\n                if (_this.hoveredNode)\n                    _this.emit(\"leaveNode\", { node: _this.hoveredNode });\n                _this.hoveredNode = nodeToHover;\n                _this.emit(\"enterNode\", { node: nodeToHover });\n                _this.scheduleHighlightedNodesRender();\n                return;\n            }\n            // Checking if the hovered node is still hovered\n            if (_this.hoveredNode) {\n                var data = _this.nodeDataCache[_this.hoveredNode];\n                var pos = _this.camera.framedGraphToViewport(dimensions, data);\n                var size = data.size / sizeRatio;\n                if (!mouseIsOnNode(e.x, e.y, pos.x, pos.y, size)) {\n                    var node = _this.hoveredNode;\n                    _this.hoveredNode = null;\n                    _this.emit(\"leaveNode\", { node: node });\n                    return _this.scheduleHighlightedNodesRender();\n                }\n            }\n        };\n        // Handling click\n        var createClickListener = function (eventType) {\n            return function (e) {\n                var sizeRatio = Math.pow(_this.camera.getState().ratio, 0.5);\n                var quadNodes = getQuadNodes(e.x, e.y);\n                var dimensions = { width: _this.width, height: _this.height };\n                for (var i = 0, l = quadNodes.length; i < l; i++) {\n                    var node = quadNodes[i];\n                    var data = _this.nodeDataCache[node];\n                    var pos = _this.camera.framedGraphToViewport(dimensions, data);\n                    var size = data.size / sizeRatio;\n                    if (mouseIsOnNode(e.x, e.y, pos.x, pos.y, size))\n                        return _this.emit(eventType + \"Node\", { node: node, captor: e, event: e });\n                }\n                return _this.emit(eventType + \"Stage\", { event: e });\n            };\n        };\n        this.activeListeners.handleClick = createClickListener(\"click\");\n        this.activeListeners.handleRightClick = createClickListener(\"rightClick\");\n        this.activeListeners.handleDown = createClickListener(\"down\");\n        this.mouseCaptor.on(\"mousemove\", this.activeListeners.handleMove);\n        this.mouseCaptor.on(\"click\", this.activeListeners.handleClick);\n        this.mouseCaptor.on(\"rightClick\", this.activeListeners.handleRightClick);\n        this.mouseCaptor.on(\"mousedown\", this.activeListeners.handleDown);\n        // TODO\n        // Deal with Touch captor events\n        return this;\n    };\n    /**\n     * Method binding graph handlers\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.bindGraphHandlers = function () {\n        var _this = this;\n        var graph = this.graph;\n        this.activeListeners.graphUpdate = function () {\n            _this.needToProcess = true;\n            _this.scheduleRefresh();\n        };\n        this.activeListeners.softGraphUpdate = function () {\n            _this.needToSoftProcess = true;\n            _this.scheduleRefresh();\n        };\n        this.activeListeners.addNodeGraphUpdate = function (e) {\n            // Adding entry to cache\n            _this.nodeKeyToIndex[e.key] = graph.order - 1;\n            _this.nodeDataCache[e.key] = {};\n            _this.activeListeners.graphUpdate();\n        };\n        this.activeListeners.addEdgeGraphUpdate = function (e) {\n            // Adding entry to cache\n            _this.nodeKeyToIndex[e.key] = graph.order - 1;\n            _this.edgeDataCache[e.key] = {};\n            _this.activeListeners.graphUpdate();\n        };\n        // TODO: clean cache on drop!\n        // TODO: bind this on composed state events\n        // TODO: it could be possible to update only specific node etc. by holding\n        // a fixed-size pool of updated items\n        graph.on(\"nodeAdded\", this.activeListeners.addNodeGraphUpdate);\n        graph.on(\"nodeDropped\", this.activeListeners.graphUpdate);\n        graph.on(\"nodeAttributesUpdated\", this.activeListeners.softGraphUpdate);\n        graph.on(\"eachNodeAttributesUpdated\", this.activeListeners.graphUpdate);\n        graph.on(\"edgeAdded\", this.activeListeners.addEdgeGraphUpdate);\n        graph.on(\"edgeDropped\", this.activeListeners.graphUpdate);\n        graph.on(\"edgeAttributesUpdated\", this.activeListeners.softGraphUpdate);\n        graph.on(\"eachEdgeAttributesUpdated\", this.activeListeners.graphUpdate);\n        graph.on(\"edgesCleared\", this.activeListeners.graphUpdate);\n        graph.on(\"cleared\", this.activeListeners.graphUpdate);\n        return this;\n    };\n    /**\n     * Method used to process the whole graph's data.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.process = function (keepArrays) {\n        if (keepArrays === void 0) { keepArrays = false; }\n        var graph = this.graph, settings = this.settings;\n        // Clearing the quad\n        this.quadtree.clear();\n        // Clear the highlightedNodes\n        this.highlightedNodes = new Set();\n        // Computing extents\n        var nodeExtentProperties = [\"x\", \"y\", \"z\"];\n        if (this.settings.zIndex) {\n            nodeExtentProperties.push(\"z\");\n            this.edgeExtent = edgeExtent(graph, [\"z\"]);\n        }\n        this.nodeExtent = nodeExtent(graph, nodeExtentProperties);\n        // Rescaling function\n        this.normalizationFunction = utils_1.createNormalizationFunction(this.nodeExtent);\n        var nodeProgram = this.nodePrograms[this.settings.defaultNodeType];\n        if (!keepArrays)\n            nodeProgram.allocate(graph.order);\n        var nodes = graph.nodes();\n        // Handling node z-index\n        // TODO: z-index needs us to compute display data before hand\n        if (this.settings.zIndex)\n            nodes = utils_1.zIndexOrdering(this.nodeExtent.z, function (node) { return graph.getNodeAttribute(node, \"z\"); }, nodes);\n        for (var i = 0, l = nodes.length; i < l; i++) {\n            var node = nodes[i];\n            // Node display data resolution:\n            //   1. First we get the node's attributes\n            //   2. We optionally reduce them using the function provided by the user\n            //      Note that this function must return a total object and won't be merged\n            //   3. We apply our defaults, while running some vital checks\n            //   4. We apply the normalization function\n            var data = graph.getNodeAttributes(node);\n            if (settings.nodeReducer)\n                data = settings.nodeReducer(node, data);\n            // We shallow copy the data to avoid mutating both the graph and the reducer's result\n            data = Object.assign(this.nodeDataCache[node], data);\n            applyNodeDefaults(this.settings, node, data);\n            this.normalizationFunction.applyTo(data);\n            this.quadtree.add(node, data.x, 1 - data.y, data.size / this.width);\n            nodeProgram.process(data, data.hidden, i);\n            // Save the node in the highlighted set if needed\n            if (data.highlighted && !data.hidden)\n                this.highlightedNodes.add(node);\n            this.nodeKeyToIndex[node] = i;\n        }\n        // TODO: maybe we should bind and buffer as part of rendering?\n        // We also need to find when it is useful and when it's really not\n        nodeProgram.bind();\n        nodeProgram.bufferData();\n        var edgeProgram = this.edgePrograms[this.settings.defaultEdgeType];\n        if (!keepArrays)\n            edgeProgram.allocate(graph.size);\n        var edges = graph.edges();\n        // Handling edge z-index\n        if (this.settings.zIndex && this.edgeExtent)\n            edges = utils_1.zIndexOrdering(this.edgeExtent.z, function (edge) { return graph.getEdgeAttribute(edge, \"z\"); }, edges);\n        for (var i = 0, l = edges.length; i < l; i++) {\n            var edge = edges[i];\n            // Edge display data resolution:\n            //   1. First we get the edge's attributes\n            //   2. We optionally reduce them using the function provided by the user\n            //      Note that this function must return a total object and won't be merged\n            //   3. We apply our defaults, while running some vital checks\n            var data = graph.getEdgeAttributes(edge);\n            if (settings.edgeReducer)\n                data = settings.edgeReducer(edge, data);\n            // We shallow copy the data to avoid mutating both the graph and the reducer's result\n            data = Object.assign(this.edgeDataCache[edge], data);\n            applyEdgeDefaults(this.settings, edge, data);\n            var extremities = graph.extremities(edge), sourceData = this.nodeDataCache[extremities[0]], targetData = this.nodeDataCache[extremities[1]];\n            var hidden = data.hidden || sourceData.hidden || targetData.hidden;\n            edgeProgram.process(sourceData, targetData, data, hidden, i);\n            this.nodeKeyToIndex[edge] = i;\n        }\n        // Computing edge indices if necessary\n        if (!keepArrays && typeof edgeProgram.computeIndices === \"function\")\n            edgeProgram.computeIndices();\n        // TODO: maybe we should bind and buffer as part of rendering?\n        // We also need to find when it is useful and when it's really not\n        edgeProgram.bind();\n        edgeProgram.bufferData();\n        return this;\n    };\n    /**\n     * Method used to render labels.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.renderLabels = function () {\n        if (!this.settings.renderLabels)\n            return this;\n        var cameraState = this.camera.getState();\n        var dimensions = { width: this.width, height: this.height };\n        // Finding visible nodes to display their labels\n        var visibleNodes;\n        if (cameraState.ratio >= 1) {\n            // Camera is unzoomed so no need to ask the quadtree for visible nodes\n            visibleNodes = this.graph.nodes();\n        }\n        else {\n            // Let's ask the quadtree\n            var viewRectangle = this.camera.viewRectangle(dimensions);\n            visibleNodes = this.quadtree.rectangle(viewRectangle.x1, 1 - viewRectangle.y1, viewRectangle.x2, 1 - viewRectangle.y2, viewRectangle.height);\n        }\n        // Selecting labels to draw\n        var gridSettings = this.settings.labelGrid;\n        var labelsToDisplay = labels_1.labelsToDisplayFromGrid({\n            cache: this.nodeDataCache,\n            camera: this.camera,\n            cell: gridSettings.cell,\n            dimensions: dimensions,\n            displayedLabels: this.displayedLabels,\n            fontSize: this.settings.labelSize,\n            graph: this.graph,\n            renderedSizeThreshold: gridSettings.renderedSizeThreshold,\n            visibleNodes: visibleNodes,\n        });\n        // Drawing labels\n        var context = this.canvasContexts.labels;\n        var sizeRatio = Math.pow(cameraState.ratio, 0.5);\n        for (var i = 0, l = labelsToDisplay.length; i < l; i++) {\n            var data = this.nodeDataCache[labelsToDisplay[i]];\n            var _a = this.camera.framedGraphToViewport(dimensions, data), x = _a.x, y = _a.y;\n            // TODO: we can cache the labels we need to render until the camera's ratio changes\n            // TODO: this should be computed in the canvas components?\n            var size = data.size / sizeRatio;\n            this.settings.labelRenderer(context, {\n                key: labelsToDisplay[i],\n                label: data.label,\n                color: \"#000\",\n                size: size,\n                x: x,\n                y: y,\n            }, this.settings);\n        }\n        // Caching visible nodes and displayed labels\n        this.displayedLabels = new Set(labelsToDisplay);\n        return this;\n    };\n    /**\n     * Method used to render edge labels, based on which node labels were\n     * rendered.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.renderEdgeLabels = function () {\n        if (!this.settings.renderEdgeLabels)\n            return this;\n        var cameraState = this.camera.getState();\n        var sizeRatio = Math.pow(cameraState.ratio, 0.5);\n        var context = this.canvasContexts.edgeLabels;\n        var dimensions = { width: this.width, height: this.height };\n        // Clearing\n        context.clearRect(0, 0, this.width, this.height);\n        var edgeLabelsToDisplay = labels_1.edgeLabelsToDisplayFromNodes({\n            nodeDataCache: this.nodeDataCache,\n            edgeDataCache: this.edgeDataCache,\n            graph: this.graph,\n            hoveredNode: this.hoveredNode,\n            displayedNodeLabels: this.displayedLabels,\n            highlightedNodes: this.highlightedNodes,\n        });\n        for (var i = 0, l = edgeLabelsToDisplay.length; i < l; i++) {\n            var edge = edgeLabelsToDisplay[i], extremities = this.graph.extremities(edge), sourceData = this.nodeDataCache[extremities[0]], targetData = this.nodeDataCache[extremities[1]], edgeData = this.edgeDataCache[edgeLabelsToDisplay[i]];\n            var _a = this.camera.framedGraphToViewport(dimensions, sourceData), sourceX = _a.x, sourceY = _a.y;\n            var _b = this.camera.framedGraphToViewport(dimensions, targetData), targetX = _b.x, targetY = _b.y;\n            // TODO: we can cache the labels we need to render until the camera's ratio changes\n            // TODO: this should be computed in the canvas components?\n            var size = edgeData.size / sizeRatio;\n            this.settings.edgeLabelRenderer(context, {\n                key: edge,\n                label: edgeData.label,\n                color: edgeData.color,\n                size: size,\n            }, {\n                key: extremities[0],\n                x: sourceX,\n                y: sourceY,\n            }, {\n                key: extremities[1],\n                x: targetX,\n                y: targetY,\n            }, this.settings);\n        }\n        return this;\n    };\n    /**\n     * Method used to render the highlighted nodes.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.renderHighlightedNodes = function () {\n        var _this = this;\n        var camera = this.camera;\n        var sizeRatio = Math.pow(camera.getState().ratio, 0.5);\n        var context = this.canvasContexts.hovers;\n        // Clearing\n        context.clearRect(0, 0, this.width, this.height);\n        // Rendering\n        var render = function (node) {\n            var data = _this.nodeDataCache[node];\n            var _a = camera.framedGraphToViewport({ width: _this.width, height: _this.height }, data), x = _a.x, y = _a.y;\n            var size = data.size / sizeRatio;\n            _this.settings.hoverRenderer(context, {\n                key: node,\n                label: data.label,\n                color: data.color,\n                size: size,\n                x: x,\n                y: y,\n            }, _this.settings);\n        };\n        if (this.hoveredNode) {\n            render(this.hoveredNode);\n        }\n        this.highlightedNodes.forEach(render);\n    };\n    /**\n     * Method used to schedule a hover render.\n     *\n     */\n    Sigma.prototype.scheduleHighlightedNodesRender = function () {\n        var _this = this;\n        if (this.renderHighlightedNodesFrame || this.renderFrame)\n            return;\n        this.renderHighlightedNodesFrame = utils_1.requestFrame(function () {\n            // Resetting state\n            _this.renderHighlightedNodesFrame = null;\n            // Rendering\n            _this.renderHighlightedNodes();\n            _this.renderEdgeLabels();\n        });\n    };\n    /**\n     * Method used to render.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.render = function () {\n        // If a render was scheduled, we cancel it\n        if (this.renderFrame) {\n            utils_1.cancelFrame(this.renderFrame);\n            this.renderFrame = null;\n            this.needToProcess = false;\n            this.needToSoftProcess = false;\n        }\n        // First we need to resize\n        this.resize();\n        // Clearing the canvases\n        this.clear();\n        // If we have no nodes we can stop right there\n        if (!this.graph.order)\n            return this;\n        // TODO: improve this heuristic or move to the captor itself?\n        // TODO: deal with the touch captor here as well\n        var mouseCaptor = this.mouseCaptor;\n        var moving = this.camera.isAnimated() ||\n            mouseCaptor.isMoving ||\n            mouseCaptor.draggedEvents ||\n            mouseCaptor.currentWheelDirection;\n        // Then we need to extract a matrix from the camera\n        var cameraState = this.camera.getState(), cameraMatrix = utils_1.matrixFromCamera(cameraState, {\n            width: this.width,\n            height: this.height,\n        });\n        var program;\n        // Drawing nodes\n        program = this.nodePrograms[this.settings.defaultNodeType];\n        program.render({\n            matrix: cameraMatrix,\n            width: this.width,\n            height: this.height,\n            ratio: cameraState.ratio,\n            nodesPowRatio: 0.5,\n            scalingRatio: WEBGL_OVERSAMPLING_RATIO,\n        });\n        // Drawing edges\n        if (!this.settings.hideEdgesOnMove || !moving) {\n            program = this.edgePrograms[this.settings.defaultEdgeType];\n            program.render({\n                matrix: cameraMatrix,\n                width: this.width,\n                height: this.height,\n                ratio: cameraState.ratio,\n                edgesPowRatio: 0.5,\n                scalingRatio: WEBGL_OVERSAMPLING_RATIO,\n            });\n        }\n        // Do not display labels on move per setting\n        if (this.settings.hideLabelsOnMove && moving)\n            return this;\n        this.renderLabels();\n        this.renderEdgeLabels();\n        this.renderHighlightedNodes();\n        return this;\n    };\n    /**---------------------------------------------------------------------------\n     * Public API.\n     **---------------------------------------------------------------------------\n     */\n    /**\n     * Method returning the renderer's camera.\n     *\n     * @return {Camera}\n     */\n    Sigma.prototype.getCamera = function () {\n        return this.camera;\n    };\n    /**\n     * Method returning the renderer's graph.\n     *\n     * @return {Graph}\n     */\n    Sigma.prototype.getGraph = function () {\n        return this.graph;\n    };\n    /**\n     * Method returning the mouse captor.\n     *\n     * @return {MouseCaptor}\n     */\n    Sigma.prototype.getMouseCaptor = function () {\n        return this.mouseCaptor;\n    };\n    /**\n     * Method returning the touch captor.\n     *\n     * @return {TouchCaptor}\n     */\n    Sigma.prototype.getTouchCaptor = function () {\n        return this.touchCaptor;\n    };\n    /**\n     * Method returning the current renderer's dimensions.\n     *\n     * @return {Dimensions}\n     */\n    Sigma.prototype.getDimensions = function () {\n        return { width: this.width, height: this.height };\n    };\n    /**\n     * Method used to get all the sigma node attributes.\n     * It's usefull for example to get the position of a node\n     * and to get values that are set by the nodeReducer\n     *\n     * @param  {string} key - The node's key.\n     * @return {Partial<NodeAttributes>} A copy of the desired node's attribute or undefined if not found\n     */\n    Sigma.prototype.getNodeAttributes = function (key) {\n        var node = this.nodeDataCache[key];\n        return node ? Object.assign({}, node) : undefined;\n    };\n    /**\n     * Method used to get all the sigma edge attributes.\n     * It's usefull for example to get values that are set by the edgeReducer.\n     *\n     * @param  {string} key - The edge's key.\n     * @return {Partial<EdgeAttributes> | undefined} A copy of the desired edge's attribute or undefined if not found\n     */\n    Sigma.prototype.getEdgeAttributes = function (key) {\n        var edge = this.edgeDataCache[key];\n        return edge ? Object.assign({}, edge) : undefined;\n    };\n    /**\n     * Method returning the current value for a given setting key.\n     *\n     * @param  {string} key - The setting key to get.\n     * @return {any} The value attached to this setting key or undefined if not found\n     */\n    Sigma.prototype.getSetting = function (key) {\n        return this.settings[key];\n    };\n    /**\n     * Method setting the value of a given setting key. Note that this will schedule\n     * a new render next frame.\n     *\n     * @param  {string} key - The setting key to set.\n     * @param  {any}    value - The value to set.\n     * @return {Sigma}\n     */\n    Sigma.prototype.setSetting = function (key, value) {\n        this.settings[key] = value;\n        settings_1.validateSettings(this.settings);\n        this.needToProcess = true; // TODO: some keys may work with only needToSoftProcess or even nothing\n        this.scheduleRefresh();\n        return this;\n    };\n    /**\n     * Method updating the value of a given setting key using the provided function.\n     * Note that this will schedule a new render next frame.\n     *\n     * @param  {string} key - The setting key to set.\n     * @param  {any}    value - The value to set.\n     * @return {Sigma}\n     */\n    Sigma.prototype.updateSetting = function (key, updater) {\n        this.settings[key] = updater(this.settings[key]);\n        settings_1.validateSettings(this.settings);\n        this.needToProcess = true; // TODO: some keys may work with only needToSoftProcess or even nothing\n        this.scheduleRefresh();\n        return this;\n    };\n    /**\n     * Method used to resize the renderer.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.resize = function () {\n        var previousWidth = this.width, previousHeight = this.height;\n        this.width = this.container.offsetWidth;\n        this.height = this.container.offsetHeight;\n        if (this.width === 0)\n            throw new Error(\"Sigma: container has no width.\");\n        if (this.height === 0)\n            throw new Error(\"Sigma: container has no height.\");\n        // If nothing has changed, we can stop right here\n        if (previousWidth === this.width && previousHeight === this.height)\n            return this;\n        // Sizing dom elements\n        for (var id in this.elements) {\n            var element = this.elements[id];\n            element.style.width = this.width + \"px\";\n            element.style.height = this.height + \"px\";\n        }\n        // Sizing canvas contexts\n        for (var id in this.canvasContexts) {\n            this.elements[id].setAttribute(\"width\", this.width * PIXEL_RATIO + \"px\");\n            this.elements[id].setAttribute(\"height\", this.height * PIXEL_RATIO + \"px\");\n            if (PIXEL_RATIO !== 1)\n                this.canvasContexts[id].scale(PIXEL_RATIO, PIXEL_RATIO);\n        }\n        // Sizing WebGL contexts\n        for (var id in this.webGLContexts) {\n            this.elements[id].setAttribute(\"width\", this.width * WEBGL_OVERSAMPLING_RATIO + \"px\");\n            this.elements[id].setAttribute(\"height\", this.height * WEBGL_OVERSAMPLING_RATIO + \"px\");\n            this.webGLContexts[id].viewport(0, 0, this.width * WEBGL_OVERSAMPLING_RATIO, this.height * WEBGL_OVERSAMPLING_RATIO);\n        }\n        return this;\n    };\n    /**\n     * Method used to clear all the canvases.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.clear = function () {\n        this.webGLContexts.nodes.clear(this.webGLContexts.nodes.COLOR_BUFFER_BIT);\n        this.webGLContexts.edges.clear(this.webGLContexts.edges.COLOR_BUFFER_BIT);\n        this.canvasContexts.labels.clearRect(0, 0, this.width, this.height);\n        this.canvasContexts.hovers.clearRect(0, 0, this.width, this.height);\n        this.canvasContexts.edgeLabels.clearRect(0, 0, this.width, this.height);\n        return this;\n    };\n    /**\n     * Method used to refresh all computed data.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.refresh = function () {\n        // Do we need to process data?\n        if (this.needToProcess) {\n            this.process();\n        }\n        else if (this.needToSoftProcess) {\n            this.process(true);\n        }\n        // Resetting state\n        this.needToProcess = false;\n        this.needToSoftProcess = false;\n        // Rendering\n        this.render();\n        return this;\n    };\n    /**\n     * Method used to refresh all computed data, at the next available frame.\n     * If this method has already been called this frame, then it will only render once at the next available frame.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.scheduleRefresh = function () {\n        var _this = this;\n        if (!this.renderFrame) {\n            this.renderFrame = utils_1.requestFrame(function () {\n                _this.refresh();\n                _this.renderFrame = null;\n            });\n        }\n        return this;\n    };\n    /**\n     * Method used to translate a point's coordinates from the viewport system (pixel distance from the top-left of the\n     * stage) to the graph system (the reference system of data as they are in the given graph instance).\n     *\n     * @param {Coordinates} viewportPoint\n     */\n    Sigma.prototype.viewportToGraph = function (viewportPoint) {\n        return this.normalizationFunction.inverse(this.camera.viewportToFramedGraph(this.getDimensions(), viewportPoint));\n    };\n    /**\n     * Method used to translate a point's coordinates from the graph system (the reference system of data as they are in\n     * the given graph instance) to the viewport system (pixel distance from the top-left of the stage).\n     *\n     * @param {Coordinates} graphPoint\n     */\n    Sigma.prototype.graphToViewport = function (graphPoint) {\n        return this.camera.framedGraphToViewport(this.getDimensions(), this.normalizationFunction(graphPoint));\n    };\n    /**\n     * Method used to shut the container & release event listeners.\n     *\n     * @return {undefined}\n     */\n    Sigma.prototype.kill = function () {\n        var graph = this.graph;\n        // Emitting \"kill\" events so that plugins and such can cleanup\n        this.emit(\"kill\");\n        // Releasing events\n        this.removeAllListeners();\n        // Releasing camera handlers\n        this.camera.removeListener(\"updated\", this.activeListeners.camera);\n        // Releasing DOM events & captors\n        window.removeEventListener(\"resize\", this.activeListeners.handleResize);\n        this.mouseCaptor.kill();\n        this.touchCaptor.kill();\n        // Releasing graph handlers\n        graph.removeListener(\"nodeAdded\", this.activeListeners.addNodeGraphUpdate);\n        graph.removeListener(\"nodeDropped\", this.activeListeners.graphUpdate);\n        graph.removeListener(\"nodeAttributesUpdated\", this.activeListeners.softGraphUpdate);\n        graph.removeListener(\"eachNodeAttributesUpdated\", this.activeListeners.graphUpdate);\n        graph.removeListener(\"edgeAdded\", this.activeListeners.addEdgeGraphUpdate);\n        graph.removeListener(\"edgeDropped\", this.activeListeners.graphUpdate);\n        graph.removeListener(\"edgeAttributesUpdated\", this.activeListeners.softGraphUpdate);\n        graph.removeListener(\"eachEdgeAttributesUpdated\", this.activeListeners.graphUpdate);\n        graph.removeListener(\"edgesCleared\", this.activeListeners.graphUpdate);\n        graph.removeListener(\"cleared\", this.activeListeners.graphUpdate);\n        // Releasing cache & state\n        this.quadtree = new quadtree_1.default();\n        this.nodeDataCache = {};\n        this.edgeDataCache = {};\n        this.highlightedNodes = new Set();\n        this.displayedLabels = new Set();\n        // Clearing frames\n        if (this.renderFrame) {\n            utils_1.cancelFrame(this.renderFrame);\n            this.renderFrame = null;\n        }\n        if (this.renderHighlightedNodesFrame) {\n            utils_1.cancelFrame(this.renderHighlightedNodesFrame);\n            this.renderHighlightedNodesFrame = null;\n        }\n        // Destroying canvases\n        var container = this.container;\n        while (container.firstChild)\n            container.removeChild(container.firstChild);\n    };\n    return Sigma;\n}(events_1.EventEmitter));\nexports.default = Sigma;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","/**\n * Graphology Extent\n * ==================\n *\n * Simple function returning the extent of selected attributes of the graph.\n */\nvar isGraph = require('graphology-utils/is-graph');\n\n/**\n * Function returning the extent of the selected node attributes.\n *\n * @param  {Graph}        graph     - Target graph.\n * @param  {string|array} attribute - Single or multiple attributes.\n * @return {array|object}\n */\nfunction nodeExtent(graph, attribute) {\n  if (!isGraph(graph))\n    throw new Error('graphology-metrics/extent: the given graph is not a valid graphology instance.');\n\n  var attributes = [].concat(attribute);\n\n  var value,\n      key,\n      a;\n\n  var results = {};\n\n  for (a = 0; a < attributes.length; a++) {\n    key = attributes[a];\n\n    results[key] = [Infinity, -Infinity];\n  }\n\n  graph.forEachNode(function(node, data) {\n    for (a = 0; a < attributes.length; a++) {\n      key = attributes[a];\n      value = data[key];\n\n      if (value < results[key][0])\n        results[key][0] = value;\n\n      if (value > results[key][1])\n        results[key][1] = value;\n    }\n  });\n\n  return typeof attribute === 'string' ? results[attribute] : results;\n}\n\n/**\n * Function returning the extent of the selected edge attributes.\n *\n * @param  {Graph}        graph     - Target graph.\n * @param  {string|array} attribute - Single or multiple attributes.\n * @return {array|object}\n */\nfunction edgeExtent(graph, attribute) {\n  if (!isGraph(graph))\n    throw new Error('graphology-metrics/extent: the given graph is not a valid graphology instance.');\n\n  var attributes = [].concat(attribute);\n\n  var value,\n      key,\n      a;\n\n  var results = {};\n\n  for (a = 0; a < attributes.length; a++) {\n    key = attributes[a];\n\n    results[key] = [Infinity, -Infinity];\n  }\n\n  graph.forEachEdge(function(edge, data) {\n    for (a = 0; a < attributes.length; a++) {\n      key = attributes[a];\n      value = data[key];\n\n      if (value < results[key][0])\n        results[key][0] = value;\n\n      if (value > results[key][1])\n        results[key][1] = value;\n    }\n  });\n\n  return typeof attribute === 'string' ? results[attribute] : results;\n}\n\n/**\n * Exporting.\n */\nvar extent = nodeExtent;\nextent.nodeExtent = nodeExtent;\nextent.edgeExtent = edgeExtent;\n\nmodule.exports = extent;\n","/**\n * Graphology isGraph\n * ===================\n *\n * Very simple function aiming at ensuring the given variable is a\n * graphology instance.\n */\n\n/**\n * Checking the value is a graphology instance.\n *\n * @param  {any}     value - Target value.\n * @return {boolean}\n */\nmodule.exports = function isGraph(value) {\n  return (\n    value !== null &&\n    typeof value === 'object' &&\n    typeof value.addUndirectedEdgeWithKey === 'function' &&\n    typeof value.dropNode === 'function' &&\n    typeof value.multi === 'boolean'\n  );\n};\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Sigma.js Camera Class\n * ======================\n *\n * Class designed to store camera information & used to update it.\n * @module\n */\nvar events_1 = require(\"events\");\nvar animate_1 = require(\"../utils/animate\");\nvar easings_1 = __importDefault(require(\"../utils/easings\"));\nvar utils_1 = require(\"../utils\");\n/**\n * Defaults.\n */\nvar DEFAULT_ZOOMING_RATIO = 1.5;\n// TODO: animate options = number polymorphism?\n// TODO: pan, zoom, unzoom, reset, rotate, zoomTo\n// TODO: add width / height to camera and add #.resize\n// TODO: bind camera to renderer rather than sigma\n// TODO: add #.graphToDisplay, #.displayToGraph, batch methods later\n/**\n * Camera class\n *\n * @constructor\n */\nvar Camera = /** @class */ (function (_super) {\n    __extends(Camera, _super);\n    function Camera() {\n        var _this = _super.call(this) || this;\n        _this.x = 0.5;\n        _this.y = 0.5;\n        _this.angle = 0;\n        _this.ratio = 1;\n        _this.nextFrame = null;\n        _this.enabled = true;\n        // State\n        _this.previousState = _this.getState();\n        return _this;\n    }\n    /**\n     * Static method used to create a Camera object with a given state.\n     *\n     * @param state\n     * @return {Camera}\n     */\n    Camera.from = function (state) {\n        var camera = new Camera();\n        return camera.setState(state);\n    };\n    /**\n     * Method used to enable the camera.\n     *\n     * @return {Camera}\n     */\n    Camera.prototype.enable = function () {\n        this.enabled = true;\n        return this;\n    };\n    /**\n     * Method used to disable the camera.\n     *\n     * @return {Camera}\n     */\n    Camera.prototype.disable = function () {\n        this.enabled = false;\n        return this;\n    };\n    /**\n     * Method used to retrieve the camera's current state.\n     *\n     * @return {object}\n     */\n    Camera.prototype.getState = function () {\n        return {\n            x: this.x,\n            y: this.y,\n            angle: this.angle,\n            ratio: this.ratio,\n        };\n    };\n    /**\n     * Method used to retrieve the camera's previous state.\n     *\n     * @return {object}\n     */\n    Camera.prototype.getPreviousState = function () {\n        var state = this.previousState;\n        return {\n            x: state.x,\n            y: state.y,\n            angle: state.angle,\n            ratio: state.ratio,\n        };\n    };\n    /**\n     * Method used to check whether the camera is currently being animated.\n     *\n     * @return {boolean}\n     */\n    Camera.prototype.isAnimated = function () {\n        return !!this.nextFrame;\n    };\n    /**\n     * Method returning the coordinates of a point from the framed graph system to the\n     * viewport system.\n     *\n     * @param  {object} dimensions  - Dimensions of the viewport.\n     * @param  {object} coordinates - Coordinates of the point.\n     * @return {object}             - The point coordinates in the viewport.\n     */\n    Camera.prototype.framedGraphToViewport = function (dimensions, coordinates) {\n        var smallestDimension = Math.min(dimensions.width, dimensions.height);\n        var dx = smallestDimension / dimensions.width;\n        var dy = smallestDimension / dimensions.height;\n        var ratio = this.ratio / smallestDimension;\n        // Align with center of the graph:\n        var x1 = (coordinates.x - this.x) / ratio;\n        var y1 = (this.y - coordinates.y) / ratio;\n        // Rotate:\n        var x2 = x1 * Math.cos(this.angle) - y1 * Math.sin(this.angle);\n        var y2 = y1 * Math.cos(this.angle) + x1 * Math.sin(this.angle);\n        return {\n            // Translate to center of screen\n            x: x2 + smallestDimension / 2 / dx,\n            y: y2 + smallestDimension / 2 / dy,\n        };\n    };\n    /**\n     * Method returning the coordinates of a point from the viewport system to the\n     * framed graph system.\n     *\n     * @param  {object} dimensions  - Dimensions of the viewport.\n     * @param  {object} coordinates - Coordinates of the point.\n     * @return {object}             - The point coordinates in the graph frame.\n     */\n    Camera.prototype.viewportToFramedGraph = function (dimensions, coordinates) {\n        var _a;\n        var smallestDimension = Math.min(dimensions.width, dimensions.height);\n        var dx = smallestDimension / dimensions.width;\n        var dy = smallestDimension / dimensions.height;\n        var ratio = this.ratio / smallestDimension;\n        // Align with center of the graph:\n        var x = coordinates.x - smallestDimension / 2 / dx;\n        var y = coordinates.y - smallestDimension / 2 / dy;\n        // Rotate:\n        _a = __read([\n            x * Math.cos(-this.angle) - y * Math.sin(-this.angle),\n            y * Math.cos(-this.angle) + x * Math.sin(-this.angle),\n        ], 2), x = _a[0], y = _a[1];\n        return {\n            x: x * ratio + this.x,\n            y: -y * ratio + this.y,\n        };\n    };\n    /**\n     * Method returning the abstract rectangle containing the graph according\n     * to the camera's state.\n     *\n     * @return {object} - The view's rectangle.\n     */\n    Camera.prototype.viewRectangle = function (dimensions) {\n        // TODO: reduce relative margin?\n        var marginX = (0 * dimensions.width) / 8, marginY = (0 * dimensions.height) / 8;\n        var p1 = this.viewportToFramedGraph(dimensions, { x: 0 - marginX, y: 0 - marginY }), p2 = this.viewportToFramedGraph(dimensions, { x: dimensions.width + marginX, y: 0 - marginY }), h = this.viewportToFramedGraph(dimensions, { x: 0, y: dimensions.height + marginY });\n        return {\n            x1: p1.x,\n            y1: p1.y,\n            x2: p2.x,\n            y2: p2.y,\n            height: p2.y - h.y,\n        };\n    };\n    /**\n     * Method used to set the camera's state.\n     *\n     * @param  {object} state - New state.\n     * @return {Camera}\n     */\n    Camera.prototype.setState = function (state) {\n        if (!this.enabled)\n            return this;\n        // TODO: validations\n        // TODO: update by function\n        // Keeping track of last state\n        this.previousState = this.getState();\n        if (state.x)\n            this.x = state.x;\n        if (state.y)\n            this.y = state.y;\n        if (state.angle)\n            this.angle = state.angle;\n        if (state.ratio)\n            this.ratio = state.ratio;\n        // Emitting\n        // TODO: don't emit if nothing changed?\n        this.emit(\"updated\", this.getState());\n        return this;\n    };\n    /**\n     * Method used to (un)zoom, while preserving the position of a viewport point.\n     * Used for instance to\n     *\n     * @param viewportTarget\n     * @param dimensions\n     * @param ratio\n     * @return {CameraState}\n     */\n    Camera.prototype.getViewportZoomedState = function (viewportTarget, dimensions, ratio) {\n        // TODO: handle max zoom\n        var ratioDiff = ratio / this.ratio;\n        var center = {\n            x: dimensions.width / 2,\n            y: dimensions.height / 2,\n        };\n        var graphMousePosition = this.viewportToFramedGraph(dimensions, viewportTarget);\n        var graphCenterPosition = this.viewportToFramedGraph(dimensions, center);\n        return __assign(__assign({}, this.getState()), { x: (graphMousePosition.x - graphCenterPosition.x) * (1 - ratioDiff) + this.x, y: (graphMousePosition.y - graphCenterPosition.y) * (1 - ratioDiff) + this.y, ratio: ratio });\n    };\n    /**\n     * Method used to animate the camera.\n     *\n     * @param  {object}                    state      - State to reach eventually.\n     * @param  {object}                    opts       - Options:\n     * @param  {number}                      duration - Duration of the animation.\n     * @param  {string | number => number}   easing   - Easing function or name of an existing one\n     * @param  {function}                  callback   - Callback\n     */\n    Camera.prototype.animate = function (state, opts, callback) {\n        var _this = this;\n        if (!this.enabled)\n            return;\n        var options = Object.assign({}, animate_1.ANIMATE_DEFAULTS, opts);\n        var easing = typeof options.easing === \"function\" ? options.easing : easings_1.default[options.easing];\n        // State\n        var start = Date.now(), initialState = this.getState();\n        // Function performing the animation\n        var fn = function () {\n            var t = (Date.now() - start) / options.duration;\n            // The animation is over:\n            if (t >= 1) {\n                _this.nextFrame = null;\n                _this.setState(state);\n                if (_this.animationCallback) {\n                    _this.animationCallback.call(null);\n                    _this.animationCallback = undefined;\n                }\n                return;\n            }\n            var coefficient = easing(t);\n            var newState = {};\n            if (state.x)\n                newState.x = initialState.x + (state.x - initialState.x) * coefficient;\n            if (state.y)\n                newState.y = initialState.y + (state.y - initialState.y) * coefficient;\n            if (state.angle)\n                newState.angle = initialState.angle + (state.angle - initialState.angle) * coefficient;\n            if (state.ratio)\n                newState.ratio = initialState.ratio + (state.ratio - initialState.ratio) * coefficient;\n            _this.setState(newState);\n            _this.nextFrame = utils_1.requestFrame(fn);\n        };\n        if (this.nextFrame) {\n            utils_1.cancelFrame(this.nextFrame);\n            if (this.animationCallback)\n                this.animationCallback.call(null);\n            this.nextFrame = utils_1.requestFrame(fn);\n        }\n        else {\n            fn();\n        }\n        this.animationCallback = callback;\n    };\n    /**\n     * Method used to zoom the camera.\n     *\n     * @param  {number|object} factorOrOptions - Factor or options.\n     * @return {function}\n     */\n    Camera.prototype.animatedZoom = function (factorOrOptions) {\n        if (!factorOrOptions) {\n            this.animate({ ratio: this.ratio / DEFAULT_ZOOMING_RATIO });\n        }\n        else {\n            if (typeof factorOrOptions === \"number\")\n                return this.animate({ ratio: this.ratio / factorOrOptions });\n            else\n                this.animate({\n                    ratio: this.ratio / (factorOrOptions.factor || DEFAULT_ZOOMING_RATIO),\n                }, factorOrOptions);\n        }\n    };\n    /**\n     * Method used to unzoom the camera.\n     *\n     * @param  {number|object} factorOrOptions - Factor or options.\n     */\n    Camera.prototype.animatedUnzoom = function (factorOrOptions) {\n        if (!factorOrOptions) {\n            this.animate({ ratio: this.ratio * DEFAULT_ZOOMING_RATIO });\n        }\n        else {\n            if (typeof factorOrOptions === \"number\")\n                return this.animate({ ratio: this.ratio * factorOrOptions });\n            else\n                this.animate({\n                    ratio: this.ratio * (factorOrOptions.factor || DEFAULT_ZOOMING_RATIO),\n                }, factorOrOptions);\n        }\n    };\n    /**\n     * Method used to reset the camera.\n     *\n     * @param  {object} options - Options.\n     */\n    Camera.prototype.animatedReset = function (options) {\n        this.animate({\n            x: 0.5,\n            y: 0.5,\n            ratio: 1,\n            angle: 0,\n        }, options);\n    };\n    /**\n     * Returns a new Camera instance, with the same state as the current camera.\n     *\n     * @return {Camera}\n     */\n    Camera.prototype.copy = function () {\n        return Camera.from(this.getState());\n    };\n    return Camera;\n}(events_1.EventEmitter));\nexports.default = Camera;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.animateNodes = exports.ANIMATE_DEFAULTS = void 0;\nvar index_1 = require(\"./index\");\nvar easings_1 = __importDefault(require(\"./easings\"));\nexports.ANIMATE_DEFAULTS = {\n    easing: \"quadraticInOut\",\n    duration: 150,\n};\n/**\n * Function used to animate the nodes.\n */\nfunction animateNodes(graph, targets, opts, callback) {\n    var options = Object.assign({}, exports.ANIMATE_DEFAULTS, opts);\n    var easing = typeof options.easing === \"function\" ? options.easing : easings_1.default[options.easing];\n    var start = Date.now();\n    var startPositions = {};\n    for (var node in targets) {\n        var attrs = targets[node];\n        startPositions[node] = {};\n        for (var k in attrs)\n            startPositions[node][k] = graph.getNodeAttribute(node, k);\n    }\n    var frame = null;\n    var step = function () {\n        var p = (Date.now() - start) / options.duration;\n        if (p >= 1) {\n            // Animation is done\n            for (var node in targets) {\n                var attrs = targets[node];\n                for (var k in attrs)\n                    graph.setNodeAttribute(node, k, attrs[k]);\n            }\n            if (typeof callback === \"function\")\n                callback();\n            return;\n        }\n        p = easing(p);\n        for (var node in targets) {\n            var attrs = targets[node];\n            var s = startPositions[node];\n            for (var k in attrs)\n                graph.setNodeAttribute(node, k, attrs[k] * p + s[k] * (1 - p));\n        }\n        frame = index_1.requestFrame(step);\n    };\n    step();\n    return function () {\n        if (frame)\n            index_1.cancelFrame(frame);\n    };\n}\nexports.animateNodes = animateNodes;\n","\"use strict\";\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateGraph = exports.canUse32BitsIndices = exports.extractPixel = exports.matrixFromCamera = exports.floatColor = exports.zIndexOrdering = exports.createNormalizationFunction = exports.getPixelRatio = exports.createElement = exports.cancelFrame = exports.requestFrame = exports.assignDeep = exports.isPlainObject = void 0;\nvar is_graph_1 = __importDefault(require(\"graphology-utils/is-graph\"));\nvar matrices_1 = require(\"./matrices\");\n/**\n * Checks whether the given value is a plain object.\n *\n * @param  {mixed}   value - Target value.\n * @return {boolean}\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\nfunction isPlainObject(value) {\n    return typeof value === \"object\" && value !== null && value.constructor === Object;\n}\nexports.isPlainObject = isPlainObject;\n/**\n * Very simple recursive Object.assign-like function.\n *\n * @param  {object} target       - First object.\n * @param  {object} [...objects] - Objects to merge.\n * @return {object}\n */\nfunction assignDeep(target) {\n    var objects = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        objects[_i - 1] = arguments[_i];\n    }\n    target = target || {};\n    for (var i = 0, l = objects.length; i < l; i++) {\n        var o = objects[i];\n        if (!o)\n            continue;\n        for (var k in o) {\n            if (isPlainObject(o[k])) {\n                target[k] = assignDeep(target[k], o[k]);\n            }\n            else {\n                target[k] = o[k];\n            }\n        }\n    }\n    return target;\n}\nexports.assignDeep = assignDeep;\n/**\n * Just some dirty trick to make requestAnimationFrame and cancelAnimationFrame \"work\" in Node.js, for unit tests:\n */\nexports.requestFrame = typeof requestAnimationFrame !== \"undefined\"\n    ? function (callback) { return requestAnimationFrame(callback); }\n    : function (callback) { return setTimeout(callback, 0); };\nexports.cancelFrame = typeof cancelAnimationFrame !== \"undefined\"\n    ? function (requestID) { return cancelAnimationFrame(requestID); }\n    : function (requestID) { return clearTimeout(requestID); };\n/**\n * Function used to create DOM elements easily.\n *\n * @param  {string} tag        - Tag name of the element to create.\n * @param  {object} style      - Styles map.\n * @param  {object} attributes - Attributes map.\n * @return {HTMLElement}\n */\nfunction createElement(tag, style, attributes) {\n    var element = document.createElement(tag);\n    if (style) {\n        for (var k in style) {\n            element.style[k] = style[k];\n        }\n    }\n    if (attributes) {\n        for (var k in attributes) {\n            element.setAttribute(k, attributes[k]);\n        }\n    }\n    return element;\n}\nexports.createElement = createElement;\n/**\n * Function returning the browser's pixel ratio.\n *\n * @return {number}\n */\nfunction getPixelRatio() {\n    if (typeof window.devicePixelRatio !== \"undefined\")\n        return window.devicePixelRatio;\n    return 1;\n}\nexports.getPixelRatio = getPixelRatio;\nfunction createNormalizationFunction(extent) {\n    var _a = __read(extent.x, 2), minX = _a[0], maxX = _a[1], _b = __read(extent.y, 2), minY = _b[0], maxY = _b[1];\n    var ratio = Math.max(maxX - minX, maxY - minY);\n    if (ratio === 0)\n        ratio = 1;\n    var dX = (maxX + minX) / 2, dY = (maxY + minY) / 2;\n    var fn = function (data) {\n        return {\n            x: 0.5 + (data.x - dX) / ratio,\n            y: 0.5 + (data.y - dY) / ratio,\n        };\n    };\n    // TODO: possibility to apply this in batch over array of indices\n    fn.applyTo = function (data) {\n        data.x = 0.5 + (data.x - dX) / ratio;\n        data.y = 0.5 + (data.y - dY) / ratio;\n    };\n    fn.inverse = function (data) {\n        return {\n            x: dX + ratio * (data.x - 0.5),\n            y: dY + ratio * (data.y - 0.5),\n        };\n    };\n    fn.ratio = ratio;\n    return fn;\n}\nexports.createNormalizationFunction = createNormalizationFunction;\n/**\n * Function ordering the given elements in reverse z-order so they drawn\n * the correct way.\n *\n * @param  {number}   extent   - [min, max] z values.\n * @param  {function} getter   - Z attribute getter function.\n * @param  {array}    elements - The array to sort.\n * @return {array} - The sorted array.\n */\nfunction zIndexOrdering(extent, getter, elements) {\n    // If k is > n, we'll use a standard sort\n    return elements.sort(function (a, b) {\n        var zA = getter(a) || 0, zB = getter(b) || 0;\n        if (zA < zB)\n            return -1;\n        if (zA > zB)\n            return 1;\n        return 0;\n    });\n    // TODO: counting sort optimization\n}\nexports.zIndexOrdering = zIndexOrdering;\n/**\n * WebGL utils\n * ===========\n */\n/**\n * Memoized function returning a float-encoded color from various string\n * formats describing colors.\n */\nvar FLOAT_COLOR_CACHE = {};\nvar INT8 = new Int8Array(4);\nvar INT32 = new Int32Array(INT8.buffer, 0, 1);\nvar FLOAT32 = new Float32Array(INT8.buffer, 0, 1);\nvar RGBA_TEST_REGEX = /^\\s*rgba?\\s*\\(/;\nvar RGBA_EXTRACT_REGEX = /^\\s*rgba?\\s*\\(\\s*([0-9]*)\\s*,\\s*([0-9]*)\\s*,\\s*([0-9]*)(?:\\s*,\\s*(.*)?)?\\)\\s*$/;\nfunction floatColor(val) {\n    // If the color is already computed, we yield it\n    if (typeof FLOAT_COLOR_CACHE[val] !== \"undefined\")\n        return FLOAT_COLOR_CACHE[val];\n    var r = 0, g = 0, b = 0, a = 1;\n    // Handling hexadecimal notation\n    if (val[0] === \"#\") {\n        if (val.length === 4) {\n            r = parseInt(val.charAt(1) + val.charAt(1), 16);\n            g = parseInt(val.charAt(2) + val.charAt(2), 16);\n            b = parseInt(val.charAt(3) + val.charAt(3), 16);\n        }\n        else {\n            r = parseInt(val.charAt(1) + val.charAt(2), 16);\n            g = parseInt(val.charAt(3) + val.charAt(4), 16);\n            b = parseInt(val.charAt(5) + val.charAt(6), 16);\n        }\n    }\n    // Handling rgb notation\n    else if (RGBA_TEST_REGEX.test(val)) {\n        var match = val.match(RGBA_EXTRACT_REGEX);\n        if (match) {\n            r = +match[1];\n            g = +match[2];\n            b = +match[3];\n            if (match[4])\n                a = +match[4];\n        }\n    }\n    a = (a * 255) | 0;\n    INT32[0] = ((a << 24) | (b << 16) | (g << 8) | r) & 0xfeffffff;\n    var color = FLOAT32[0];\n    FLOAT_COLOR_CACHE[val] = color;\n    return color;\n}\nexports.floatColor = floatColor;\n/**\n * Function returning a matrix from the current state of the camera.\n */\n// TODO: it's possible to optimize this drastically!\nfunction matrixFromCamera(state, dimensions) {\n    var angle = state.angle, ratio = state.ratio, x = state.x, y = state.y;\n    var width = dimensions.width, height = dimensions.height;\n    var matrix = matrices_1.identity();\n    var smallestDimension = Math.min(width, height);\n    var cameraCentering = matrices_1.translate(matrices_1.identity(), -x, -y), cameraScaling = matrices_1.scale(matrices_1.identity(), 1 / ratio), cameraRotation = matrices_1.rotate(matrices_1.identity(), -angle), viewportScaling = matrices_1.scale(matrices_1.identity(), 2 * (smallestDimension / width), 2 * (smallestDimension / height));\n    // Logical order is reversed\n    matrices_1.multiply(matrix, viewportScaling);\n    matrices_1.multiply(matrix, cameraRotation);\n    matrices_1.multiply(matrix, cameraScaling);\n    matrices_1.multiply(matrix, cameraCentering);\n    return matrix;\n}\nexports.matrixFromCamera = matrixFromCamera;\n/**\n * Function extracting the color at the given pixel.\n */\nfunction extractPixel(gl, x, y, array) {\n    var data = array || new Uint8Array(4);\n    gl.readPixels(x, y, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, data);\n    return data;\n}\nexports.extractPixel = extractPixel;\n/**\n * Function used to know whether given webgl context can use 32 bits indices.\n */\nfunction canUse32BitsIndices(gl) {\n    var webgl2 = typeof WebGL2RenderingContext !== \"undefined\" && gl instanceof WebGL2RenderingContext;\n    return webgl2 || !!gl.getExtension(\"OES_element_index_uint\");\n}\nexports.canUse32BitsIndices = canUse32BitsIndices;\n/**\n * Check if the graph variable is a valid graph, and if sigma can render it.\n */\nfunction validateGraph(graph) {\n    // check if it's a valid graphology instance\n    if (!is_graph_1.default(graph))\n        throw new Error(\"Sigma: invalid graph instance.\");\n    // check if nodes have x/y attributes\n    graph.forEachNode(function (key, attributes) {\n        if (!Number.isFinite(attributes.x) || !Number.isFinite(attributes.y)) {\n            throw new Error(\"Sigma: Coordinates of node \" + key + \" are invalid. A node must have a numeric 'x' and 'y' attribute.\");\n        }\n    });\n}\nexports.validateGraph = validateGraph;\n","/**\n * Graphology isGraph\n * ===================\n *\n * Very simple function aiming at ensuring the given variable is a\n * graphology instance.\n */\n\n/**\n * Checking the value is a graphology instance.\n *\n * @param  {any}     value - Target value.\n * @return {boolean}\n */\nmodule.exports = function isGraph(value) {\n  return (\n    value !== null &&\n    typeof value === 'object' &&\n    typeof value.addUndirectedEdgeWithKey === 'function' &&\n    typeof value.dropNode === 'function' &&\n    typeof value.multi === 'boolean'\n  );\n};\n","\"use strict\";\n/**\n * Sigma.js WebGL Matrices Helpers\n * ================================\n *\n * Matrices-related helper functions used by sigma's WebGL renderer.\n * @module\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.multiply = exports.translate = exports.rotate = exports.scale = exports.identity = void 0;\nfunction identity() {\n    return Float32Array.of(1, 0, 0, 0, 1, 0, 0, 0, 1);\n}\nexports.identity = identity;\n// TODO: optimize\nfunction scale(m, x, y) {\n    m[0] = x;\n    m[4] = typeof y === \"number\" ? y : x;\n    return m;\n}\nexports.scale = scale;\nfunction rotate(m, r) {\n    var s = Math.sin(r), c = Math.cos(r);\n    m[0] = c;\n    m[1] = s;\n    m[3] = -s;\n    m[4] = c;\n    return m;\n}\nexports.rotate = rotate;\nfunction translate(m, x, y) {\n    m[6] = x;\n    m[7] = y;\n    return m;\n}\nexports.translate = translate;\nfunction multiply(a, b) {\n    var a00 = a[0], a01 = a[1], a02 = a[2];\n    var a10 = a[3], a11 = a[4], a12 = a[5];\n    var a20 = a[6], a21 = a[7], a22 = a[8];\n    var b00 = b[0], b01 = b[1], b02 = b[2];\n    var b10 = b[3], b11 = b[4], b12 = b[5];\n    var b20 = b[6], b21 = b[7], b22 = b[8];\n    a[0] = b00 * a00 + b01 * a10 + b02 * a20;\n    a[1] = b00 * a01 + b01 * a11 + b02 * a21;\n    a[2] = b00 * a02 + b01 * a12 + b02 * a22;\n    a[3] = b10 * a00 + b11 * a10 + b12 * a20;\n    a[4] = b10 * a01 + b11 * a11 + b12 * a21;\n    a[5] = b10 * a02 + b11 * a12 + b12 * a22;\n    a[6] = b20 * a00 + b21 * a10 + b22 * a20;\n    a[7] = b20 * a01 + b21 * a11 + b22 * a21;\n    a[8] = b20 * a02 + b21 * a12 + b22 * a22;\n    return a;\n}\nexports.multiply = multiply;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.cubicInOut = exports.cubicOut = exports.cubicIn = exports.quadraticInOut = exports.quadraticOut = exports.quadraticIn = exports.linear = void 0;\n/**\n * Sigma.js Easings\n * =================\n *\n * Handy collection of easing functions.\n * @module\n */\nvar linear = function (k) { return k; };\nexports.linear = linear;\nvar quadraticIn = function (k) { return k * k; };\nexports.quadraticIn = quadraticIn;\nvar quadraticOut = function (k) { return k * (2 - k); };\nexports.quadraticOut = quadraticOut;\nvar quadraticInOut = function (k) {\n    if ((k *= 2) < 1)\n        return 0.5 * k * k;\n    return -0.5 * (--k * (k - 2) - 1);\n};\nexports.quadraticInOut = quadraticInOut;\nvar cubicIn = function (k) { return k * k * k; };\nexports.cubicIn = cubicIn;\nvar cubicOut = function (k) { return --k * k * k + 1; };\nexports.cubicOut = cubicOut;\nvar cubicInOut = function (k) {\n    if ((k *= 2) < 1)\n        return 0.5 * k * k * k;\n    return 0.5 * ((k -= 2) * k * k + 2);\n};\nexports.cubicInOut = cubicInOut;\nvar easings = {\n    linear: exports.linear,\n    quadraticIn: exports.quadraticIn,\n    quadraticOut: exports.quadraticOut,\n    quadraticInOut: exports.quadraticInOut,\n    cubicIn: exports.cubicIn,\n    cubicOut: exports.cubicOut,\n    cubicInOut: exports.cubicInOut,\n};\nexports.default = easings;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar captor_1 = __importStar(require(\"./captor\"));\n/**\n * Constants.\n */\nvar DRAG_TIMEOUT = 200;\nvar DRAGGED_EVENTS_TOLERANCE = 3;\nvar MOUSE_INERTIA_DURATION = 200;\nvar MOUSE_INERTIA_RATIO = 3;\nvar MOUSE_ZOOM_DURATION = 250;\nvar ZOOMING_RATIO = 1.7;\nvar DOUBLE_CLICK_TIMEOUT = 300;\nvar DOUBLE_CLICK_ZOOMING_RATIO = 2.2;\nvar DOUBLE_CLICK_ZOOMING_DURATION = 200;\n/**\n * Mouse captor class.\n *\n * @constructor\n */\nvar MouseCaptor = /** @class */ (function (_super) {\n    __extends(MouseCaptor, _super);\n    function MouseCaptor(container, camera) {\n        var _this = _super.call(this, container, camera) || this;\n        // State\n        _this.enabled = true;\n        _this.draggedEvents = 0;\n        _this.downStartTime = null;\n        _this.lastMouseX = null;\n        _this.lastMouseY = null;\n        _this.isMouseDown = false;\n        _this.isMoving = false;\n        _this.movingTimeout = null;\n        _this.startCameraState = null;\n        _this.clicks = 0;\n        _this.doubleClickTimeout = null;\n        _this.currentWheelDirection = 0;\n        // Binding methods\n        _this.handleClick = _this.handleClick.bind(_this);\n        _this.handleRightClick = _this.handleRightClick.bind(_this);\n        _this.handleDown = _this.handleDown.bind(_this);\n        _this.handleUp = _this.handleUp.bind(_this);\n        _this.handleMove = _this.handleMove.bind(_this);\n        _this.handleWheel = _this.handleWheel.bind(_this);\n        _this.handleOut = _this.handleOut.bind(_this);\n        // Binding events\n        container.addEventListener(\"click\", _this.handleClick, false);\n        container.addEventListener(\"contextmenu\", _this.handleRightClick, false);\n        container.addEventListener(\"mousedown\", _this.handleDown, false);\n        container.addEventListener(\"mousemove\", _this.handleMove, false);\n        container.addEventListener(\"wheel\", _this.handleWheel, false);\n        container.addEventListener(\"mouseout\", _this.handleOut, false);\n        document.addEventListener(\"mouseup\", _this.handleUp, false);\n        return _this;\n    }\n    MouseCaptor.prototype.kill = function () {\n        var container = this.container;\n        container.removeEventListener(\"click\", this.handleClick);\n        container.removeEventListener(\"contextmenu\", this.handleRightClick);\n        container.removeEventListener(\"mousedown\", this.handleDown);\n        container.removeEventListener(\"mousemove\", this.handleMove);\n        container.removeEventListener(\"wheel\", this.handleWheel);\n        container.removeEventListener(\"mouseout\", this.handleOut);\n        document.removeEventListener(\"mouseup\", this.handleUp);\n    };\n    MouseCaptor.prototype.handleClick = function (e) {\n        var _this = this;\n        if (!this.enabled)\n            return;\n        this.clicks++;\n        if (this.clicks === 2) {\n            this.clicks = 0;\n            if (typeof this.doubleClickTimeout === \"number\") {\n                clearTimeout(this.doubleClickTimeout);\n                this.doubleClickTimeout = null;\n            }\n            return this.handleDoubleClick(e);\n        }\n        setTimeout(function () {\n            _this.clicks = 0;\n            _this.doubleClickTimeout = null;\n        }, DOUBLE_CLICK_TIMEOUT);\n        // NOTE: this is here to prevent click events on drag\n        if (this.draggedEvents < DRAGGED_EVENTS_TOLERANCE)\n            this.emit(\"click\", captor_1.getMouseCoords(e));\n    };\n    MouseCaptor.prototype.handleRightClick = function (e) {\n        if (!this.enabled)\n            return;\n        this.emit(\"rightClick\", captor_1.getMouseCoords(e));\n    };\n    MouseCaptor.prototype.handleDoubleClick = function (e) {\n        if (!this.enabled)\n            return;\n        var newRatio = this.camera.getState().ratio / DOUBLE_CLICK_ZOOMING_RATIO;\n        this.camera.animate(this.camera.getViewportZoomedState({ x: captor_1.getX(e), y: captor_1.getY(e) }, {\n            width: this.container.offsetWidth,\n            height: this.container.offsetHeight,\n        }, newRatio), {\n            easing: \"quadraticInOut\",\n            duration: DOUBLE_CLICK_ZOOMING_DURATION,\n        });\n        if (e.preventDefault)\n            e.preventDefault();\n        else\n            e.returnValue = false;\n        e.stopPropagation();\n        return false;\n    };\n    MouseCaptor.prototype.handleDown = function (e) {\n        if (!this.enabled)\n            return;\n        this.startCameraState = this.camera.getState();\n        this.lastMouseX = captor_1.getX(e);\n        this.lastMouseY = captor_1.getY(e);\n        this.draggedEvents = 0;\n        this.downStartTime = Date.now();\n        // TODO: dispatch events\n        switch (e.which) {\n            default:\n                // Left button pressed\n                this.isMouseDown = true;\n                this.emit(\"mousedown\", captor_1.getMouseCoords(e));\n        }\n    };\n    MouseCaptor.prototype.handleUp = function (e) {\n        var _this = this;\n        if (!this.enabled || !this.isMouseDown)\n            return;\n        this.isMouseDown = false;\n        if (typeof this.movingTimeout === \"number\") {\n            clearTimeout(this.movingTimeout);\n            this.movingTimeout = null;\n        }\n        var x = captor_1.getX(e), y = captor_1.getY(e);\n        var cameraState = this.camera.getState(), previousCameraState = this.camera.getPreviousState();\n        if (this.isMoving) {\n            this.camera.animate({\n                x: cameraState.x + MOUSE_INERTIA_RATIO * (cameraState.x - previousCameraState.x),\n                y: cameraState.y + MOUSE_INERTIA_RATIO * (cameraState.y - previousCameraState.y),\n            }, {\n                duration: MOUSE_INERTIA_DURATION,\n                easing: \"quadraticOut\",\n            });\n        }\n        else if (this.lastMouseX !== x || this.lastMouseY !== y) {\n            this.camera.setState({\n                x: cameraState.x,\n                y: cameraState.y,\n            });\n        }\n        this.isMoving = false;\n        setTimeout(function () { return (_this.draggedEvents = 0); }, 0);\n        this.emit(\"mouseup\", captor_1.getMouseCoords(e));\n    };\n    MouseCaptor.prototype.handleMove = function (e) {\n        var _this = this;\n        if (!this.enabled)\n            return;\n        this.emit(\"mousemove\", captor_1.getMouseCoords(e));\n        if (this.isMouseDown) {\n            // TODO: dispatch events\n            this.isMoving = true;\n            this.draggedEvents++;\n            if (typeof this.movingTimeout === \"number\") {\n                clearTimeout(this.movingTimeout);\n            }\n            this.movingTimeout = window.setTimeout(function () {\n                _this.movingTimeout = null;\n                _this.isMoving = false;\n            }, DRAG_TIMEOUT);\n            var dimensions = {\n                width: this.container.offsetWidth,\n                height: this.container.offsetHeight,\n            };\n            var eX = captor_1.getX(e), eY = captor_1.getY(e);\n            var lastMouse = this.camera.viewportToFramedGraph(dimensions, {\n                x: this.lastMouseX,\n                y: this.lastMouseY,\n            });\n            var mouse = this.camera.viewportToFramedGraph(dimensions, { x: eX, y: eY });\n            var offsetX = lastMouse.x - mouse.x, offsetY = lastMouse.y - mouse.y;\n            var cameraState = this.camera.getState();\n            var x = cameraState.x + offsetX, y = cameraState.y + offsetY;\n            this.camera.setState({ x: x, y: y });\n            this.lastMouseX = eX;\n            this.lastMouseY = eY;\n        }\n        if (e.preventDefault)\n            e.preventDefault();\n        else\n            e.returnValue = false;\n        e.stopPropagation();\n        return false;\n    };\n    MouseCaptor.prototype.handleWheel = function (e) {\n        var _this = this;\n        if (e.preventDefault)\n            e.preventDefault();\n        else\n            e.returnValue = false;\n        e.stopPropagation();\n        if (!this.enabled)\n            return false;\n        var delta = captor_1.getWheelDelta(e);\n        if (!delta)\n            return false;\n        var ratioDiff = delta > 0 ? 1 / ZOOMING_RATIO : ZOOMING_RATIO;\n        var newRatio = this.camera.getState().ratio * ratioDiff;\n        var wheelDirection = delta > 0 ? 1 : -1;\n        var now = Date.now();\n        // Cancel events that are too close too each other and in the same direction:\n        if (this.currentWheelDirection === wheelDirection &&\n            this.lastWheelTriggerTime &&\n            now - this.lastWheelTriggerTime < MOUSE_ZOOM_DURATION / 5) {\n            return false;\n        }\n        this.camera.animate(this.camera.getViewportZoomedState({ x: captor_1.getX(e), y: captor_1.getY(e) }, {\n            width: this.container.offsetWidth,\n            height: this.container.offsetHeight,\n        }, newRatio), {\n            easing: \"quadraticOut\",\n            duration: MOUSE_ZOOM_DURATION,\n        }, function () {\n            _this.currentWheelDirection = 0;\n        });\n        this.currentWheelDirection = wheelDirection;\n        this.lastWheelTriggerTime = now;\n        return false;\n    };\n    MouseCaptor.prototype.handleOut = function () {\n        // TODO: dispatch event\n    };\n    return MouseCaptor;\n}(captor_1.default));\nexports.default = MouseCaptor;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getWheelDelta = exports.getTouchCoords = exports.getTouchesArray = exports.getMouseCoords = exports.getPosition = exports.getY = exports.getX = void 0;\n/**\n * Sigma.js Captor Class\n * ======================\n * @module\n */\nvar events_1 = require(\"events\");\n/**\n * Captor utils functions\n * ======================\n */\n/**\n * Extract the local X position from a mouse event or touch object.\n *\n * @param  {event}  e - A mouse event or touch object.\n * @return {number}     The local X value of the mouse.\n */\nfunction getX(e) {\n    if (typeof e.offsetX !== \"undefined\")\n        return e.offsetX;\n    if (typeof e.clientX !== \"undefined\")\n        return e.clientX;\n    throw new Error(\"Captor: could not extract x from event.\");\n}\nexports.getX = getX;\n/**\n * Extract the local Y position from a mouse event or touch object.\n *\n * @param  {event}  e - A mouse event or touch object.\n * @return {number}     The local Y value of the mouse.\n */\nfunction getY(e) {\n    if (typeof e.offsetY !== \"undefined\")\n        return e.offsetY;\n    if (typeof e.clientY !== \"undefined\")\n        return e.clientY;\n    throw new Error(\"Captor: could not extract y from event.\");\n}\nexports.getY = getY;\n/**\n * Extract the local X and Y coordinates from a mouse event or touch object.\n *\n * @param  {event}  e - A mouse event or touch object.\n * @return {number}     The local Y value of the mouse.\n */\nfunction getPosition(e) {\n    return {\n        x: getX(e),\n        y: getY(e),\n    };\n}\nexports.getPosition = getPosition;\n/**\n * Convert mouse coords to sigma coords.\n *\n * @param  {event}   e   - A mouse event or touch object.\n *\n * @return {object}\n */\nfunction getMouseCoords(e) {\n    return {\n        x: getX(e),\n        y: getY(e),\n        clientX: e.clientX,\n        clientY: e.clientY,\n        ctrlKey: e.ctrlKey,\n        metaKey: e.metaKey,\n        altKey: e.altKey,\n        shiftKey: e.shiftKey,\n        // TODO: this is not ideal... But I am wondering why we don't just pass the event through\n        preventDefault: e.preventDefault.bind(e),\n        original: e,\n    };\n}\nexports.getMouseCoords = getMouseCoords;\nvar MAX_TOUCHES = 2;\nfunction getTouchesArray(touches) {\n    var arr = [];\n    for (var i = 0, l = Math.min(touches.length, MAX_TOUCHES); i < l; i++)\n        arr.push(touches[i]);\n    return arr;\n}\nexports.getTouchesArray = getTouchesArray;\n/**\n * Convert touch coords to sigma coords.\n */\nfunction getTouchCoords(e) {\n    return {\n        touches: getTouchesArray(e.touches).map(getPosition),\n        ctrlKey: e.ctrlKey,\n        metaKey: e.metaKey,\n        altKey: e.altKey,\n        shiftKey: e.shiftKey,\n        // TODO: same as for getMouseCoords\n        preventDefault: e.preventDefault.bind(e),\n        original: e,\n    };\n}\nexports.getTouchCoords = getTouchCoords;\n/**\n * Extract the wheel delta from a mouse event or touch object.\n *\n * @param  {event}  e - A mouse event or touch object.\n * @return {number}     The wheel delta of the mouse.\n */\nfunction getWheelDelta(e) {\n    // TODO: check those ratios again to ensure a clean Chrome/Firefox compat\n    if (typeof e.deltaY !== \"undefined\")\n        return (e.deltaY * -3) / 360;\n    if (typeof e.detail !== \"undefined\")\n        return e.detail / -9;\n    throw new Error(\"Captor: could not extract delta from event.\");\n}\nexports.getWheelDelta = getWheelDelta;\n/**\n * Abstract class representing a captor like the user's mouse or touch controls.\n */\nvar Captor = /** @class */ (function (_super) {\n    __extends(Captor, _super);\n    function Captor(container, camera) {\n        var _this = _super.call(this) || this;\n        // Properties\n        _this.container = container;\n        _this.camera = camera;\n        return _this;\n    }\n    return Captor;\n}(events_1.EventEmitter));\nexports.default = Captor;\n","\"use strict\";\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.rectangleCollidesWithQuad = exports.squareCollidesWithQuad = exports.getCircumscribedAlignedRectangle = exports.isRectangleAligned = void 0;\n/**\n * Sigma.js Quad Tree Class\n * =========================\n *\n * Class implementing the quad tree data structure used to solve hovers and\n * determine which elements are currently in the scope of the camera so that\n * we don't waste time rendering things the user cannot see anyway.\n * @module\n */\n/* eslint no-nested-ternary: 0 */\n/* eslint no-constant-condition: 0 */\nvar extend_1 = __importDefault(require(\"@yomguithereal/helpers/extend\"));\n// TODO: should not ask the quadtree when the camera has the whole graph in\n// sight.\n// TODO: a square can be represented as topleft + width, saying for the quad blocks (reduce mem)\n// TODO: jsdoc\n// TODO: be sure we can handle cases overcoming boundaries (because of size) or use a maxed size\n// TODO: filtering unwanted labels beforehand through the filter function\n// NOTE: this is basically a MX-CIF Quadtree at this point\n// NOTE: need to explore R-Trees for edges\n// NOTE: need to explore 2d segment tree for edges\n// NOTE: probably can do faster using spatial hashing\n/**\n * Constants.\n *\n * Note that since we are representing a static 4-ary tree, the indices of the\n * quadrants are the following:\n *   - TOP_LEFT:     4i + b\n *   - TOP_RIGHT:    4i + 2b\n *   - BOTTOM_LEFT:  4i + 3b\n *   - BOTTOM_RIGHT: 4i + 4b\n */\nvar BLOCKS = 4, MAX_LEVEL = 5;\nvar X_OFFSET = 0, Y_OFFSET = 1, WIDTH_OFFSET = 2, HEIGHT_OFFSET = 3;\nvar TOP_LEFT = 1, TOP_RIGHT = 2, BOTTOM_LEFT = 3, BOTTOM_RIGHT = 4;\n/**\n * Geometry helpers.\n */\n/**\n * Function returning whether the given rectangle is axis-aligned.\n *\n * @param  {Rectangle} rect\n * @return {boolean}\n */\nfunction isRectangleAligned(rect) {\n    return rect.x1 === rect.x2 || rect.y1 === rect.y2;\n}\nexports.isRectangleAligned = isRectangleAligned;\n/**\n * Function returning the smallest rectangle that contains the given rectangle, and that is aligned with the axis.\n *\n * @param {Rectangle} rect\n * @return {Rectangle}\n */\nfunction getCircumscribedAlignedRectangle(rect) {\n    var width = Math.sqrt(Math.pow(rect.x2 - rect.x1, 2) + Math.pow(rect.y2 - rect.y1, 2));\n    var heightVector = {\n        x: ((rect.y1 - rect.y2) * rect.height) / width,\n        y: ((rect.x2 - rect.x1) * rect.height) / width,\n    };\n    // Compute all corners:\n    var tl = { x: rect.x1, y: rect.y1 };\n    var tr = { x: rect.x2, y: rect.y2 };\n    var bl = {\n        x: rect.x1 + heightVector.x,\n        y: rect.y1 + heightVector.y,\n    };\n    var br = {\n        x: rect.x2 + heightVector.x,\n        y: rect.y2 + heightVector.y,\n    };\n    var xL = Math.min(tl.x, tr.x, bl.x, br.x);\n    var xR = Math.max(tl.x, tr.x, bl.x, br.x);\n    var yT = Math.min(tl.y, tr.y, bl.y, br.y);\n    var yB = Math.max(tl.y, tr.y, bl.y, br.y);\n    return {\n        x1: xL,\n        y1: yT,\n        x2: xR,\n        y2: yT,\n        height: yB - yT,\n    };\n}\nexports.getCircumscribedAlignedRectangle = getCircumscribedAlignedRectangle;\n/**\n *\n * @param x1\n * @param y1\n * @param w\n * @param qx\n * @param qy\n * @param qw\n * @param qh\n */\nfunction squareCollidesWithQuad(x1, y1, w, qx, qy, qw, qh) {\n    return x1 < qx + qw && x1 + w > qx && y1 < qy + qh && y1 + w > qy;\n}\nexports.squareCollidesWithQuad = squareCollidesWithQuad;\nfunction rectangleCollidesWithQuad(x1, y1, w, h, qx, qy, qw, qh) {\n    return x1 < qx + qw && x1 + w > qx && y1 < qy + qh && y1 + h > qy;\n}\nexports.rectangleCollidesWithQuad = rectangleCollidesWithQuad;\nfunction pointIsInQuad(x, y, qx, qy, qw, qh) {\n    var xmp = qx + qw / 2, ymp = qy + qh / 2, top = y < ymp, left = x < xmp;\n    return top ? (left ? TOP_LEFT : TOP_RIGHT) : left ? BOTTOM_LEFT : BOTTOM_RIGHT;\n}\n/**\n * Helper functions that are not bound to the class so an external user\n * cannot mess with them.\n */\nfunction buildQuadrants(maxLevel, data) {\n    // [block, level]\n    var stack = [0, 0];\n    while (stack.length) {\n        var level = stack.pop(), block = stack.pop();\n        var topLeftBlock = 4 * block + BLOCKS, topRightBlock = 4 * block + 2 * BLOCKS, bottomLeftBlock = 4 * block + 3 * BLOCKS, bottomRightBlock = 4 * block + 4 * BLOCKS;\n        var x = data[block + X_OFFSET], y = data[block + Y_OFFSET], width = data[block + WIDTH_OFFSET], height = data[block + HEIGHT_OFFSET], hw = width / 2, hh = height / 2;\n        data[topLeftBlock + X_OFFSET] = x;\n        data[topLeftBlock + Y_OFFSET] = y;\n        data[topLeftBlock + WIDTH_OFFSET] = hw;\n        data[topLeftBlock + HEIGHT_OFFSET] = hh;\n        data[topRightBlock + X_OFFSET] = x + hw;\n        data[topRightBlock + Y_OFFSET] = y;\n        data[topRightBlock + WIDTH_OFFSET] = hw;\n        data[topRightBlock + HEIGHT_OFFSET] = hh;\n        data[bottomLeftBlock + X_OFFSET] = x;\n        data[bottomLeftBlock + Y_OFFSET] = y + hh;\n        data[bottomLeftBlock + WIDTH_OFFSET] = hw;\n        data[bottomLeftBlock + HEIGHT_OFFSET] = hh;\n        data[bottomRightBlock + X_OFFSET] = x + hw;\n        data[bottomRightBlock + Y_OFFSET] = y + hh;\n        data[bottomRightBlock + WIDTH_OFFSET] = hw;\n        data[bottomRightBlock + HEIGHT_OFFSET] = hh;\n        if (level < maxLevel - 1) {\n            stack.push(bottomRightBlock, level + 1);\n            stack.push(bottomLeftBlock, level + 1);\n            stack.push(topRightBlock, level + 1);\n            stack.push(topLeftBlock, level + 1);\n        }\n    }\n}\nfunction insertNode(maxLevel, data, containers, key, x, y, size) {\n    var x1 = x - size, y1 = y - size, w = size * 2;\n    var level = 0, block = 0;\n    while (true) {\n        // If we reached max level\n        if (level >= maxLevel) {\n            containers[block] = containers[block] || [];\n            containers[block].push(key);\n            return;\n        }\n        var topLeftBlock = 4 * block + BLOCKS, topRightBlock = 4 * block + 2 * BLOCKS, bottomLeftBlock = 4 * block + 3 * BLOCKS, bottomRightBlock = 4 * block + 4 * BLOCKS;\n        var collidingWithTopLeft = squareCollidesWithQuad(x1, y1, w, data[topLeftBlock + X_OFFSET], data[topLeftBlock + Y_OFFSET], data[topLeftBlock + WIDTH_OFFSET], data[topLeftBlock + HEIGHT_OFFSET]);\n        var collidingWithTopRight = squareCollidesWithQuad(x1, y1, w, data[topRightBlock + X_OFFSET], data[topRightBlock + Y_OFFSET], data[topRightBlock + WIDTH_OFFSET], data[topRightBlock + HEIGHT_OFFSET]);\n        var collidingWithBottomLeft = squareCollidesWithQuad(x1, y1, w, data[bottomLeftBlock + X_OFFSET], data[bottomLeftBlock + Y_OFFSET], data[bottomLeftBlock + WIDTH_OFFSET], data[bottomLeftBlock + HEIGHT_OFFSET]);\n        var collidingWithBottomRight = squareCollidesWithQuad(x1, y1, w, data[bottomRightBlock + X_OFFSET], data[bottomRightBlock + Y_OFFSET], data[bottomRightBlock + WIDTH_OFFSET], data[bottomRightBlock + HEIGHT_OFFSET]);\n        var collisions = [\n            collidingWithTopLeft,\n            collidingWithTopRight,\n            collidingWithBottomLeft,\n            collidingWithBottomRight,\n        ].reduce(function (acc, current) {\n            if (current)\n                return acc + 1;\n            else\n                return acc;\n        }, 0);\n        // If we don't have at least a collision, there is an issue\n        if (collisions === 0)\n            throw new Error(\"sigma/quadtree.insertNode: no collision (level: \" + level + \", key: \" + key + \", x: \" + x + \", y: \" + y + \", size: \" + size + \").\");\n        // If we have 3 collisions, we have a geometry problem obviously\n        if (collisions === 3)\n            throw new Error(\"sigma/quadtree.insertNode: 3 impossible collisions (level: \" + level + \", key: \" + key + \", x: \" + x + \", y: \" + y + \", size: \" + size + \").\");\n        // If we have more that one collision, we stop here and store the node\n        // in the relevant containers\n        if (collisions > 1) {\n            containers[block] = containers[block] || [];\n            containers[block].push(key);\n            return;\n        }\n        else {\n            level++;\n        }\n        // Else we recurse into the correct quads\n        if (collidingWithTopLeft)\n            block = topLeftBlock;\n        if (collidingWithTopRight)\n            block = topRightBlock;\n        if (collidingWithBottomLeft)\n            block = bottomLeftBlock;\n        if (collidingWithBottomRight)\n            block = bottomRightBlock;\n    }\n}\nfunction getNodesInAxisAlignedRectangleArea(maxLevel, data, containers, x1, y1, w, h) {\n    // [block, level]\n    var stack = [0, 0];\n    var collectedNodes = [];\n    var container;\n    while (stack.length) {\n        var level = stack.pop(), block = stack.pop();\n        // Collecting nodes\n        container = containers[block];\n        if (container)\n            extend_1.default(collectedNodes, container);\n        // If we reached max level\n        if (level >= maxLevel)\n            continue;\n        var topLeftBlock = 4 * block + BLOCKS, topRightBlock = 4 * block + 2 * BLOCKS, bottomLeftBlock = 4 * block + 3 * BLOCKS, bottomRightBlock = 4 * block + 4 * BLOCKS;\n        var collidingWithTopLeft = rectangleCollidesWithQuad(x1, y1, w, h, data[topLeftBlock + X_OFFSET], data[topLeftBlock + Y_OFFSET], data[topLeftBlock + WIDTH_OFFSET], data[topLeftBlock + HEIGHT_OFFSET]);\n        var collidingWithTopRight = rectangleCollidesWithQuad(x1, y1, w, h, data[topRightBlock + X_OFFSET], data[topRightBlock + Y_OFFSET], data[topRightBlock + WIDTH_OFFSET], data[topRightBlock + HEIGHT_OFFSET]);\n        var collidingWithBottomLeft = rectangleCollidesWithQuad(x1, y1, w, h, data[bottomLeftBlock + X_OFFSET], data[bottomLeftBlock + Y_OFFSET], data[bottomLeftBlock + WIDTH_OFFSET], data[bottomLeftBlock + HEIGHT_OFFSET]);\n        var collidingWithBottomRight = rectangleCollidesWithQuad(x1, y1, w, h, data[bottomRightBlock + X_OFFSET], data[bottomRightBlock + Y_OFFSET], data[bottomRightBlock + WIDTH_OFFSET], data[bottomRightBlock + HEIGHT_OFFSET]);\n        if (collidingWithTopLeft)\n            stack.push(topLeftBlock, level + 1);\n        if (collidingWithTopRight)\n            stack.push(topRightBlock, level + 1);\n        if (collidingWithBottomLeft)\n            stack.push(bottomLeftBlock, level + 1);\n        if (collidingWithBottomRight)\n            stack.push(bottomRightBlock, level + 1);\n    }\n    return collectedNodes;\n}\n/**\n * QuadTree class.\n *\n * @constructor\n * @param {object} boundaries - The graph boundaries.\n */\nvar QuadTree = /** @class */ (function () {\n    function QuadTree(params) {\n        if (params === void 0) { params = {}; }\n        this.containers = {};\n        this.cache = null;\n        this.lastRectangle = null;\n        // Allocating the underlying byte array\n        var L = Math.pow(4, MAX_LEVEL);\n        this.data = new Float32Array(BLOCKS * ((4 * L - 1) / 3));\n        if (params.boundaries)\n            this.resize(params.boundaries);\n        else\n            this.resize({\n                x: 0,\n                y: 0,\n                width: 1,\n                height: 1,\n            });\n    }\n    QuadTree.prototype.add = function (key, x, y, size) {\n        insertNode(MAX_LEVEL, this.data, this.containers, key, x, y, size);\n        return this;\n    };\n    QuadTree.prototype.resize = function (boundaries) {\n        this.clear();\n        // Building the quadrants\n        this.data[X_OFFSET] = boundaries.x;\n        this.data[Y_OFFSET] = boundaries.y;\n        this.data[WIDTH_OFFSET] = boundaries.width;\n        this.data[HEIGHT_OFFSET] = boundaries.height;\n        buildQuadrants(MAX_LEVEL, this.data);\n    };\n    QuadTree.prototype.clear = function () {\n        this.containers = {};\n        return this;\n    };\n    QuadTree.prototype.point = function (x, y) {\n        var nodes = [];\n        var block = 0, level = 0;\n        do {\n            if (this.containers[block])\n                nodes.push.apply(nodes, __spreadArray([], __read(this.containers[block])));\n            var quad = pointIsInQuad(x, y, this.data[block + X_OFFSET], this.data[block + Y_OFFSET], this.data[block + WIDTH_OFFSET], this.data[block + HEIGHT_OFFSET]);\n            block = 4 * block + quad * BLOCKS;\n            level++;\n        } while (level <= MAX_LEVEL);\n        return nodes;\n    };\n    QuadTree.prototype.rectangle = function (x1, y1, x2, y2, height) {\n        var lr = this.lastRectangle;\n        if (lr && x1 === lr.x1 && x2 === lr.x2 && y1 === lr.y1 && y2 === lr.y2 && height === lr.height) {\n            return this.cache;\n        }\n        this.lastRectangle = {\n            x1: x1,\n            y1: y1,\n            x2: x2,\n            y2: y2,\n            height: height,\n        };\n        // If the rectangle is shifted, we use the smallest aligned rectangle that contains the shifted one:\n        if (!isRectangleAligned(this.lastRectangle))\n            this.lastRectangle = getCircumscribedAlignedRectangle(this.lastRectangle);\n        this.cache = getNodesInAxisAlignedRectangleArea(MAX_LEVEL, this.data, this.containers, x1, y1, Math.abs(x1 - x2) || Math.abs(y1 - y2), height);\n        return this.cache;\n    };\n    return QuadTree;\n}());\nexports.default = QuadTree;\n","/**\n * Extend function\n * ================\n *\n * Function used to push a bunch of values into an array at once.\n *\n * Its strategy is to mutate target array's length then setting the new indices\n * to be the values to add.\n *\n * A benchmark proved that it is faster than the following strategies:\n *   1) `array.push.apply(array, values)`.\n *   2) A loop of pushes.\n *   3) `array = array.concat(values)`, obviously.\n *\n * Intuitively, this is correct because when adding a lot of elements, the\n * chosen strategies does not need to handle the `arguments` object to\n * execute #.apply's variadicity and because the array know its final length\n * at the beginning, avoiding potential multiple reallocations of the underlying\n * contiguous array. Some engines may be able to optimize the loop of push\n * operations but empirically they don't seem to do so.\n */\n\n/**\n * Extends the target array with the given values.\n *\n * @param  {array} array  - Target array.\n * @param  {array} values - Values to add.\n */\nmodule.exports = function extend(array, values) {\n  var l2 = values.length;\n\n  if (l2 === 0)\n    return;\n\n  var l1 = array.length;\n\n  array.length += l2;\n\n  for (var i = 0; i < l2; i++)\n    array[l1 + i] = values[i];\n};\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.edgeLabelsToDisplayFromNodes = exports.labelsToDisplayFromGrid = void 0;\nvar camera_1 = __importDefault(require(\"./camera\"));\n/**\n * Constants.\n */\n// Dimensions of a normal cell\nvar DEFAULT_CELL = {\n    width: 250,\n    height: 175,\n};\n// Dimensions of an unzoomed cell. This one is usually larger than the normal\n// one to account for the fact that labels will more likely collide.\nvar DEFAULT_UNZOOMED_CELL = {\n    width: 400,\n    height: 300,\n};\n/**\n * Helpers.\n */\nfunction collision(x1, y1, w1, h1, x2, y2, w2, h2) {\n    return x1 < x2 + w2 && x1 + w1 > x2 && y1 < y2 + h2 && y1 + h1 > y2;\n}\n// TODO: cache camera position of selected nodes to avoid costly computations\n// in anti-collision step\n// TOOD: document a little bit more so future people can understand this mess\n/**\n * Label grid heuristic selecting labels to display.\n *\n * @param  {object} params                 - Parameters:\n * @param  {object}   cache                - Cache storing nodes' data.\n * @param  {Camera}   camera               - The renderer's camera.\n * @param  {Set}      displayedLabels      - Currently displayed labels.\n * @param  {Array}    visibleNodes         - Nodes visible for this render.\n * @param  {Graph}    graph                - The rendered graph.\n * @return {Array}                         - The selected labels.\n */\nfunction labelsToDisplayFromGrid(params) {\n    var cache = params.cache, camera = params.camera, userCell = params.cell, dimensions = params.dimensions, displayedLabels = params.displayedLabels, _a = params.fontSize, fontSize = _a === void 0 ? 14 : _a, graph = params.graph, _b = params.renderedSizeThreshold, renderedSizeThreshold = _b === void 0 ? -Infinity : _b, visibleNodes = params.visibleNodes;\n    var cameraState = camera.getState(), previousCameraState = camera.getPreviousState();\n    var previousCamera = new camera_1.default();\n    previousCamera.setState(previousCameraState);\n    // TODO: should factorize. This same code is used quite a lot throughout the codebase\n    // TODO: POW RATIO is currently default 0.5 and harcoded\n    var sizeRatio = Math.pow(cameraState.ratio, 0.5);\n    // State\n    var zooming = cameraState.ratio < previousCameraState.ratio, panning = cameraState.x !== previousCameraState.x || cameraState.y !== previousCameraState.y, unzooming = cameraState.ratio > previousCameraState.ratio, unzoomedPanning = panning && !zooming && !unzooming && cameraState.ratio >= 1, zoomedPanning = panning && displayedLabels.size && !zooming && !unzooming;\n    // Trick to discretize unzooming\n    if (unzooming && Math.trunc(cameraState.ratio * 100) % 5 !== 0)\n        return Array.from(displayedLabels);\n    // If panning while unzoomed, we shouldn't change label selection\n    if (unzoomedPanning && displayedLabels.size !== 0)\n        return Array.from(displayedLabels);\n    // When unzoomed & zooming\n    if (zooming && cameraState.ratio >= 1)\n        return Array.from(displayedLabels);\n    // Adapting cell dimensions\n    var cell = userCell ? userCell : DEFAULT_CELL;\n    if (cameraState.ratio >= 1.3)\n        cell = DEFAULT_UNZOOMED_CELL;\n    var cwr = dimensions.width % cell.width;\n    var cellWidth = cell.width + cwr / Math.floor(dimensions.width / cell.width);\n    var chr = dimensions.height % cell.height;\n    var cellHeight = cell.height + chr / Math.floor(dimensions.height / cell.height);\n    var adjustedWidth = dimensions.width + cellWidth, adjustedHeight = dimensions.height + cellHeight, adjustedX = -cellWidth, adjustedY = -cellHeight;\n    var panningWidth = dimensions.width + cellWidth / 2, panningHeight = dimensions.height + cellHeight / 2, panningX = -(cellWidth / 2), panningY = -(cellHeight / 2);\n    var worthyLabels = [];\n    var grid = {};\n    var maxSize = -Infinity, biggestNode = null;\n    for (var i = 0, l = visibleNodes.length; i < l; i++) {\n        var node = visibleNodes[i], nodeData = cache[node];\n        // We filter hidden nodes\n        if (nodeData.hidden)\n            continue;\n        // We filter nodes having a rendered size less than a certain thresold\n        if (nodeData.size / sizeRatio < renderedSizeThreshold)\n            continue;\n        // Finding our node's cell in the grid\n        var pos = camera.framedGraphToViewport(dimensions, nodeData);\n        // Node is not actually visible on screen\n        // NOTE: can optimize margin on the right side (only if we know where the labels go)\n        if (pos.x < adjustedX || pos.x > adjustedWidth || pos.y < adjustedY || pos.y > adjustedHeight)\n            continue;\n        // Keeping track of the maximum node size for certain cases\n        if (nodeData.size > maxSize) {\n            maxSize = nodeData.size;\n            biggestNode = node;\n        }\n        // If panning when zoomed, we consider only displayed labels and newly\n        // visible nodes\n        if (zoomedPanning) {\n            var ppos = previousCamera.framedGraphToViewport(dimensions, nodeData);\n            // Was node visible earlier?\n            if (ppos.x >= panningX && ppos.x <= panningWidth && ppos.y >= panningY && ppos.y <= panningHeight) {\n                // Was the label displayed?\n                if (!displayedLabels.has(node))\n                    continue;\n            }\n        }\n        var xKey = Math.floor(pos.x / cellWidth), yKey = Math.floor(pos.y / cellHeight);\n        var key = xKey + \"\\u00A7\" + yKey;\n        if (typeof grid[key] === \"undefined\") {\n            // This cell is not yet occupied\n            grid[key] = node;\n        }\n        else {\n            // We must solve a conflict in this cell\n            var currentNode = grid[key], currentNodeData = cache[currentNode];\n            // We prefer already displayed labels\n            if (displayedLabels.size > 0) {\n                var n1 = displayedLabels.has(node), n2 = displayedLabels.has(currentNode);\n                if (!n1 && n2) {\n                    continue;\n                }\n                if (n1 && !n2) {\n                    grid[key] = node;\n                    continue;\n                }\n                if ((zoomedPanning || zooming) && n1 && n2) {\n                    worthyLabels.push(node);\n                    continue;\n                }\n            }\n            // In case of size & degree equality, we use the node's key so that the\n            // process remains deterministic\n            var won = false;\n            if (nodeData.size > currentNodeData.size) {\n                won = true;\n            }\n            else if (nodeData.size === currentNodeData.size) {\n                var nodeDegree = graph.degree(node), currentNodeDegree = graph.degree(currentNode);\n                if (nodeDegree > currentNodeDegree) {\n                    won = true;\n                }\n                else if (nodeDegree === currentNodeDegree) {\n                    if (node > currentNode)\n                        won = true;\n                }\n            }\n            if (won)\n                grid[key] = node;\n        }\n    }\n    // Compiling the labels\n    var biggestNodeShown = worthyLabels.some(function (node) { return node === biggestNode; });\n    for (var key in grid) {\n        var node = grid[key];\n        if (node === biggestNode)\n            biggestNodeShown = true;\n        worthyLabels.push(node);\n    }\n    // Always keeping biggest node shown on screen\n    if (!biggestNodeShown && biggestNode)\n        worthyLabels.push(biggestNode);\n    // Basic anti-collision\n    var collisions = new Set();\n    for (var i = 0, l = worthyLabels.length; i < l; i++) {\n        var n1 = worthyLabels[i], d1 = cache[n1], p1 = camera.framedGraphToViewport(dimensions, d1);\n        if (collisions.has(n1))\n            continue;\n        for (var j = i + 1; j < l; j++) {\n            var n2 = worthyLabels[j], d2 = cache[n2], p2 = camera.framedGraphToViewport(dimensions, d2);\n            var c = collision(\n            // First abstract bbox\n            p1.x, p1.y, d1.label.length * 8, fontSize, \n            // Second abstract bbox\n            p2.x, p2.y, d2.label.length * 8, fontSize);\n            if (c) {\n                // NOTE: add degree as tie-breaker here if required in the future\n                // NOTE: add final stable tie-breaker using node key if required\n                if (d1.size < d2.size)\n                    collisions.add(n1);\n                else\n                    collisions.add(n2);\n            }\n        }\n    }\n    // console.log(collisions)\n    return worthyLabels.filter(function (l) { return !collisions.has(l); });\n}\nexports.labelsToDisplayFromGrid = labelsToDisplayFromGrid;\n/**\n * Label heuristic selecting edge labels to display, based on displayed node\n * labels\n *\n * @param  {object} params                 - Parameters:\n * @param  {object}   nodeDataCache        - Cache storing nodes data.\n * @param  {object}   edgeDataCache        - Cache storing edges data.\n * @param  {Set}      displayedNodeLabels  - Currently displayed node labels.\n * @param  {Set}      highlightedNodes     - Highlighted nodes.\n * @param  {Graph}    graph                - The rendered graph.\n * @param  {string}   hoveredNode          - Hovered node (optional)\n * @return {Array}                         - The selected labels.\n */\nfunction edgeLabelsToDisplayFromNodes(params) {\n    var nodeDataCache = params.nodeDataCache, edgeDataCache = params.edgeDataCache, graph = params.graph, hoveredNode = params.hoveredNode, highlightedNodes = params.highlightedNodes, displayedNodeLabels = params.displayedNodeLabels;\n    var worthyEdges = new Set();\n    var displayedNodeLabelsArray = Array.from(displayedNodeLabels);\n    // Each edge connecting a highlighted node has its label displayed if the other extremity is not hidden:\n    var highlightedNodesArray = Array.from(highlightedNodes);\n    if (hoveredNode && !highlightedNodes.has(hoveredNode))\n        highlightedNodesArray.push(hoveredNode);\n    for (var i = 0; i < highlightedNodesArray.length; i++) {\n        var key = highlightedNodesArray[i];\n        var edges = graph.edges(key);\n        for (var j = 0; j < edges.length; j++) {\n            var edgeKey = edges[j];\n            var extremities = graph.extremities(edgeKey), sourceData = nodeDataCache[extremities[0]], targetData = nodeDataCache[extremities[1]], edgeData = edgeDataCache[edgeKey];\n            if (edgeData.hidden && sourceData.hidden && targetData.hidden) {\n                worthyEdges.add(edgeKey);\n            }\n        }\n    }\n    // Each edge connecting two nodes with visible labels has its label displayed:\n    for (var i = 0; i < displayedNodeLabelsArray.length; i++) {\n        var key = displayedNodeLabelsArray[i];\n        var edges = graph.outboundEdges(key);\n        for (var j = 0; j < edges.length; j++)\n            if (!edgeDataCache[edges[j]].hidden && displayedNodeLabels.has(graph.opposite(key, edges[j])))\n                worthyEdges.add(edges[j]);\n    }\n    return Array.from(worthyEdges);\n}\nexports.edgeLabelsToDisplayFromNodes = edgeLabelsToDisplayFromNodes;\n","\"use strict\";\n/**\n * Sigma.js Settings\n * =================================\n *\n * The list of settings and some handy functions.\n * @module\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_SETTINGS = exports.validateSettings = void 0;\nvar label_1 = __importDefault(require(\"./rendering/canvas/label\"));\nvar hover_1 = __importDefault(require(\"./rendering/canvas/hover\"));\nvar edge_label_1 = __importDefault(require(\"./rendering/canvas/edge-label\"));\nvar node_fast_1 = __importDefault(require(\"./rendering/webgl/programs/node.fast\"));\nvar edge_1 = __importDefault(require(\"./rendering/webgl/programs/edge\"));\nvar edge_arrow_1 = __importDefault(require(\"./rendering/webgl/programs/edge.arrow\"));\nfunction validateSettings(settings) {\n    // Label grid cell\n    if (settings.labelGrid &&\n        settings.labelGrid.cell &&\n        typeof settings.labelGrid.cell === \"object\" &&\n        (!settings.labelGrid.cell.width || !settings.labelGrid.cell.height)) {\n        throw new Error(\"Settings: invalid `labelGrid.cell`. Expecting {width, height}.\");\n    }\n}\nexports.validateSettings = validateSettings;\nexports.DEFAULT_SETTINGS = {\n    // Performance\n    hideEdgesOnMove: false,\n    hideLabelsOnMove: false,\n    renderLabels: true,\n    renderEdgeLabels: false,\n    // Component rendering\n    defaultNodeColor: \"#999\",\n    defaultNodeType: \"circle\",\n    defaultEdgeColor: \"#ccc\",\n    defaultEdgeType: \"line\",\n    labelFont: \"Arial\",\n    labelSize: 14,\n    labelWeight: \"normal\",\n    edgeLabelFont: \"Arial\",\n    edgeLabelSize: 14,\n    edgeLabelWeight: \"normal\",\n    // Labels\n    labelGrid: {\n        cell: null,\n        renderedSizeThreshold: -Infinity,\n    },\n    // Reducers\n    nodeReducer: null,\n    edgeReducer: null,\n    // Features\n    zIndex: false,\n    // Renderers\n    labelRenderer: label_1.default,\n    hoverRenderer: hover_1.default,\n    edgeLabelRenderer: edge_label_1.default,\n    // Program classes\n    nodeProgramClasses: {\n        circle: node_fast_1.default,\n    },\n    edgeProgramClasses: {\n        arrow: edge_arrow_1.default,\n        line: edge_1.default,\n    },\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction drawLabel(context, data, settings) {\n    var size = settings.labelSize, font = settings.labelFont, weight = settings.labelWeight;\n    context.fillStyle = \"#000\";\n    context.font = weight + \" \" + size + \"px \" + font;\n    context.fillText(data.label, data.x + data.size + 3, data.y + size / 3);\n}\nexports.default = drawLabel;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar node_1 = __importDefault(require(\"./node\"));\nvar label_1 = __importDefault(require(\"./label\"));\nfunction drawHover(context, data, settings) {\n    var size = settings.labelSize, font = settings.labelFont, weight = settings.labelWeight;\n    context.font = weight + \" \" + size + \"px \" + font;\n    // Then we draw the label background\n    context.beginPath();\n    context.fillStyle = \"#fff\";\n    context.shadowOffsetX = 0;\n    context.shadowOffsetY = 0;\n    context.shadowBlur = 8;\n    context.shadowColor = \"#000\";\n    var textWidth = context.measureText(data.label).width;\n    var x = Math.round(data.x - size / 2 - 2), y = Math.round(data.y - size / 2 - 2), w = Math.round(textWidth + size / 2 + data.size + 9), h = Math.round(size + 4), e = Math.round(size / 2 + 2);\n    context.moveTo(x, y + e);\n    context.moveTo(x, y + e);\n    context.arcTo(x, y, x + e, y, e);\n    context.lineTo(x + w, y);\n    context.lineTo(x + w, y + h);\n    context.lineTo(x + e, y + h);\n    context.arcTo(x, y + h, x, y + h - e, e);\n    context.lineTo(x, y + e);\n    context.closePath();\n    context.fill();\n    context.shadowOffsetX = 0;\n    context.shadowOffsetY = 0;\n    context.shadowBlur = 0;\n    // Then we need to draw the node\n    node_1.default(context, data);\n    // And finally we draw the label\n    label_1.default(context, data, settings);\n}\nexports.default = drawHover;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar PI_TIMES_2 = Math.PI * 2;\nfunction drawNode(context, data) {\n    context.fillStyle = data.color;\n    context.beginPath();\n    context.arc(data.x, data.y, data.size, 0, PI_TIMES_2, true);\n    context.closePath();\n    context.fill();\n}\nexports.default = drawNode;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction drawEdgeLabel(context, edgeData, sourceData, targetData, settings) {\n    var size = settings.edgeLabelSize, font = settings.edgeLabelFont, weight = settings.edgeLabelWeight, label = edgeData.label;\n    context.fillStyle = edgeData.color;\n    context.font = weight + \" \" + size + \"px \" + font;\n    var textWidth = context.measureText(label).width;\n    var cx = (sourceData.x + targetData.x) / 2;\n    var cy = (sourceData.y + targetData.y) / 2;\n    var dx = targetData.x - sourceData.x;\n    var dy = targetData.y - sourceData.y;\n    var d = Math.sqrt(dx * dx + dy * dy);\n    var angle;\n    if (dx > 0) {\n        if (dy > 0)\n            angle = Math.acos(dx / d);\n        else\n            angle = Math.asin(dy / d);\n    }\n    else {\n        if (dy > 0)\n            angle = Math.acos(dx / d) + Math.PI;\n        else\n            angle = Math.asin(dx / d) + Math.PI / 2;\n    }\n    context.save();\n    context.translate(cx, cy);\n    context.rotate(angle);\n    context.fillText(label, -textWidth / 2, edgeData.size / 2 + size);\n    context.restore();\n}\nexports.default = drawEdgeLabel;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"../../../utils\");\nvar node_fast_vert_glsl_1 = __importDefault(require(\"../shaders/node.fast.vert.glsl.js\"));\nvar node_fast_frag_glsl_1 = __importDefault(require(\"../shaders/node.fast.frag.glsl.js\"));\nvar node_1 = require(\"./common/node\");\nvar POINTS = 1, ATTRIBUTES = 4;\nvar NodeProgramFast = /** @class */ (function (_super) {\n    __extends(NodeProgramFast, _super);\n    function NodeProgramFast(gl) {\n        var _this = _super.call(this, gl, node_fast_vert_glsl_1.default, node_fast_frag_glsl_1.default, POINTS, ATTRIBUTES) || this;\n        _this.bind();\n        return _this;\n    }\n    NodeProgramFast.prototype.process = function (data, hidden, offset) {\n        var array = this.array;\n        var i = offset * POINTS * ATTRIBUTES;\n        if (hidden) {\n            array[i++] = 0;\n            array[i++] = 0;\n            array[i++] = 0;\n            array[i++] = 0;\n            return;\n        }\n        var color = utils_1.floatColor(data.color);\n        array[i++] = data.x;\n        array[i++] = data.y;\n        array[i++] = data.size;\n        array[i] = color;\n    };\n    NodeProgramFast.prototype.render = function (params) {\n        var gl = this.gl;\n        var program = this.program;\n        gl.useProgram(program);\n        gl.uniform1f(this.ratioLocation, 1 / Math.pow(params.ratio, params.nodesPowRatio));\n        gl.uniform1f(this.scaleLocation, params.scalingRatio);\n        gl.uniformMatrix3fv(this.matrixLocation, false, params.matrix);\n        gl.drawArrays(gl.POINTS, 0, this.array.length / ATTRIBUTES);\n    };\n    return NodeProgramFast;\n}(node_1.AbstractNodeProgram));\nexports.default = NodeProgramFast;\n","(()=>{\"use strict\";var o={d:(t,n)=>{for(var e in n)o.o(n,e)&&!o.o(t,e)&&Object.defineProperty(t,e,{enumerable:!0,get:n[e]})},o:(o,t)=>Object.prototype.hasOwnProperty.call(o,t),r:o=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(o,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(o,\"__esModule\",{value:!0})}},t={};o.r(t),o.d(t,{default:()=>n});const n=\"attribute vec2 a_position;\\nattribute float a_size;\\nattribute vec4 a_color;\\n\\nuniform float u_ratio;\\nuniform float u_scale;\\nuniform mat3 u_matrix;\\n\\nvarying vec4 v_color;\\nvarying float v_border;\\n\\nconst float bias = 255.0 / 254.0;\\n\\nvoid main() {\\n\\n  gl_Position = vec4(\\n    (u_matrix * vec3(a_position, 1)).xy,\\n    0,\\n    1\\n  );\\n\\n  // Multiply the point size twice:\\n  //  - x SCALING_RATIO to correct the canvas scaling\\n  //  - x 2 to correct the formulae\\n  gl_PointSize = a_size * u_ratio * u_scale * 2.0;\\n\\n  v_border = (1.0 / u_ratio) * (0.5 / a_size);\\n\\n  // Extract the color:\\n  v_color = a_color;\\n  v_color.a *= bias;\\n}\\n\";module.exports=t})();","(()=>{\"use strict\";var o={d:(e,n)=>{for(var r in n)o.o(n,r)&&!o.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},o:(o,e)=>Object.prototype.hasOwnProperty.call(o,e),r:o=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(o,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(o,\"__esModule\",{value:!0})}},e={};o.r(e),o.d(e,{default:()=>n});const n=\"precision mediump float;\\n\\nvarying vec4 v_color;\\nvarying float v_border;\\n\\nconst float radius = 0.5;\\n\\nvoid main(void) {\\n  vec4 color0 = vec4(0.0, 0.0, 0.0, 0.0);\\n  vec2 m = gl_PointCoord - vec2(0.5, 0.5);\\n  float dist = radius - length(m);\\n\\n  float t = 0.0;\\n  if (dist > v_border)\\n    t = 1.0;\\n  else if (dist > 0.0)\\n    t = dist / v_border;\\n\\n  gl_FragColor = mix(color0, v_color, t);\\n}\\n\";module.exports=e})();","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createNodeCompoundProgram = exports.AbstractNodeProgram = void 0;\n/**\n * Sigma.js WebGL Abstract Node Program\n * =====================================\n *\n * @module\n */\nvar program_1 = require(\"./program\");\n/**\n * Node Program class.\n *\n * @constructor\n */\nvar AbstractNodeProgram = /** @class */ (function (_super) {\n    __extends(AbstractNodeProgram, _super);\n    function AbstractNodeProgram(gl, vertexShaderSource, fragmentShaderSource, points, attributes) {\n        var _this = _super.call(this, gl, vertexShaderSource, fragmentShaderSource, points, attributes) || this;\n        // Locations\n        _this.positionLocation = gl.getAttribLocation(_this.program, \"a_position\");\n        _this.sizeLocation = gl.getAttribLocation(_this.program, \"a_size\");\n        _this.colorLocation = gl.getAttribLocation(_this.program, \"a_color\");\n        // Uniform Location\n        var matrixLocation = gl.getUniformLocation(_this.program, \"u_matrix\");\n        if (matrixLocation === null)\n            throw new Error(\"AbstractNodeProgram: error while getting matrixLocation\");\n        _this.matrixLocation = matrixLocation;\n        var ratioLocation = gl.getUniformLocation(_this.program, \"u_ratio\");\n        if (ratioLocation === null)\n            throw new Error(\"AbstractNodeProgram: error while getting ratioLocation\");\n        _this.ratioLocation = ratioLocation;\n        var scaleLocation = gl.getUniformLocation(_this.program, \"u_scale\");\n        if (scaleLocation === null)\n            throw new Error(\"AbstractNodeProgram: error while getting scaleLocation\");\n        _this.scaleLocation = scaleLocation;\n        return _this;\n    }\n    AbstractNodeProgram.prototype.bind = function () {\n        var gl = this.gl;\n        gl.enableVertexAttribArray(this.positionLocation);\n        gl.enableVertexAttribArray(this.sizeLocation);\n        gl.enableVertexAttribArray(this.colorLocation);\n        gl.vertexAttribPointer(this.positionLocation, 2, gl.FLOAT, false, this.attributes * Float32Array.BYTES_PER_ELEMENT, 0);\n        gl.vertexAttribPointer(this.sizeLocation, 1, gl.FLOAT, false, this.attributes * Float32Array.BYTES_PER_ELEMENT, 8);\n        gl.vertexAttribPointer(this.colorLocation, 4, gl.UNSIGNED_BYTE, true, this.attributes * Float32Array.BYTES_PER_ELEMENT, 12);\n    };\n    return AbstractNodeProgram;\n}(program_1.AbstractProgram));\nexports.AbstractNodeProgram = AbstractNodeProgram;\n/**\n * Helper function combining two or more programs into a single compound one.\n * Note that this is more a quick & easy way to combine program than a really\n * performant option. More performant programs can be written entirely.\n *\n * @param  {array}    programClasses - Program classes to combine.\n * @return {function}\n */\nfunction createNodeCompoundProgram(programClasses) {\n    return /** @class */ (function () {\n        function NodeCompoundProgram(gl) {\n            this.programs = programClasses.map(function (ProgramClass) { return new ProgramClass(gl); });\n        }\n        NodeCompoundProgram.prototype.bufferData = function () {\n            this.programs.forEach(function (program) { return program.bufferData(); });\n        };\n        NodeCompoundProgram.prototype.allocate = function (capacity) {\n            this.programs.forEach(function (program) { return program.allocate(capacity); });\n        };\n        NodeCompoundProgram.prototype.bind = function () {\n            // nothing todo, it's already done in each program constructor\n        };\n        NodeCompoundProgram.prototype.render = function (params) {\n            this.programs.forEach(function (program) { return program.render(params); });\n        };\n        NodeCompoundProgram.prototype.process = function (data, hidden, offset) {\n            this.programs.forEach(function (program) { return program.process(data, hidden, offset); });\n        };\n        return NodeCompoundProgram;\n    }());\n}\nexports.createNodeCompoundProgram = createNodeCompoundProgram;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbstractProgram = void 0;\n/**\n * Sigma.js WebGL Renderer Program\n * ================================\n *\n * Class representing a single WebGL program used by sigma's WebGL renderer.\n * @module\n */\nvar utils_1 = require(\"../../shaders/utils\");\n/**\n * Abstract Program class.\n *\n * @constructor\n */\nvar AbstractProgram = /** @class */ (function () {\n    function AbstractProgram(gl, vertexShaderSource, fragmentShaderSource, points, attributes) {\n        this.array = new Float32Array();\n        this.points = points;\n        this.attributes = attributes;\n        this.gl = gl;\n        this.vertexShaderSource = vertexShaderSource;\n        this.fragmentShaderSource = fragmentShaderSource;\n        var buffer = gl.createBuffer();\n        if (buffer === null)\n            throw new Error(\"AbstractProgram: error while creating the buffer\");\n        this.buffer = buffer;\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer);\n        this.vertexShader = utils_1.loadVertexShader(gl, this.vertexShaderSource);\n        this.fragmentShader = utils_1.loadFragmentShader(gl, this.fragmentShaderSource);\n        this.program = utils_1.loadProgram(gl, [this.vertexShader, this.fragmentShader]);\n    }\n    AbstractProgram.prototype.bufferData = function () {\n        var gl = this.gl;\n        gl.bufferData(gl.ARRAY_BUFFER, this.array, gl.DYNAMIC_DRAW);\n    };\n    AbstractProgram.prototype.allocate = function (capacity) {\n        this.array = new Float32Array(this.points * this.attributes * capacity);\n    };\n    return AbstractProgram;\n}());\nexports.AbstractProgram = AbstractProgram;\n","\"use strict\";\n/**\n * Sigma.js Shader Utils\n * ======================\n *\n * Code used to load sigma's shaders.\n * @module\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.loadProgram = exports.loadFragmentShader = exports.loadVertexShader = void 0;\n/**\n * Function used to load a shader.\n */\nfunction loadShader(type, gl, source) {\n    var glType = type === \"VERTEX\" ? gl.VERTEX_SHADER : gl.FRAGMENT_SHADER;\n    // Creating the shader\n    var shader = gl.createShader(glType);\n    if (shader === null) {\n        throw new Error(\"loadShader: error while creating the shader\");\n    }\n    // Loading source\n    gl.shaderSource(shader, source);\n    // Compiling the shader\n    gl.compileShader(shader);\n    // Retrieving compilation status\n    var successfullyCompiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n    // Throwing if something went awry\n    if (!successfullyCompiled) {\n        var infoLog = gl.getShaderInfoLog(shader);\n        gl.deleteShader(shader);\n        throw new Error(\"loadShader: error while compiling the shader:\\n\" + infoLog + \"\\n\" + source);\n    }\n    return shader;\n}\nfunction loadVertexShader(gl, source) {\n    return loadShader(\"VERTEX\", gl, source);\n}\nexports.loadVertexShader = loadVertexShader;\nfunction loadFragmentShader(gl, source) {\n    return loadShader(\"FRAGMENT\", gl, source);\n}\nexports.loadFragmentShader = loadFragmentShader;\n/**\n * Function used to load a program.\n */\nfunction loadProgram(gl, shaders) {\n    var program = gl.createProgram();\n    if (program === null) {\n        throw new Error(\"loadProgram: error while creating the program.\");\n    }\n    var i, l;\n    // Attaching the shaders\n    for (i = 0, l = shaders.length; i < l; i++)\n        gl.attachShader(program, shaders[i]);\n    gl.linkProgram(program);\n    // Checking status\n    var successfullyLinked = gl.getProgramParameter(program, gl.LINK_STATUS);\n    if (!successfullyLinked) {\n        gl.deleteProgram(program);\n        throw new Error(\"loadProgram: error while linking the program.\");\n    }\n    return program;\n}\nexports.loadProgram = loadProgram;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Sigma.js WebGL Renderer Edge Program\n * =====================================\n *\n * Program rendering edges as thick lines using four points translated\n * orthogonally from the source & target's centers by half thickness.\n *\n * Rendering two triangles by using only four points is made possible through\n * the use of indices.\n *\n * This method should be faster than the 6 points / 2 triangles approach and\n * should handle thickness better than with gl.LINES.\n *\n * This version of the shader balances geometry computation evenly between\n * the CPU & GPU (normals are computed on the CPU side).\n * @module\n */\nvar utils_1 = require(\"../../../utils\");\nvar edge_vert_glsl_1 = __importDefault(require(\"../shaders/edge.vert.glsl.js\"));\nvar edge_frag_glsl_1 = __importDefault(require(\"../shaders/edge.frag.glsl.js\"));\nvar edge_1 = require(\"./common/edge\");\nvar POINTS = 4, ATTRIBUTES = 6, STRIDE = POINTS * ATTRIBUTES;\nvar EdgeProgram = /** @class */ (function (_super) {\n    __extends(EdgeProgram, _super);\n    function EdgeProgram(gl) {\n        var _this = _super.call(this, gl, edge_vert_glsl_1.default, edge_frag_glsl_1.default, POINTS, ATTRIBUTES) || this;\n        // Initializing indices buffer\n        var indicesBuffer = gl.createBuffer();\n        if (indicesBuffer === null)\n            throw new Error(\"EdgeProgram: error while getting resolutionLocation\");\n        _this.indicesBuffer = indicesBuffer;\n        // Locations\n        _this.positionLocation = gl.getAttribLocation(_this.program, \"a_position\");\n        _this.colorLocation = gl.getAttribLocation(_this.program, \"a_color\");\n        _this.normalLocation = gl.getAttribLocation(_this.program, \"a_normal\");\n        _this.thicknessLocation = gl.getAttribLocation(_this.program, \"a_thickness\");\n        // Uniform locations\n        var scaleLocation = gl.getUniformLocation(_this.program, \"u_scale\");\n        if (scaleLocation === null)\n            throw new Error(\"EdgeProgram: error while getting scaleLocation\");\n        _this.scaleLocation = scaleLocation;\n        var matrixLocation = gl.getUniformLocation(_this.program, \"u_matrix\");\n        if (matrixLocation === null)\n            throw new Error(\"EdgeProgram: error while getting matrixLocation\");\n        _this.matrixLocation = matrixLocation;\n        var cameraRatioLocation = gl.getUniformLocation(_this.program, \"u_cameraRatio\");\n        if (cameraRatioLocation === null)\n            throw new Error(\"EdgeProgram: error while getting cameraRatioLocation\");\n        _this.cameraRatioLocation = cameraRatioLocation;\n        var viewportRatioLocation = gl.getUniformLocation(_this.program, \"u_viewportRatio\");\n        if (viewportRatioLocation === null)\n            throw new Error(\"EdgeProgram: error while getting viewportRatioLocation\");\n        _this.viewportRatioLocation = viewportRatioLocation;\n        var thicknessRatioLocation = gl.getUniformLocation(_this.program, \"u_thicknessRatio\");\n        if (thicknessRatioLocation === null)\n            throw new Error(\"EdgeProgram: error while getting thicknessRatioLocation\");\n        _this.thicknessRatioLocation = thicknessRatioLocation;\n        // Enabling the OES_element_index_uint extension\n        // NOTE: on older GPUs, this means that really large graphs won't\n        // have all their edges rendered. But it seems that the\n        // `OES_element_index_uint` is quite everywhere so we'll handle\n        // the potential issue if it really arises.\n        // NOTE: when using webgl2, the extension is enabled by default\n        _this.canUse32BitsIndices = utils_1.canUse32BitsIndices(gl);\n        _this.IndicesArray = _this.canUse32BitsIndices ? Uint32Array : Uint16Array;\n        _this.indicesArray = new _this.IndicesArray();\n        _this.indicesType = _this.canUse32BitsIndices ? gl.UNSIGNED_INT : gl.UNSIGNED_SHORT;\n        _this.bind();\n        return _this;\n    }\n    EdgeProgram.prototype.bind = function () {\n        var gl = this.gl;\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n        // Bindings\n        gl.enableVertexAttribArray(this.positionLocation);\n        gl.enableVertexAttribArray(this.normalLocation);\n        gl.enableVertexAttribArray(this.thicknessLocation);\n        gl.enableVertexAttribArray(this.colorLocation);\n        gl.vertexAttribPointer(this.positionLocation, 2, gl.FLOAT, false, ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT, 0);\n        gl.vertexAttribPointer(this.normalLocation, 2, gl.FLOAT, false, ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT, 8);\n        gl.vertexAttribPointer(this.thicknessLocation, 1, gl.FLOAT, false, ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT, 16);\n        gl.vertexAttribPointer(this.colorLocation, 4, gl.UNSIGNED_BYTE, true, ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT, 20);\n    };\n    EdgeProgram.prototype.computeIndices = function () {\n        var l = this.array.length / ATTRIBUTES;\n        var size = l + l / 2;\n        var indices = new this.IndicesArray(size);\n        for (var i = 0, c = 0; i < l; i += 4) {\n            indices[c++] = i;\n            indices[c++] = i + 1;\n            indices[c++] = i + 2;\n            indices[c++] = i + 2;\n            indices[c++] = i + 1;\n            indices[c++] = i + 3;\n        }\n        this.indicesArray = indices;\n    };\n    EdgeProgram.prototype.bufferData = function () {\n        _super.prototype.bufferData.call(this);\n        // Indices data\n        var gl = this.gl;\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this.indicesArray, gl.STATIC_DRAW);\n    };\n    EdgeProgram.prototype.process = function (sourceData, targetData, data, hidden, offset) {\n        if (hidden) {\n            for (var i_1 = offset * STRIDE, l = i_1 + STRIDE; i_1 < l; i_1++)\n                this.array[i_1] = 0;\n            return;\n        }\n        var thickness = data.size || 1, x1 = sourceData.x, y1 = sourceData.y, x2 = targetData.x, y2 = targetData.y, color = utils_1.floatColor(data.color);\n        // Computing normals\n        var dx = x2 - x1, dy = y2 - y1;\n        var len = dx * dx + dy * dy, n1 = 0, n2 = 0;\n        if (len) {\n            len = 1 / Math.sqrt(len);\n            n1 = -dy * len;\n            n2 = dx * len;\n        }\n        var i = POINTS * ATTRIBUTES * offset;\n        var array = this.array;\n        // First point\n        array[i++] = x1;\n        array[i++] = y1;\n        array[i++] = n1;\n        array[i++] = n2;\n        array[i++] = thickness;\n        array[i++] = color;\n        // First point flipped\n        array[i++] = x1;\n        array[i++] = y1;\n        array[i++] = -n1;\n        array[i++] = -n2;\n        array[i++] = thickness;\n        array[i++] = color;\n        // Second point\n        array[i++] = x2;\n        array[i++] = y2;\n        array[i++] = n1;\n        array[i++] = n2;\n        array[i++] = thickness;\n        array[i++] = color;\n        // Second point flipped\n        array[i++] = x2;\n        array[i++] = y2;\n        array[i++] = -n1;\n        array[i++] = -n2;\n        array[i++] = thickness;\n        array[i] = color;\n    };\n    EdgeProgram.prototype.render = function (params) {\n        var gl = this.gl;\n        var program = this.program;\n        gl.useProgram(program);\n        // Binding uniforms\n        gl.uniform1f(this.scaleLocation, params.scalingRatio);\n        gl.uniformMatrix3fv(this.matrixLocation, false, params.matrix);\n        gl.uniform1f(this.cameraRatioLocation, params.ratio);\n        gl.uniform1f(this.viewportRatioLocation, 1 / Math.min(params.width, params.height));\n        gl.uniform1f(this.thicknessRatioLocation, 1 / Math.pow(params.ratio, params.edgesPowRatio));\n        // Drawing:\n        gl.drawElements(gl.TRIANGLES, this.indicesArray.length, this.indicesType, 0);\n    };\n    return EdgeProgram;\n}(edge_1.AbstractEdgeProgram));\nexports.default = EdgeProgram;\n","(()=>{\"use strict\";var n={d:(t,o)=>{for(var e in o)n.o(o,e)&&!n.o(t,e)&&Object.defineProperty(t,e,{enumerable:!0,get:o[e]})},o:(n,t)=>Object.prototype.hasOwnProperty.call(n,t),r:n=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(n,\"__esModule\",{value:!0})}},t={};n.r(t),n.d(t,{default:()=>o});const o=\"attribute vec2 a_position;\\nattribute vec2 a_normal;\\nattribute float a_thickness;\\nattribute vec4 a_color;\\n\\nuniform mat3 u_matrix;\\nuniform float u_scale;\\nuniform float u_cameraRatio;\\nuniform float u_viewportRatio;\\nuniform float u_thicknessRatio;\\n\\nvarying vec4 v_color;\\nvarying vec2 v_normal;\\nvarying float v_thickness;\\n\\nconst float minThickness = 0.8;\\nconst float bias = 255.0 / 254.0;\\n\\nvoid main() {\\n\\n  // Computing thickness in screen space:\\n  float thickness = a_thickness * u_thicknessRatio * u_scale * u_viewportRatio / 2.0;\\n  thickness = max(thickness, minThickness * u_viewportRatio);\\n\\n  // Add normal vector to the position in screen space, but correct thickness first:\\n  vec2 position = (u_matrix * vec3(a_position + a_normal * thickness * u_cameraRatio, 1)).xy;\\n\\n  gl_Position = vec4(position, 0, 1);\\n\\n  v_normal = a_normal;\\n  v_thickness = thickness;\\n\\n  // Extract the color:\\n  v_color = a_color;\\n  v_color.a *= bias;\\n}\\n\";module.exports=t})();","(()=>{\"use strict\";var e={d:(n,o)=>{for(var t in o)e.o(o,t)&&!e.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:o[t]})},o:(e,n)=>Object.prototype.hasOwnProperty.call(e,n),r:e=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})}},n={};e.r(n),e.d(n,{default:()=>o});const o=\"precision mediump float;\\n\\nvarying vec4 v_color;\\nvarying vec2 v_normal;\\nvarying float v_thickness;\\n\\nconst float feather = 0.001;\\nconst vec4 color0 = vec4(0.0, 0.0, 0.0, 0.0);\\n\\nvoid main(void) {\\n  float dist = length(v_normal) * v_thickness;\\n\\n  float t = smoothstep(\\n    v_thickness - feather,\\n    v_thickness,\\n    dist\\n  );\\n\\n  gl_FragColor = mix(v_color, color0, t);\\n}\\n\";module.exports=n})();","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createEdgeCompoundProgram = exports.AbstractEdgeProgram = void 0;\n/**\n * Sigma.js WebGL Abstract Edge Program\n * =====================================\n *\n * @module\n */\nvar program_1 = require(\"./program\");\n/**\n * Edge Program class.\n *\n * @constructor\n */\nvar AbstractEdgeProgram = /** @class */ (function (_super) {\n    __extends(AbstractEdgeProgram, _super);\n    function AbstractEdgeProgram(gl, vertexShaderSource, fragmentShaderSource, points, attributes) {\n        return _super.call(this, gl, vertexShaderSource, fragmentShaderSource, points, attributes) || this;\n    }\n    return AbstractEdgeProgram;\n}(program_1.AbstractProgram));\nexports.AbstractEdgeProgram = AbstractEdgeProgram;\nfunction createEdgeCompoundProgram(programClasses) {\n    return /** @class */ (function () {\n        function EdgeCompoundProgram(gl) {\n            this.programs = programClasses.map(function (ProgramClass) { return new ProgramClass(gl); });\n        }\n        EdgeCompoundProgram.prototype.bufferData = function () {\n            this.programs.forEach(function (program) { return program.bufferData(); });\n        };\n        EdgeCompoundProgram.prototype.allocate = function (capacity) {\n            this.programs.forEach(function (program) { return program.allocate(capacity); });\n        };\n        EdgeCompoundProgram.prototype.bind = function () {\n            // nothing todo, it's already done in each program constructor\n        };\n        EdgeCompoundProgram.prototype.computeIndices = function () {\n            this.programs.forEach(function (program) { return program.computeIndices(); });\n        };\n        EdgeCompoundProgram.prototype.render = function (params) {\n            this.programs.forEach(function (program) {\n                program.bind();\n                program.bufferData();\n                program.render(params);\n            });\n        };\n        EdgeCompoundProgram.prototype.process = function (sourceData, targetData, data, hidden, offset) {\n            this.programs.forEach(function (program) { return program.process(sourceData, targetData, data, hidden, offset); });\n        };\n        return EdgeCompoundProgram;\n    }());\n}\nexports.createEdgeCompoundProgram = createEdgeCompoundProgram;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Sigma.js WebGL Renderer Edge Arrow Program\n * ===========================================\n *\n * Compound program rendering edges as an arrow from the source to the target.\n * @module\n */\nvar edge_1 = require(\"./common/edge\");\nvar edge_arrowHead_1 = __importDefault(require(\"./edge.arrowHead\"));\nvar edge_clamped_1 = __importDefault(require(\"./edge.clamped\"));\nvar program = edge_1.createEdgeCompoundProgram([edge_clamped_1.default, edge_arrowHead_1.default]);\nexports.default = program;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"../../../utils\");\nvar edge_arrowHead_vert_glsl_1 = __importDefault(require(\"../shaders/edge.arrowHead.vert.glsl.js\"));\nvar edge_arrowHead_frag_glsl_1 = __importDefault(require(\"../shaders/edge.arrowHead.frag.glsl.js\"));\nvar edge_1 = require(\"./common/edge\");\nvar POINTS = 3, ATTRIBUTES = 10, STRIDE = POINTS * ATTRIBUTES;\nvar EdgeArrowHeadProgram = /** @class */ (function (_super) {\n    __extends(EdgeArrowHeadProgram, _super);\n    function EdgeArrowHeadProgram(gl) {\n        var _this = _super.call(this, gl, edge_arrowHead_vert_glsl_1.default, edge_arrowHead_frag_glsl_1.default, POINTS, ATTRIBUTES) || this;\n        // Locations\n        _this.positionLocation = gl.getAttribLocation(_this.program, \"a_position\");\n        _this.colorLocation = gl.getAttribLocation(_this.program, \"a_color\");\n        _this.normalLocation = gl.getAttribLocation(_this.program, \"a_normal\");\n        _this.thicknessLocation = gl.getAttribLocation(_this.program, \"a_thickness\");\n        _this.radiusLocation = gl.getAttribLocation(_this.program, \"a_radius\");\n        _this.barycentricLocation = gl.getAttribLocation(_this.program, \"a_barycentric\");\n        // Uniform locations\n        var scaleLocation = gl.getUniformLocation(_this.program, \"u_scale\");\n        if (scaleLocation === null)\n            throw new Error(\"EdgeArrowHeadProgram: error while getting scaleLocation\");\n        _this.scaleLocation = scaleLocation;\n        var matrixLocation = gl.getUniformLocation(_this.program, \"u_matrix\");\n        if (matrixLocation === null)\n            throw new Error(\"EdgeArrowHeadProgram: error while getting matrixLocation\");\n        _this.matrixLocation = matrixLocation;\n        var cameraRatioLocation = gl.getUniformLocation(_this.program, \"u_cameraRatio\");\n        if (cameraRatioLocation === null)\n            throw new Error(\"EdgeArrowHeadProgram: error while getting cameraRatioLocation\");\n        _this.cameraRatioLocation = cameraRatioLocation;\n        var viewportRatioLocation = gl.getUniformLocation(_this.program, \"u_viewportRatio\");\n        if (viewportRatioLocation === null)\n            throw new Error(\"EdgeArrowHeadProgram: error while getting viewportRatioLocation\");\n        _this.viewportRatioLocation = viewportRatioLocation;\n        var thicknessRatioLocation = gl.getUniformLocation(_this.program, \"u_thicknessRatio\");\n        if (thicknessRatioLocation === null)\n            throw new Error(\"EdgeArrowHeadProgram: error while getting thicknessRatioLocation\");\n        _this.thicknessRatioLocation = thicknessRatioLocation;\n        _this.bind();\n        return _this;\n    }\n    EdgeArrowHeadProgram.prototype.bind = function () {\n        var gl = this.gl;\n        // Bindings\n        gl.enableVertexAttribArray(this.positionLocation);\n        gl.enableVertexAttribArray(this.normalLocation);\n        gl.enableVertexAttribArray(this.thicknessLocation);\n        gl.enableVertexAttribArray(this.radiusLocation);\n        gl.enableVertexAttribArray(this.colorLocation);\n        gl.enableVertexAttribArray(this.barycentricLocation);\n        gl.vertexAttribPointer(this.positionLocation, 2, gl.FLOAT, false, ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT, 0);\n        gl.vertexAttribPointer(this.normalLocation, 2, gl.FLOAT, false, ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT, 8);\n        gl.vertexAttribPointer(this.thicknessLocation, 1, gl.FLOAT, false, ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT, 16);\n        gl.vertexAttribPointer(this.radiusLocation, 1, gl.FLOAT, false, ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT, 20);\n        gl.vertexAttribPointer(this.colorLocation, 4, gl.UNSIGNED_BYTE, true, ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT, 24);\n        // TODO: maybe we can optimize here by packing this in a bit mask\n        gl.vertexAttribPointer(this.barycentricLocation, 3, gl.FLOAT, false, ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT, 28);\n    };\n    EdgeArrowHeadProgram.prototype.computeIndices = function () {\n        // nothing to do\n    };\n    EdgeArrowHeadProgram.prototype.process = function (sourceData, targetData, data, hidden, offset) {\n        if (hidden) {\n            for (var i_1 = offset * STRIDE, l = i_1 + STRIDE; i_1 < l; i_1++)\n                this.array[i_1] = 0;\n            return;\n        }\n        var thickness = data.size || 1, radius = targetData.size || 1, x1 = sourceData.x, y1 = sourceData.y, x2 = targetData.x, y2 = targetData.y, color = utils_1.floatColor(data.color);\n        // Computing normals\n        var dx = x2 - x1, dy = y2 - y1;\n        var len = dx * dx + dy * dy, n1 = 0, n2 = 0;\n        if (len) {\n            len = 1 / Math.sqrt(len);\n            n1 = -dy * len;\n            n2 = dx * len;\n        }\n        var i = POINTS * ATTRIBUTES * offset;\n        var array = this.array;\n        // First point\n        array[i++] = x2;\n        array[i++] = y2;\n        array[i++] = -n1;\n        array[i++] = -n2;\n        array[i++] = thickness;\n        array[i++] = radius;\n        array[i++] = color;\n        array[i++] = 1;\n        array[i++] = 0;\n        array[i++] = 0;\n        // Second point\n        array[i++] = x2;\n        array[i++] = y2;\n        array[i++] = -n1;\n        array[i++] = -n2;\n        array[i++] = thickness;\n        array[i++] = radius;\n        array[i++] = color;\n        array[i++] = 0;\n        array[i++] = 1;\n        array[i++] = 0;\n        // Third point\n        array[i++] = x2;\n        array[i++] = y2;\n        array[i++] = -n1;\n        array[i++] = -n2;\n        array[i++] = thickness;\n        array[i++] = radius;\n        array[i++] = color;\n        array[i++] = 0;\n        array[i++] = 0;\n        array[i] = 1;\n    };\n    EdgeArrowHeadProgram.prototype.render = function (params) {\n        var gl = this.gl;\n        var program = this.program;\n        gl.useProgram(program);\n        // Binding uniforms\n        gl.uniform1f(this.scaleLocation, params.scalingRatio);\n        gl.uniformMatrix3fv(this.matrixLocation, false, params.matrix);\n        gl.uniform1f(this.cameraRatioLocation, params.ratio);\n        gl.uniform1f(this.viewportRatioLocation, 1 / Math.min(params.width, params.height));\n        gl.uniform1f(this.thicknessRatioLocation, 1 / Math.pow(params.ratio, params.edgesPowRatio));\n        // Drawing:\n        gl.drawArrays(gl.TRIANGLES, 0, this.array.length / ATTRIBUTES);\n    };\n    return EdgeArrowHeadProgram;\n}(edge_1.AbstractEdgeProgram));\nexports.default = EdgeArrowHeadProgram;\n","(()=>{\"use strict\";var a={d:(n,t)=>{for(var o in t)a.o(t,o)&&!a.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:t[o]})},o:(a,n)=>Object.prototype.hasOwnProperty.call(a,n),r:a=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(a,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(a,\"__esModule\",{value:!0})}},n={};a.r(n),a.d(n,{default:()=>t});const t=\"attribute vec2 a_position;\\nattribute vec2 a_normal;\\nattribute float a_thickness;\\nattribute float a_radius;\\nattribute vec4 a_color;\\nattribute vec3 a_barycentric;\\n\\nuniform mat3 u_matrix;\\nuniform float u_scale;\\nuniform float u_cameraRatio;\\nuniform float u_viewportRatio;\\nuniform float u_thicknessRatio;\\n\\nvarying vec4 v_color;\\n\\nconst float arrowHeadLengthThicknessRatio = 2.5;\\nconst float arrowHeadWidthLengthRatio = 0.66;\\nconst float minThickness = 0.8;\\nconst float bias = 255.0 / 254.0;\\n\\nvoid main() {\\n\\n  // Computing thickness in screen space:\\n  float thickness = a_thickness * u_thicknessRatio * u_scale * u_viewportRatio / 2.0;\\n  thickness = max(thickness, minThickness * u_viewportRatio);\\n\\n  float nodeRadius = a_radius * u_thicknessRatio * u_viewportRatio * u_cameraRatio;\\n  float arrowHeadLength = thickness * 2.0 * arrowHeadLengthThicknessRatio * u_cameraRatio;\\n  float arrowHeadHalfWidth = arrowHeadWidthLengthRatio * arrowHeadLength / 2.0;\\n\\n  float da = a_barycentric.x;\\n  float db = a_barycentric.y;\\n  float dc = a_barycentric.z;\\n\\n  vec2 delta = vec2(\\n      da * ((nodeRadius) * a_normal.y)\\n    + db * ((nodeRadius + arrowHeadLength) * a_normal.y + arrowHeadHalfWidth * a_normal.x)\\n    + dc * ((nodeRadius + arrowHeadLength) * a_normal.y - arrowHeadHalfWidth * a_normal.x),\\n\\n      da * (-(nodeRadius) * a_normal.x)\\n    + db * (-(nodeRadius + arrowHeadLength) * a_normal.x + arrowHeadHalfWidth * a_normal.y)\\n    + dc * (-(nodeRadius + arrowHeadLength) * a_normal.x - arrowHeadHalfWidth * a_normal.y)\\n  );\\n\\n  vec2 position = (u_matrix * vec3(a_position + delta, 1)).xy;\\n\\n  gl_Position = vec4(position, 0, 1);\\n\\n  // Extract the color:\\n  v_color = a_color;\\n  v_color.a *= bias;\\n}\\n\";module.exports=n})();","(()=>{\"use strict\";var e={d:(o,r)=>{for(var t in r)e.o(r,t)&&!e.o(o,t)&&Object.defineProperty(o,t,{enumerable:!0,get:r[t]})},o:(e,o)=>Object.prototype.hasOwnProperty.call(e,o),r:e=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})}},o={};e.r(o),e.d(o,{default:()=>r});const r=\"precision mediump float;\\n\\nvarying vec4 v_color;\\n\\nvoid main(void) {\\n  gl_FragColor = v_color;\\n}\\n\";module.exports=o})();","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar edge_1 = require(\"./common/edge\");\nvar utils_1 = require(\"../../../utils\");\nvar edge_clamped_vert_glsl_1 = __importDefault(require(\"../shaders/edge.clamped.vert.glsl.js\"));\nvar edge_frag_glsl_1 = __importDefault(require(\"../shaders/edge.frag.glsl.js\"));\nvar POINTS = 4, ATTRIBUTES = 7, STRIDE = POINTS * ATTRIBUTES;\nvar EdgeClampedProgram = /** @class */ (function (_super) {\n    __extends(EdgeClampedProgram, _super);\n    function EdgeClampedProgram(gl) {\n        var _this = _super.call(this, gl, edge_clamped_vert_glsl_1.default, edge_frag_glsl_1.default, POINTS, ATTRIBUTES) || this;\n        // Initializing indices buffer\n        var indicesBuffer = gl.createBuffer();\n        if (indicesBuffer === null)\n            throw new Error(\"EdgeClampedProgram: error while getting resolutionLocation\");\n        _this.indicesBuffer = indicesBuffer;\n        // Locations:\n        _this.positionLocation = gl.getAttribLocation(_this.program, \"a_position\");\n        _this.colorLocation = gl.getAttribLocation(_this.program, \"a_color\");\n        _this.normalLocation = gl.getAttribLocation(_this.program, \"a_normal\");\n        _this.thicknessLocation = gl.getAttribLocation(_this.program, \"a_thickness\");\n        _this.radiusLocation = gl.getAttribLocation(_this.program, \"a_radius\");\n        // Uniform locations\n        var scaleLocation = gl.getUniformLocation(_this.program, \"u_scale\");\n        if (scaleLocation === null)\n            throw new Error(\"EdgeClampedProgram: error while getting scaleLocation\");\n        _this.scaleLocation = scaleLocation;\n        var matrixLocation = gl.getUniformLocation(_this.program, \"u_matrix\");\n        if (matrixLocation === null)\n            throw new Error(\"EdgeClampedProgram: error while getting matrixLocation\");\n        _this.matrixLocation = matrixLocation;\n        var cameraRatioLocation = gl.getUniformLocation(_this.program, \"u_cameraRatio\");\n        if (cameraRatioLocation === null)\n            throw new Error(\"EdgeClampedProgram: error while getting cameraRatioLocation\");\n        _this.cameraRatioLocation = cameraRatioLocation;\n        var viewportRatioLocation = gl.getUniformLocation(_this.program, \"u_viewportRatio\");\n        if (viewportRatioLocation === null)\n            throw new Error(\"EdgeClampedProgram: error while getting viewportRatioLocation\");\n        _this.viewportRatioLocation = viewportRatioLocation;\n        var thicknessRatioLocation = gl.getUniformLocation(_this.program, \"u_thicknessRatio\");\n        if (thicknessRatioLocation === null)\n            throw new Error(\"EdgeClampedProgram: error while getting thicknessRatioLocation\");\n        _this.thicknessRatioLocation = thicknessRatioLocation;\n        // Enabling the OES_element_index_uint extension\n        // NOTE: on older GPUs, this means that really large graphs won't\n        // have all their edges rendered. But it seems that the\n        // `OES_element_index_uint` is quite everywhere so we'll handle\n        // the potential issue if it really arises.\n        // NOTE: when using webgl2, the extension is enabled by default\n        _this.canUse32BitsIndices = utils_1.canUse32BitsIndices(gl);\n        _this.IndicesArray = _this.canUse32BitsIndices ? Uint32Array : Uint16Array;\n        _this.indicesArray = new _this.IndicesArray();\n        _this.indicesType = _this.canUse32BitsIndices ? gl.UNSIGNED_INT : gl.UNSIGNED_SHORT;\n        _this.bind();\n        return _this;\n    }\n    EdgeClampedProgram.prototype.bind = function () {\n        var gl = this.gl;\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n        // Bindings\n        gl.enableVertexAttribArray(this.positionLocation);\n        gl.enableVertexAttribArray(this.normalLocation);\n        gl.enableVertexAttribArray(this.thicknessLocation);\n        gl.enableVertexAttribArray(this.colorLocation);\n        gl.enableVertexAttribArray(this.radiusLocation);\n        gl.vertexAttribPointer(this.positionLocation, 2, gl.FLOAT, false, ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT, 0);\n        gl.vertexAttribPointer(this.normalLocation, 2, gl.FLOAT, false, ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT, 8);\n        gl.vertexAttribPointer(this.thicknessLocation, 1, gl.FLOAT, false, ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT, 16);\n        gl.vertexAttribPointer(this.colorLocation, 4, gl.UNSIGNED_BYTE, true, ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT, 20);\n        gl.vertexAttribPointer(this.radiusLocation, 1, gl.FLOAT, false, ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT, 24);\n    };\n    EdgeClampedProgram.prototype.process = function (sourceData, targetData, data, hidden, offset) {\n        if (hidden) {\n            for (var i_1 = offset * STRIDE, l = i_1 + STRIDE; i_1 < l; i_1++)\n                this.array[i_1] = 0;\n            return;\n        }\n        var thickness = data.size || 1, x1 = sourceData.x, y1 = sourceData.y, x2 = targetData.x, y2 = targetData.y, radius = targetData.size || 1, color = utils_1.floatColor(data.color);\n        // Computing normals\n        var dx = x2 - x1, dy = y2 - y1;\n        var len = dx * dx + dy * dy, n1 = 0, n2 = 0;\n        if (len) {\n            len = 1 / Math.sqrt(len);\n            n1 = -dy * len;\n            n2 = dx * len;\n        }\n        var i = POINTS * ATTRIBUTES * offset;\n        var array = this.array;\n        // First point\n        array[i++] = x1;\n        array[i++] = y1;\n        array[i++] = n1;\n        array[i++] = n2;\n        array[i++] = thickness;\n        array[i++] = color;\n        array[i++] = 0;\n        // First point flipped\n        array[i++] = x1;\n        array[i++] = y1;\n        array[i++] = -n1;\n        array[i++] = -n2;\n        array[i++] = thickness;\n        array[i++] = color;\n        array[i++] = 0;\n        // Second point\n        array[i++] = x2;\n        array[i++] = y2;\n        array[i++] = n1;\n        array[i++] = n2;\n        array[i++] = thickness;\n        array[i++] = color;\n        array[i++] = radius;\n        // Second point flipped\n        array[i++] = x2;\n        array[i++] = y2;\n        array[i++] = -n1;\n        array[i++] = -n2;\n        array[i++] = thickness;\n        array[i++] = color;\n        array[i] = -radius;\n    };\n    EdgeClampedProgram.prototype.computeIndices = function () {\n        var l = this.array.length / ATTRIBUTES;\n        var size = l + l / 2;\n        var indices = new this.IndicesArray(size);\n        for (var i = 0, c = 0; i < l; i += 4) {\n            indices[c++] = i;\n            indices[c++] = i + 1;\n            indices[c++] = i + 2;\n            indices[c++] = i + 2;\n            indices[c++] = i + 1;\n            indices[c++] = i + 3;\n        }\n        this.indicesArray = indices;\n    };\n    EdgeClampedProgram.prototype.bufferData = function () {\n        _super.prototype.bufferData.call(this);\n        // Indices data\n        var gl = this.gl;\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this.indicesArray, gl.STATIC_DRAW);\n    };\n    EdgeClampedProgram.prototype.render = function (params) {\n        var gl = this.gl;\n        var program = this.program;\n        gl.useProgram(program);\n        // Binding uniforms\n        gl.uniform1f(this.scaleLocation, params.scalingRatio);\n        gl.uniformMatrix3fv(this.matrixLocation, false, params.matrix);\n        gl.uniform1f(this.cameraRatioLocation, params.ratio);\n        gl.uniform1f(this.viewportRatioLocation, 1 / Math.min(params.width, params.height));\n        gl.uniform1f(this.thicknessRatioLocation, 1 / Math.pow(params.ratio, params.edgesPowRatio));\n        // Drawing:\n        gl.drawElements(gl.TRIANGLES, this.indicesArray.length, this.indicesType, 0);\n    };\n    return EdgeClampedProgram;\n}(edge_1.AbstractEdgeProgram));\nexports.default = EdgeClampedProgram;\n","(()=>{\"use strict\";var n={d:(t,o)=>{for(var e in o)n.o(o,e)&&!n.o(t,e)&&Object.defineProperty(t,e,{enumerable:!0,get:o[e]})},o:(n,t)=>Object.prototype.hasOwnProperty.call(n,t),r:n=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(n,\"__esModule\",{value:!0})}},t={};n.r(t),n.d(t,{default:()=>o});const o=\"attribute vec2 a_position;\\nattribute vec2 a_normal;\\nattribute float a_thickness;\\nattribute vec4 a_color;\\nattribute float a_radius;\\n\\nuniform mat3 u_matrix;\\nuniform float u_scale;\\nuniform float u_cameraRatio;\\nuniform float u_viewportRatio;\\nuniform float u_thicknessRatio;\\n\\nvarying vec4 v_color;\\nvarying vec2 v_normal;\\nvarying float v_thickness;\\n\\nconst float arrowHeadLengthThicknessRatio = 2.5;\\nconst float minThickness = 0.8;\\nconst float bias = 255.0 / 254.0;\\n\\nvoid main() {\\n\\n  // Computing thickness in screen space:\\n  float thickness = a_thickness * u_thicknessRatio * u_scale * u_viewportRatio / 2.0;\\n  thickness = max(thickness, minThickness * u_viewportRatio);\\n\\n  float direction = sign(a_radius);\\n  float nodeRadius = direction * a_radius * u_thicknessRatio * u_viewportRatio;\\n  float arrowHeadLength = thickness * 2.0 * arrowHeadLengthThicknessRatio;\\n\\n  vec2 arrowHeadVector = vec2(-direction * a_normal.y, direction * a_normal.x);\\n\\n  // Add normal vector to the position in screen space, but correct thickness first:\\n  vec2 position = a_position + a_normal * thickness * u_cameraRatio;\\n  // Add vector that corrects the arrow head length:\\n  position = position + arrowHeadVector * (arrowHeadLength + nodeRadius) * u_cameraRatio;\\n  // Apply camera\\n  position = (u_matrix * vec3(position, 1)).xy;\\n\\n  gl_Position = vec4(position, 0, 1);\\n\\n  v_normal = a_normal;\\n  v_thickness = thickness;\\n\\n  // Extract the color:\\n  v_color = a_color;\\n  v_color.a *= bias;\\n}\\n\";module.exports=t})();","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar captor_1 = __importStar(require(\"./captor\"));\nvar camera_1 = __importDefault(require(\"../camera\"));\nvar DRAG_TIMEOUT = 200;\nvar TOUCH_INERTIA_RATIO = 3;\nvar TOUCH_INERTIA_DURATION = 200;\n/**\n * Touch captor class.\n *\n * @constructor\n */\nvar TouchCaptor = /** @class */ (function (_super) {\n    __extends(TouchCaptor, _super);\n    function TouchCaptor(container, camera) {\n        var _this = _super.call(this, container, camera) || this;\n        _this.enabled = true;\n        _this.isMoving = false;\n        _this.touchMode = 0; // number of touches down\n        // Binding methods:\n        _this.handleStart = _this.handleStart.bind(_this);\n        _this.handleLeave = _this.handleLeave.bind(_this);\n        _this.handleMove = _this.handleMove.bind(_this);\n        // Binding events\n        container.addEventListener(\"touchstart\", _this.handleStart, false);\n        container.addEventListener(\"touchend\", _this.handleLeave, false);\n        container.addEventListener(\"touchcancel\", _this.handleLeave, false);\n        container.addEventListener(\"touchmove\", _this.handleMove, false);\n        return _this;\n    }\n    TouchCaptor.prototype.kill = function () {\n        var container = this.container;\n        container.removeEventListener(\"touchstart\", this.handleStart);\n        container.removeEventListener(\"touchend\", this.handleLeave);\n        container.removeEventListener(\"touchcancel\", this.handleLeave);\n        container.removeEventListener(\"touchmove\", this.handleMove);\n    };\n    TouchCaptor.prototype.getDimensions = function () {\n        return {\n            width: this.container.offsetWidth,\n            height: this.container.offsetHeight,\n        };\n    };\n    TouchCaptor.prototype.dispatchRelatedMouseEvent = function (type, e, position, emitter) {\n        var mousePosition = position || captor_1.getPosition(e.touches[0]);\n        var mouseEvent = new MouseEvent(type, {\n            clientX: mousePosition.x,\n            clientY: mousePosition.y,\n            altKey: e.altKey,\n            ctrlKey: e.ctrlKey,\n        });\n        (emitter || this.container).dispatchEvent(mouseEvent);\n    };\n    TouchCaptor.prototype.handleStart = function (e) {\n        if (!this.enabled)\n            return;\n        // Prevent default to avoid default browser behaviors...\n        e.preventDefault();\n        // ...but simulate mouse behavior anyway, to get the MouseCaptor working as well:\n        if (e.touches.length === 1)\n            this.dispatchRelatedMouseEvent(\"mousedown\", e);\n        var touches = captor_1.getTouchesArray(e.touches);\n        this.isMoving = true;\n        this.touchMode = touches.length;\n        this.startCameraState = this.camera.getState();\n        this.startTouchesPositions = touches.map(captor_1.getPosition);\n        this.lastTouchesPositions = this.startTouchesPositions;\n        // When there are two touches down, let's record distance and angle as well:\n        if (this.touchMode === 2) {\n            var _a = __read(this.startTouchesPositions, 2), _b = _a[0], x0 = _b.x, y0 = _b.y, _c = _a[1], x1 = _c.x, y1 = _c.y;\n            this.startTouchesAngle = Math.atan2(y1 - y0, x1 - x0);\n            this.startTouchesDistance = Math.sqrt(Math.pow(x1 - x0, 2) + Math.pow(y1 - y0, 2));\n        }\n        this.emit(\"touchdown\", captor_1.getTouchCoords(e));\n    };\n    TouchCaptor.prototype.handleLeave = function (e) {\n        if (!this.enabled)\n            return;\n        // Prevent default to avoid default browser behaviors...\n        e.preventDefault();\n        // ...but simulate mouse behavior anyway, to get the MouseCaptor working as well:\n        if (e.touches.length === 0 && this.lastTouchesPositions && this.lastTouchesPositions.length) {\n            this.dispatchRelatedMouseEvent(\"mouseup\", e, this.lastTouchesPositions[0], document);\n            this.dispatchRelatedMouseEvent(\"click\", e, this.lastTouchesPositions[0]);\n        }\n        if (this.movingTimeout) {\n            this.isMoving = false;\n            clearTimeout(this.movingTimeout);\n        }\n        switch (this.touchMode) {\n            case 2:\n                if (e.touches.length === 1) {\n                    this.handleStart(e);\n                    e.preventDefault();\n                    break;\n                }\n            /* falls through */\n            case 1:\n                // TODO\n                // Dispatch event\n                if (this.isMoving) {\n                    var cameraState = this.camera.getState(), previousCameraState = this.camera.getPreviousState();\n                    this.camera.animate({\n                        x: cameraState.x + TOUCH_INERTIA_RATIO * (cameraState.x - previousCameraState.x),\n                        y: cameraState.y + TOUCH_INERTIA_RATIO * (cameraState.y - previousCameraState.y),\n                    }, {\n                        duration: TOUCH_INERTIA_DURATION,\n                        easing: \"quadraticOut\",\n                    });\n                }\n                this.isMoving = false;\n                this.touchMode = 0;\n                break;\n        }\n        this.emit(\"touchup\", captor_1.getTouchCoords(e));\n    };\n    TouchCaptor.prototype.handleMove = function (e) {\n        var _a;\n        var _this = this;\n        if (!this.enabled)\n            return;\n        // Prevent default to avoid default browser behaviors...\n        e.preventDefault();\n        // ...but simulate mouse behavior anyway, to get the MouseCaptor working as well:\n        if (e.touches.length === 1)\n            this.dispatchRelatedMouseEvent(\"mousemove\", e);\n        var startCameraState = this.startCameraState;\n        var touches = captor_1.getTouchesArray(e.touches);\n        var touchesPositions = touches.map(captor_1.getPosition);\n        this.lastTouchesPositions = touchesPositions;\n        this.isMoving = true;\n        if (this.movingTimeout)\n            clearTimeout(this.movingTimeout);\n        this.movingTimeout = window.setTimeout(function () {\n            _this.isMoving = false;\n        }, DRAG_TIMEOUT);\n        switch (this.touchMode) {\n            case 1: {\n                var _b = this.camera.viewportToFramedGraph(this.getDimensions(), (this.startTouchesPositions || [])[0]), xStart = _b.x, yStart = _b.y;\n                var _c = this.camera.viewportToFramedGraph(this.getDimensions(), touchesPositions[0]), x = _c.x, y = _c.y;\n                this.camera.setState({\n                    x: startCameraState.x + xStart - x,\n                    y: startCameraState.y + yStart - y,\n                });\n                break;\n            }\n            case 2: {\n                /**\n                 * Here is the thinking here:\n                 *\n                 * 1. We can find the new angle and ratio, by comparing the vector from \"touch one\" to \"touch two\" at the start\n                 *    of the d'n'd and now\n                 *\n                 * 2. We can use `Camera#viewportToGraph` inside formula to retrieve the new camera position, using the graph\n                 *    position of a touch at the beginning of the d'n'd (using `startCamera.viewportToGraph`) and the viewport\n                 *    position of this same touch now\n                 */\n                var newCameraState = {};\n                var _d = touchesPositions[0], x0 = _d.x, y0 = _d.y;\n                var _e = touchesPositions[1], x1 = _e.x, y1 = _e.y;\n                var angleDiff = Math.atan2(y1 - y0, x1 - x0) - this.startTouchesAngle;\n                var ratioDiff = Math.hypot(y1 - y0, x1 - x0) / this.startTouchesDistance;\n                // 1.\n                newCameraState.ratio = startCameraState.ratio / ratioDiff;\n                newCameraState.angle = startCameraState.angle + angleDiff;\n                // 2.\n                var dimensions = this.getDimensions();\n                var touchGraphPosition = camera_1.default.from(startCameraState).viewportToFramedGraph(dimensions, (this.startTouchesPositions || [])[0]);\n                var smallestDimension = Math.min(dimensions.width, dimensions.height);\n                var dx = smallestDimension / dimensions.width;\n                var dy = smallestDimension / dimensions.height;\n                var ratio = newCameraState.ratio / smallestDimension;\n                // Align with center of the graph:\n                var x = x0 - smallestDimension / 2 / dx;\n                var y = y0 - smallestDimension / 2 / dy;\n                // Rotate:\n                _a = __read([\n                    x * Math.cos(-newCameraState.angle) - y * Math.sin(-newCameraState.angle),\n                    y * Math.cos(-newCameraState.angle) + x * Math.sin(-newCameraState.angle),\n                ], 2), x = _a[0], y = _a[1];\n                newCameraState.x = touchGraphPosition.x - x * ratio;\n                newCameraState.y = touchGraphPosition.y + y * ratio;\n                this.camera.setState(newCameraState);\n                break;\n            }\n        }\n        this.emit(\"touchmove\", captor_1.getTouchCoords(e));\n    };\n    return TouchCaptor;\n}(captor_1.default));\nexports.default = TouchCaptor;\n","module.exports = __WEBPACK_EXTERNAL_MODULE__42__;","import React, { ReactNode } from \"react\";\n\ninterface Props {\n  children?: ReactNode;\n  position?: \"top-right\" | \"top-left\" | \"bottom-right\" | \"bottom-left\";\n}\n\nexport const ControlsContainer: React.FC<Props> = ({ children, position = \"bottom-left\" }) => {\n  return <div className={`react-sigma-controls ${position}`}>{children}</div>;\n};\n","import React, { CSSProperties, ReactNode, useEffect, useMemo, useRef, useState } from \"react\";\nimport FA2LayoutSupervisor, { FA2LayoutSupervisorParameters } from \"graphology-layout-forceatlas2/worker\";\nimport { useSigma } from \"../hooks\";\n\ninterface Props {\n  /**\n   * The FA2 worker settings.\n   */\n  settings?: FA2LayoutSupervisorParameters;\n  /**\n   * Option to tell what we do when the component is mounted\n   *  - <code>-1</code> means that we do nothing (it's the same as no value)\n   *  - <code>0</code> means that we start the algo (and don't auto stop it)\n   *  - <code>X</code> mans that we start the algo, and stop it after X milliseconds\n   */\n  autoRunFor?: number;\n}\n\nexport const ForceAtlasControl: React.FC<Props> = ({ settings, autoRunFor = -1 }) => {\n  // Get Sigma\n  const sigma = useSigma();\n  // The FA2 worker\n  const [fa2, setFa2] = useState<FA2LayoutSupervisor | null>(null);\n  // Is FA2 is running\n  const [fa2IsRunning, setFa2IsRunning] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (sigma) {\n      // Create the FA2 worker\n      const nFa2 = new FA2LayoutSupervisor(sigma.getGraph(), settings ? settings : {});\n      setFa2(nFa2);\n\n      // we run the algo\n      let timeout = null;\n      if (autoRunFor > -1 && sigma.getGraph().order > 0) {\n        setFa2IsRunning(true);\n        // set a timeout to stop it\n        timeout =\n          autoRunFor > 0\n            ? window.setTimeout(() => {\n                setFa2IsRunning(false);\n              }, autoRunFor)\n            : null;\n      }\n\n      //cleaning\n      return () => {\n        if (nFa2) nFa2.kill();\n        if (timeout) clearTimeout(timeout);\n      };\n    }\n  }, [autoRunFor, settings, sigma]);\n\n  useEffect(() => {\n    try {\n      if (fa2) {\n        if (fa2IsRunning === true) {\n          fa2.start();\n        } else {\n          fa2.stop();\n        }\n      }\n    } catch (e) {}\n  }, [fa2, fa2IsRunning]);\n\n  return (\n    <div className={`react-sigma-control-forceatlas2 ${fa2IsRunning ? \"running\" : \"stopped\"}`}>\n      <button\n        onClick={() => setFa2IsRunning(e => !e)}\n        title={fa2IsRunning ? \"Stop the layout animation\" : \"Start the layout animation\"}\n      ></button>\n    </div>\n  );\n};\n","/**\n * Graphology ForceAtlas2 Layout Supervisor\n * =========================================\n *\n * Supervisor class able to spawn a web worker to run the FA2 layout in a\n * separate thread not to block UI with heavy synchronous computations.\n */\nvar workerFunction = require('./webworker.js'),\n    isGraph = require('graphology-utils/is-graph'),\n    helpers = require('./helpers.js');\n\nvar DEFAULT_SETTINGS = require('./defaults.js');\n\n/**\n * Class representing a FA2 layout run by a webworker.\n *\n * @constructor\n * @param  {Graph}         graph        - Target graph.\n * @param  {object|number} params       - Parameters:\n * @param  {object}          [settings] - Settings.\n */\nfunction FA2LayoutSupervisor(graph, params) {\n  params = params || {};\n\n  // Validation\n  if (!isGraph(graph))\n    throw new Error('graphology-layout-forceatlas2/worker: the given graph is not a valid graphology instance.');\n\n  // Validating settings\n  var settings = helpers.assign({}, DEFAULT_SETTINGS, params.settings),\n      validationError = helpers.validateSettings(settings);\n\n  if (validationError)\n    throw new Error('graphology-layout-forceatlas2/worker: ' + validationError.message);\n\n  // Properties\n  this.worker = null;\n  this.graph = graph;\n  this.settings = settings;\n  this.matrices = null;\n  this.running = false;\n  this.killed = false;\n\n  // Binding listeners\n  this.handleMessage = this.handleMessage.bind(this);\n\n  var alreadyRespawning = false;\n  var self = this;\n\n  this.handleAddition = function() {\n    if (alreadyRespawning)\n      return;\n\n    alreadyRespawning = true;\n\n    self.spawnWorker();\n    setImmediate(function() {\n      alreadyRespawning = false;\n    });\n  };\n\n  graph.on('nodeAdded', this.handleAddition);\n  graph.on('edgeAdded', this.handleAddition);\n\n  // Spawning worker\n  this.spawnWorker();\n}\n\n/**\n * Internal method used to spawn the web worker.\n */\nFA2LayoutSupervisor.prototype.spawnWorker = function() {\n  if (this.worker)\n    this.worker.terminate();\n\n  this.worker = helpers.createWorker(workerFunction);\n  this.worker.addEventListener('message', this.handleMessage);\n\n  if (this.running) {\n    this.running = false;\n    this.start();\n  }\n};\n\n/**\n * Internal method used to handle the worker's messages.\n *\n * @param {object} event - Event to handle.\n */\nFA2LayoutSupervisor.prototype.handleMessage = function(event) {\n  if (!this.running)\n    return;\n\n  var matrix = new Float32Array(event.data.nodes);\n\n  helpers.assignLayoutChanges(this.graph, matrix);\n  this.matrices.nodes = matrix;\n\n  // Looping\n  this.askForIterations();\n};\n\n/**\n * Internal method used to ask for iterations from the worker.\n *\n * @param  {boolean} withEdges - Should we send edges along?\n * @return {FA2LayoutSupervisor}\n */\nFA2LayoutSupervisor.prototype.askForIterations = function(withEdges) {\n  var matrices = this.matrices;\n\n  var payload = {\n    settings: this.settings,\n    nodes: matrices.nodes.buffer\n  };\n\n  var buffers = [matrices.nodes.buffer];\n\n  if (withEdges) {\n    payload.edges = matrices.edges.buffer;\n    buffers.push(matrices.edges.buffer);\n  }\n\n  this.worker.postMessage(payload, buffers);\n\n  return this;\n};\n\n/**\n * Method used to start the layout.\n *\n * @return {FA2LayoutSupervisor}\n */\nFA2LayoutSupervisor.prototype.start = function() {\n  if (this.killed)\n    throw new Error('graphology-layout-forceatlas2/worker.start: layout was killed.');\n\n  if (this.running)\n    return this;\n\n  // Building matrices\n  this.matrices = helpers.graphToByteArrays(this.graph);\n\n  this.running = true;\n  this.askForIterations(true);\n\n  return this;\n};\n\n/**\n * Method used to stop the layout.\n *\n * @return {FA2LayoutSupervisor}\n */\nFA2LayoutSupervisor.prototype.stop = function() {\n  this.running = false;\n\n  return this;\n};\n\n/**\n * Method used to kill the layout.\n *\n * @return {FA2LayoutSupervisor}\n */\nFA2LayoutSupervisor.prototype.kill = function() {\n  if (this.killed)\n    return this;\n\n  this.running = false;\n  this.killed = true;\n\n  // Clearing memory\n  this.matrices = null;\n\n  // Terminating worker\n  this.worker.terminate();\n\n  // Unbinding listeners\n  this.graph.removeListener('nodeAdded', this.handleAddition);\n  this.graph.removeListener('edgeAdded', this.handleAddition);\n};\n\n/**\n * Exporting.\n */\nmodule.exports = FA2LayoutSupervisor;\n","/**\n * Graphology ForceAtlas2 Layout Webworker\n * ========================================\n *\n * Web worker able to run the layout in a separate thread.\n */\nmodule.exports = function worker() {\n  var NODES,\n      EDGES;\n\n  var moduleShim = {};\n\n  (function() {\n    /* eslint no-constant-condition: 0 */\n/**\n * Graphology ForceAtlas2 Iteration\n * =================================\n *\n * Function used to perform a single iteration of the algorithm.\n */\n\n/**\n * Matrices properties accessors.\n */\nvar NODE_X = 0,\n    NODE_Y = 1,\n    NODE_DX = 2,\n    NODE_DY = 3,\n    NODE_OLD_DX = 4,\n    NODE_OLD_DY = 5,\n    NODE_MASS = 6,\n    NODE_CONVERGENCE = 7,\n    NODE_SIZE = 8,\n    NODE_FIXED = 9;\n\nvar EDGE_SOURCE = 0,\n    EDGE_TARGET = 1,\n    EDGE_WEIGHT = 2;\n\nvar REGION_NODE = 0,\n    REGION_CENTER_X = 1,\n    REGION_CENTER_Y = 2,\n    REGION_SIZE = 3,\n    REGION_NEXT_SIBLING = 4,\n    REGION_FIRST_CHILD = 5,\n    REGION_MASS = 6,\n    REGION_MASS_CENTER_X = 7,\n    REGION_MASS_CENTER_Y = 8;\n\nvar SUBDIVISION_ATTEMPTS = 3;\n\n/**\n * Constants.\n */\nvar PPN = 10,\n    PPE = 3,\n    PPR = 9;\n\nvar MAX_FORCE = 10;\n\n/**\n * Function used to perform a single interation of the algorithm.\n *\n * @param  {object}       options    - Layout options.\n * @param  {Float32Array} NodeMatrix - Node data.\n * @param  {Float32Array} EdgeMatrix - Edge data.\n * @return {object}                  - Some metadata.\n */\nmoduleShim.exports = function iterate(options, NodeMatrix, EdgeMatrix) {\n\n  // Initializing variables\n  var l, r, n, n1, n2, rn, e, w, g, s;\n\n  var order = NodeMatrix.length,\n      size = EdgeMatrix.length;\n\n  var adjustSizes = options.adjustSizes;\n\n  var thetaSquared = options.barnesHutTheta * options.barnesHutTheta;\n\n  var outboundAttCompensation,\n      coefficient,\n      xDist,\n      yDist,\n      ewc,\n      distance,\n      factor;\n\n  var RegionMatrix = [];\n\n  // 1) Initializing layout data\n  //-----------------------------\n\n  // Resetting positions & computing max values\n  for (n = 0; n < order; n += PPN) {\n    NodeMatrix[n + NODE_OLD_DX] = NodeMatrix[n + NODE_DX];\n    NodeMatrix[n + NODE_OLD_DY] = NodeMatrix[n + NODE_DY];\n    NodeMatrix[n + NODE_DX] = 0;\n    NodeMatrix[n + NODE_DY] = 0;\n  }\n\n  // If outbound attraction distribution, compensate\n  if (options.outboundAttractionDistribution) {\n    outboundAttCompensation = 0;\n    for (n = 0; n < order; n += PPN) {\n      outboundAttCompensation += NodeMatrix[n + NODE_MASS];\n    }\n\n    outboundAttCompensation /= (order / PPN);\n  }\n\n\n  // 1.bis) Barnes-Hut computation\n  //------------------------------\n\n  if (options.barnesHutOptimize) {\n\n    // Setting up\n    var minX = Infinity,\n        maxX = -Infinity,\n        minY = Infinity,\n        maxY = -Infinity,\n        q, q2, subdivisionAttempts;\n\n    // Computing min and max values\n    for (n = 0; n < order; n += PPN) {\n      minX = Math.min(minX, NodeMatrix[n + NODE_X]);\n      maxX = Math.max(maxX, NodeMatrix[n + NODE_X]);\n      minY = Math.min(minY, NodeMatrix[n + NODE_Y]);\n      maxY = Math.max(maxY, NodeMatrix[n + NODE_Y]);\n    }\n\n    // squarify bounds, it's a quadtree\n    var dx = maxX - minX, dy = maxY - minY;\n    if (dx > dy) {\n      minY -= (dx - dy) / 2;\n      maxY = minY + dx;\n    }\n    else {\n      minX -= (dy - dx) / 2;\n      maxX = minX + dy;\n    }\n\n    // Build the Barnes Hut root region\n    RegionMatrix[0 + REGION_NODE] = -1;\n    RegionMatrix[0 + REGION_CENTER_X] = (minX + maxX) / 2;\n    RegionMatrix[0 + REGION_CENTER_Y] = (minY + maxY) / 2;\n    RegionMatrix[0 + REGION_SIZE] = Math.max(maxX - minX, maxY - minY);\n    RegionMatrix[0 + REGION_NEXT_SIBLING] = -1;\n    RegionMatrix[0 + REGION_FIRST_CHILD] = -1;\n    RegionMatrix[0 + REGION_MASS] = 0;\n    RegionMatrix[0 + REGION_MASS_CENTER_X] = 0;\n    RegionMatrix[0 + REGION_MASS_CENTER_Y] = 0;\n\n    // Add each node in the tree\n    l = 1;\n    for (n = 0; n < order; n += PPN) {\n\n      // Current region, starting with root\n      r = 0;\n      subdivisionAttempts = SUBDIVISION_ATTEMPTS;\n\n      while (true) {\n        // Are there sub-regions?\n\n        // We look at first child index\n        if (RegionMatrix[r + REGION_FIRST_CHILD] >= 0) {\n\n          // There are sub-regions\n\n          // We just iterate to find a \"leaf\" of the tree\n          // that is an empty region or a region with a single node\n          // (see next case)\n\n          // Find the quadrant of n\n          if (NodeMatrix[n + NODE_X] < RegionMatrix[r + REGION_CENTER_X]) {\n\n            if (NodeMatrix[n + NODE_Y] < RegionMatrix[r + REGION_CENTER_Y]) {\n\n              // Top Left quarter\n              q = RegionMatrix[r + REGION_FIRST_CHILD];\n            }\n            else {\n\n              // Bottom Left quarter\n              q = RegionMatrix[r + REGION_FIRST_CHILD] + PPR;\n            }\n          }\n          else {\n            if (NodeMatrix[n + NODE_Y] < RegionMatrix[r + REGION_CENTER_Y]) {\n\n              // Top Right quarter\n              q = RegionMatrix[r + REGION_FIRST_CHILD] + PPR * 2;\n            }\n            else {\n\n              // Bottom Right quarter\n              q = RegionMatrix[r + REGION_FIRST_CHILD] + PPR * 3;\n            }\n          }\n\n          // Update center of mass and mass (we only do it for non-leave regions)\n          RegionMatrix[r + REGION_MASS_CENTER_X] =\n            (RegionMatrix[r + REGION_MASS_CENTER_X] * RegionMatrix[r + REGION_MASS] +\n             NodeMatrix[n + NODE_X] * NodeMatrix[n + NODE_MASS]) /\n            (RegionMatrix[r + REGION_MASS] + NodeMatrix[n + NODE_MASS]);\n\n          RegionMatrix[r + REGION_MASS_CENTER_Y] =\n            (RegionMatrix[r + REGION_MASS_CENTER_Y] * RegionMatrix[r + REGION_MASS] +\n             NodeMatrix[n + NODE_Y] * NodeMatrix[n + NODE_MASS]) /\n            (RegionMatrix[r + REGION_MASS] + NodeMatrix[n + NODE_MASS]);\n\n          RegionMatrix[r + REGION_MASS] += NodeMatrix[n + NODE_MASS];\n\n          // Iterate on the right quadrant\n          r = q;\n          continue;\n        }\n        else {\n\n          // There are no sub-regions: we are in a \"leaf\"\n\n          // Is there a node in this leave?\n          if (RegionMatrix[r + REGION_NODE] < 0) {\n\n            // There is no node in region:\n            // we record node n and go on\n            RegionMatrix[r + REGION_NODE] = n;\n            break;\n          }\n          else {\n\n            // There is a node in this region\n\n            // We will need to create sub-regions, stick the two\n            // nodes (the old one r[0] and the new one n) in two\n            // subregions. If they fall in the same quadrant,\n            // we will iterate.\n\n            // Create sub-regions\n            RegionMatrix[r + REGION_FIRST_CHILD] = l * PPR;\n            w = RegionMatrix[r + REGION_SIZE] / 2; // new size (half)\n\n            // NOTE: we use screen coordinates\n            // from Top Left to Bottom Right\n\n            // Top Left sub-region\n            g = RegionMatrix[r + REGION_FIRST_CHILD];\n\n            RegionMatrix[g + REGION_NODE] = -1;\n            RegionMatrix[g + REGION_CENTER_X] = RegionMatrix[r + REGION_CENTER_X] - w;\n            RegionMatrix[g + REGION_CENTER_Y] = RegionMatrix[r + REGION_CENTER_Y] - w;\n            RegionMatrix[g + REGION_SIZE] = w;\n            RegionMatrix[g + REGION_NEXT_SIBLING] = g + PPR;\n            RegionMatrix[g + REGION_FIRST_CHILD] = -1;\n            RegionMatrix[g + REGION_MASS] = 0;\n            RegionMatrix[g + REGION_MASS_CENTER_X] = 0;\n            RegionMatrix[g + REGION_MASS_CENTER_Y] = 0;\n\n            // Bottom Left sub-region\n            g += PPR;\n            RegionMatrix[g + REGION_NODE] = -1;\n            RegionMatrix[g + REGION_CENTER_X] = RegionMatrix[r + REGION_CENTER_X] - w;\n            RegionMatrix[g + REGION_CENTER_Y] = RegionMatrix[r + REGION_CENTER_Y] + w;\n            RegionMatrix[g + REGION_SIZE] = w;\n            RegionMatrix[g + REGION_NEXT_SIBLING] = g + PPR;\n            RegionMatrix[g + REGION_FIRST_CHILD] = -1;\n            RegionMatrix[g + REGION_MASS] = 0;\n            RegionMatrix[g + REGION_MASS_CENTER_X] = 0;\n            RegionMatrix[g + REGION_MASS_CENTER_Y] = 0;\n\n            // Top Right sub-region\n            g += PPR;\n            RegionMatrix[g + REGION_NODE] = -1;\n            RegionMatrix[g + REGION_CENTER_X] = RegionMatrix[r + REGION_CENTER_X] + w;\n            RegionMatrix[g + REGION_CENTER_Y] = RegionMatrix[r + REGION_CENTER_Y] - w;\n            RegionMatrix[g + REGION_SIZE] = w;\n            RegionMatrix[g + REGION_NEXT_SIBLING] = g + PPR;\n            RegionMatrix[g + REGION_FIRST_CHILD] = -1;\n            RegionMatrix[g + REGION_MASS] = 0;\n            RegionMatrix[g + REGION_MASS_CENTER_X] = 0;\n            RegionMatrix[g + REGION_MASS_CENTER_Y] = 0;\n\n            // Bottom Right sub-region\n            g += PPR;\n            RegionMatrix[g + REGION_NODE] = -1;\n            RegionMatrix[g + REGION_CENTER_X] = RegionMatrix[r + REGION_CENTER_X] + w;\n            RegionMatrix[g + REGION_CENTER_Y] = RegionMatrix[r + REGION_CENTER_Y] + w;\n            RegionMatrix[g + REGION_SIZE] = w;\n            RegionMatrix[g + REGION_NEXT_SIBLING] = RegionMatrix[r + REGION_NEXT_SIBLING];\n            RegionMatrix[g + REGION_FIRST_CHILD] = -1;\n            RegionMatrix[g + REGION_MASS] = 0;\n            RegionMatrix[g + REGION_MASS_CENTER_X] = 0;\n            RegionMatrix[g + REGION_MASS_CENTER_Y] = 0;\n\n            l += 4;\n\n            // Now the goal is to find two different sub-regions\n            // for the two nodes: the one previously recorded (r[0])\n            // and the one we want to add (n)\n\n            // Find the quadrant of the old node\n            if (NodeMatrix[RegionMatrix[r + REGION_NODE] + NODE_X] < RegionMatrix[r + REGION_CENTER_X]) {\n              if (NodeMatrix[RegionMatrix[r + REGION_NODE] + NODE_Y] < RegionMatrix[r + REGION_CENTER_Y]) {\n\n                // Top Left quarter\n                q = RegionMatrix[r + REGION_FIRST_CHILD];\n              }\n              else {\n\n                // Bottom Left quarter\n                q = RegionMatrix[r + REGION_FIRST_CHILD] + PPR;\n              }\n            }\n            else {\n              if (NodeMatrix[RegionMatrix[r + REGION_NODE] + NODE_Y] < RegionMatrix[r + REGION_CENTER_Y]) {\n\n                // Top Right quarter\n                q = RegionMatrix[r + REGION_FIRST_CHILD] + PPR * 2;\n              }\n              else {\n\n                // Bottom Right quarter\n                q = RegionMatrix[r + REGION_FIRST_CHILD] + PPR * 3;\n              }\n            }\n\n            // We remove r[0] from the region r, add its mass to r and record it in q\n            RegionMatrix[r + REGION_MASS] = NodeMatrix[RegionMatrix[r + REGION_NODE] + NODE_MASS];\n            RegionMatrix[r + REGION_MASS_CENTER_X] = NodeMatrix[RegionMatrix[r + REGION_NODE] + NODE_X];\n            RegionMatrix[r + REGION_MASS_CENTER_Y] = NodeMatrix[RegionMatrix[r + REGION_NODE] + NODE_Y];\n\n            RegionMatrix[q + REGION_NODE] = RegionMatrix[r + REGION_NODE];\n            RegionMatrix[r + REGION_NODE] = -1;\n\n            // Find the quadrant of n\n            if (NodeMatrix[n + NODE_X] < RegionMatrix[r + REGION_CENTER_X]) {\n              if (NodeMatrix[n + NODE_Y] < RegionMatrix[r + REGION_CENTER_Y]) {\n\n                // Top Left quarter\n                q2 = RegionMatrix[r + REGION_FIRST_CHILD];\n              }\n              else {\n                // Bottom Left quarter\n                q2 = RegionMatrix[r + REGION_FIRST_CHILD] + PPR;\n              }\n            }\n            else {\n              if (NodeMatrix[n + NODE_Y] < RegionMatrix[r + REGION_CENTER_Y]) {\n\n                // Top Right quarter\n                q2 = RegionMatrix[r + REGION_FIRST_CHILD] + PPR * 2;\n              }\n              else {\n\n                // Bottom Right quarter\n                q2 = RegionMatrix[r + REGION_FIRST_CHILD] + PPR * 3;\n              }\n            }\n\n            if (q === q2) {\n\n              // If both nodes are in the same quadrant,\n              // we have to try it again on this quadrant\n              if (subdivisionAttempts--) {\n                r = q;\n                continue; // while\n              }\n              else {\n                // we are out of precision here, and we cannot subdivide anymore\n                // but we have to break the loop anyway\n                subdivisionAttempts = SUBDIVISION_ATTEMPTS;\n                break; // while\n              }\n\n            }\n\n            // If both quadrants are different, we record n\n            // in its quadrant\n            RegionMatrix[q2 + REGION_NODE] = n;\n            break;\n          }\n        }\n      }\n    }\n  }\n\n\n  // 2) Repulsion\n  //--------------\n  // NOTES: adjustSizes = antiCollision & scalingRatio = coefficient\n\n  if (options.barnesHutOptimize) {\n    coefficient = options.scalingRatio;\n\n    // Applying repulsion through regions\n    for (n = 0; n < order; n += PPN) {\n\n      // Computing leaf quad nodes iteration\n\n      r = 0; // Starting with root region\n      while (true) {\n\n        if (RegionMatrix[r + REGION_FIRST_CHILD] >= 0) {\n\n          // The region has sub-regions\n\n          // We run the Barnes Hut test to see if we are at the right distance\n          distance = (\n            (Math.pow(NodeMatrix[n + NODE_X] - RegionMatrix[r + REGION_MASS_CENTER_X], 2)) +\n            (Math.pow(NodeMatrix[n + NODE_Y] - RegionMatrix[r + REGION_MASS_CENTER_Y], 2))\n          );\n\n          s = RegionMatrix[r + REGION_SIZE];\n\n          if ((4 * s * s) / distance < thetaSquared) {\n\n            // We treat the region as a single body, and we repulse\n\n            xDist = NodeMatrix[n + NODE_X] - RegionMatrix[r + REGION_MASS_CENTER_X];\n            yDist = NodeMatrix[n + NODE_Y] - RegionMatrix[r + REGION_MASS_CENTER_Y];\n\n            if (adjustSizes === true) {\n\n              //-- Linear Anti-collision Repulsion\n              if (distance > 0) {\n                factor = coefficient * NodeMatrix[n + NODE_MASS] *\n                  RegionMatrix[r + REGION_MASS] / distance;\n\n                NodeMatrix[n + NODE_DX] += xDist * factor;\n                NodeMatrix[n + NODE_DY] += yDist * factor;\n              }\n              else if (distance < 0) {\n                factor = -coefficient * NodeMatrix[n + NODE_MASS] *\n                  RegionMatrix[r + REGION_MASS] / Math.sqrt(distance);\n\n                NodeMatrix[n + NODE_DX] += xDist * factor;\n                NodeMatrix[n + NODE_DY] += yDist * factor;\n              }\n            }\n            else {\n\n              //-- Linear Repulsion\n              if (distance > 0) {\n                factor = coefficient * NodeMatrix[n + NODE_MASS] *\n                  RegionMatrix[r + REGION_MASS] / distance;\n\n                NodeMatrix[n + NODE_DX] += xDist * factor;\n                NodeMatrix[n + NODE_DY] += yDist * factor;\n              }\n            }\n\n            // When this is done, we iterate. We have to look at the next sibling.\n            r = RegionMatrix[r + REGION_NEXT_SIBLING];\n            if (r < 0)\n              break; // No next sibling: we have finished the tree\n\n            continue;\n          }\n          else {\n\n            // The region is too close and we have to look at sub-regions\n            r = RegionMatrix[r + REGION_FIRST_CHILD];\n            continue;\n          }\n\n        }\n        else {\n\n          // The region has no sub-region\n          // If there is a node r[0] and it is not n, then repulse\n          rn = RegionMatrix[r + REGION_NODE];\n\n          if (rn >= 0 && rn !== n) {\n            xDist = NodeMatrix[n + NODE_X] - NodeMatrix[rn + NODE_X];\n            yDist = NodeMatrix[n + NODE_Y] - NodeMatrix[rn + NODE_Y];\n\n            distance = xDist * xDist + yDist * yDist;\n\n            if (adjustSizes === true) {\n\n              //-- Linear Anti-collision Repulsion\n              if (distance > 0) {\n                factor = coefficient * NodeMatrix[n + NODE_MASS] *\n                  NodeMatrix[rn + NODE_MASS] / distance;\n\n                NodeMatrix[n + NODE_DX] += xDist * factor;\n                NodeMatrix[n + NODE_DY] += yDist * factor;\n              }\n              else if (distance < 0) {\n                factor = -coefficient * NodeMatrix[n + NODE_MASS] *\n                  NodeMatrix[rn + NODE_MASS] / Math.sqrt(distance);\n\n                NodeMatrix[n + NODE_DX] += xDist * factor;\n                NodeMatrix[n + NODE_DY] += yDist * factor;\n              }\n            }\n            else {\n\n              //-- Linear Repulsion\n              if (distance > 0) {\n                factor = coefficient * NodeMatrix[n + NODE_MASS] *\n                  NodeMatrix[rn + NODE_MASS] / distance;\n\n                NodeMatrix[n + NODE_DX] += xDist * factor;\n                NodeMatrix[n + NODE_DY] += yDist * factor;\n              }\n            }\n\n          }\n\n          // When this is done, we iterate. We have to look at the next sibling.\n          r = RegionMatrix[r + REGION_NEXT_SIBLING];\n\n          if (r < 0)\n            break; // No next sibling: we have finished the tree\n\n          continue;\n        }\n      }\n    }\n  }\n  else {\n    coefficient = options.scalingRatio;\n\n    // Square iteration\n    for (n1 = 0; n1 < order; n1 += PPN) {\n      for (n2 = 0; n2 < n1; n2 += PPN) {\n\n        // Common to both methods\n        xDist = NodeMatrix[n1 + NODE_X] - NodeMatrix[n2 + NODE_X];\n        yDist = NodeMatrix[n1 + NODE_Y] - NodeMatrix[n2 + NODE_Y];\n\n        if (adjustSizes === true) {\n\n          //-- Anticollision Linear Repulsion\n          distance = Math.sqrt(xDist * xDist + yDist * yDist) -\n            NodeMatrix[n1 + NODE_SIZE] -\n            NodeMatrix[n2 + NODE_SIZE];\n\n          if (distance > 0) {\n            factor = coefficient *\n              NodeMatrix[n1 + NODE_MASS] *\n              NodeMatrix[n2 + NODE_MASS] /\n              distance / distance;\n\n            // Updating nodes' dx and dy\n            NodeMatrix[n1 + NODE_DX] += xDist * factor;\n            NodeMatrix[n1 + NODE_DY] += yDist * factor;\n\n            NodeMatrix[n2 + NODE_DX] += xDist * factor;\n            NodeMatrix[n2 + NODE_DY] += yDist * factor;\n          }\n          else if (distance < 0) {\n            factor = 100 * coefficient *\n              NodeMatrix[n1 + NODE_MASS] *\n              NodeMatrix[n2 + NODE_MASS];\n\n            // Updating nodes' dx and dy\n            NodeMatrix[n1 + NODE_DX] += xDist * factor;\n            NodeMatrix[n1 + NODE_DY] += yDist * factor;\n\n            NodeMatrix[n2 + NODE_DX] -= xDist * factor;\n            NodeMatrix[n2 + NODE_DY] -= yDist * factor;\n          }\n        }\n        else {\n\n          //-- Linear Repulsion\n          distance = Math.sqrt(xDist * xDist + yDist * yDist);\n\n          if (distance > 0) {\n            factor = coefficient *\n              NodeMatrix[n1 + NODE_MASS] *\n              NodeMatrix[n2 + NODE_MASS] /\n              distance / distance;\n\n            // Updating nodes' dx and dy\n            NodeMatrix[n1 + NODE_DX] += xDist * factor;\n            NodeMatrix[n1 + NODE_DY] += yDist * factor;\n\n            NodeMatrix[n2 + NODE_DX] -= xDist * factor;\n            NodeMatrix[n2 + NODE_DY] -= yDist * factor;\n          }\n        }\n      }\n    }\n  }\n\n\n  // 3) Gravity\n  //------------\n  g = options.gravity / options.scalingRatio;\n  coefficient = options.scalingRatio;\n  for (n = 0; n < order; n += PPN) {\n    factor = 0;\n\n    // Common to both methods\n    xDist = NodeMatrix[n + NODE_X];\n    yDist = NodeMatrix[n + NODE_Y];\n    distance = Math.sqrt(\n      Math.pow(xDist, 2) + Math.pow(yDist, 2)\n    );\n\n    if (options.strongGravityMode) {\n\n      //-- Strong gravity\n      if (distance > 0)\n        factor = coefficient * NodeMatrix[n + NODE_MASS] * g;\n    }\n    else {\n\n      //-- Linear Anti-collision Repulsion n\n      if (distance > 0)\n        factor = coefficient * NodeMatrix[n + NODE_MASS] * g / distance;\n    }\n\n    // Updating node's dx and dy\n    NodeMatrix[n + NODE_DX] -= xDist * factor;\n    NodeMatrix[n + NODE_DY] -= yDist * factor;\n  }\n\n  // 4) Attraction\n  //---------------\n  coefficient = 1 *\n    (options.outboundAttractionDistribution ?\n      outboundAttCompensation :\n      1);\n\n  // TODO: simplify distance\n  // TODO: coefficient is always used as -c --> optimize?\n  for (e = 0; e < size; e += PPE) {\n    n1 = EdgeMatrix[e + EDGE_SOURCE];\n    n2 = EdgeMatrix[e + EDGE_TARGET];\n    w = EdgeMatrix[e + EDGE_WEIGHT];\n\n    // Edge weight influence\n    ewc = Math.pow(w, options.edgeWeightInfluence);\n\n    // Common measures\n    xDist = NodeMatrix[n1 + NODE_X] - NodeMatrix[n2 + NODE_X];\n    yDist = NodeMatrix[n1 + NODE_Y] - NodeMatrix[n2 + NODE_Y];\n\n    // Applying attraction to nodes\n    if (adjustSizes === true) {\n\n      distance = Math.sqrt(\n        (Math.pow(xDist, 2) + Math.pow(yDist, 2)) -\n        NodeMatrix[n1 + NODE_SIZE] -\n        NodeMatrix[n2 + NODE_SIZE]\n      );\n\n      if (options.linLogMode) {\n        if (options.outboundAttractionDistribution) {\n\n          //-- LinLog Degree Distributed Anti-collision Attraction\n          if (distance > 0) {\n            factor = -coefficient * ewc * Math.log(1 + distance) /\n            distance /\n            NodeMatrix[n1 + NODE_MASS];\n          }\n        }\n        else {\n\n          //-- LinLog Anti-collision Attraction\n          if (distance > 0) {\n            factor = -coefficient * ewc * Math.log(1 + distance) / distance;\n          }\n        }\n      }\n      else {\n        if (options.outboundAttractionDistribution) {\n\n          //-- Linear Degree Distributed Anti-collision Attraction\n          if (distance > 0) {\n            factor = -coefficient * ewc / NodeMatrix[n1 + NODE_MASS];\n          }\n        }\n        else {\n\n          //-- Linear Anti-collision Attraction\n          if (distance > 0) {\n            factor = -coefficient * ewc;\n          }\n        }\n      }\n    }\n    else {\n\n      distance = Math.sqrt(\n        Math.pow(xDist, 2) + Math.pow(yDist, 2)\n      );\n\n      if (options.linLogMode) {\n        if (options.outboundAttractionDistribution) {\n\n          //-- LinLog Degree Distributed Attraction\n          if (distance > 0) {\n            factor = -coefficient * ewc * Math.log(1 + distance) /\n              distance /\n              NodeMatrix[n1 + NODE_MASS];\n          }\n        }\n        else {\n\n          //-- LinLog Attraction\n          if (distance > 0)\n            factor = -coefficient * ewc * Math.log(1 + distance) / distance;\n        }\n      }\n      else {\n        if (options.outboundAttractionDistribution) {\n\n          //-- Linear Attraction Mass Distributed\n          // NOTE: Distance is set to 1 to override next condition\n          distance = 1;\n          factor = -coefficient * ewc / NodeMatrix[n1 + NODE_MASS];\n        }\n        else {\n\n          //-- Linear Attraction\n          // NOTE: Distance is set to 1 to override next condition\n          distance = 1;\n          factor = -coefficient * ewc;\n        }\n      }\n    }\n\n    // Updating nodes' dx and dy\n    // TODO: if condition or factor = 1?\n    if (distance > 0) {\n\n      // Updating nodes' dx and dy\n      NodeMatrix[n1 + NODE_DX] += xDist * factor;\n      NodeMatrix[n1 + NODE_DY] += yDist * factor;\n\n      NodeMatrix[n2 + NODE_DX] -= xDist * factor;\n      NodeMatrix[n2 + NODE_DY] -= yDist * factor;\n    }\n  }\n\n\n  // 5) Apply Forces\n  //-----------------\n  var force,\n      swinging,\n      traction,\n      nodespeed,\n      newX,\n      newY;\n\n  // MATH: sqrt and square distances\n  if (adjustSizes === true) {\n\n    for (n = 0; n < order; n += PPN) {\n      if (NodeMatrix[n + NODE_FIXED] !== 1) {\n        force = Math.sqrt(\n          Math.pow(NodeMatrix[n + NODE_DX], 2) +\n          Math.pow(NodeMatrix[n + NODE_DY], 2)\n        );\n\n        if (force > MAX_FORCE) {\n          NodeMatrix[n + NODE_DX] =\n            NodeMatrix[n + NODE_DX] * MAX_FORCE / force;\n          NodeMatrix[n + NODE_DY] =\n            NodeMatrix[n + NODE_DY] * MAX_FORCE / force;\n        }\n\n        swinging = NodeMatrix[n + NODE_MASS] *\n          Math.sqrt(\n            (NodeMatrix[n + NODE_OLD_DX] - NodeMatrix[n + NODE_DX]) *\n            (NodeMatrix[n + NODE_OLD_DX] - NodeMatrix[n + NODE_DX]) +\n            (NodeMatrix[n + NODE_OLD_DY] - NodeMatrix[n + NODE_DY]) *\n            (NodeMatrix[n + NODE_OLD_DY] - NodeMatrix[n + NODE_DY])\n          );\n\n        traction = Math.sqrt(\n          (NodeMatrix[n + NODE_OLD_DX] + NodeMatrix[n + NODE_DX]) *\n          (NodeMatrix[n + NODE_OLD_DX] + NodeMatrix[n + NODE_DX]) +\n          (NodeMatrix[n + NODE_OLD_DY] + NodeMatrix[n + NODE_DY]) *\n          (NodeMatrix[n + NODE_OLD_DY] + NodeMatrix[n + NODE_DY])\n        ) / 2;\n\n        nodespeed =\n          0.1 * Math.log(1 + traction) / (1 + Math.sqrt(swinging));\n\n        // Updating node's positon\n        newX = NodeMatrix[n + NODE_X] + NodeMatrix[n + NODE_DX] *\n          (nodespeed / options.slowDown);\n        NodeMatrix[n + NODE_X] = newX;\n\n        newY = NodeMatrix[n + NODE_Y] + NodeMatrix[n + NODE_DY] *\n          (nodespeed / options.slowDown);\n        NodeMatrix[n + NODE_Y] = newY;\n      }\n    }\n  }\n  else {\n\n    for (n = 0; n < order; n += PPN) {\n      if (NodeMatrix[n + NODE_FIXED] !== 1) {\n\n        swinging = NodeMatrix[n + NODE_MASS] *\n          Math.sqrt(\n            (NodeMatrix[n + NODE_OLD_DX] - NodeMatrix[n + NODE_DX]) *\n            (NodeMatrix[n + NODE_OLD_DX] - NodeMatrix[n + NODE_DX]) +\n            (NodeMatrix[n + NODE_OLD_DY] - NodeMatrix[n + NODE_DY]) *\n            (NodeMatrix[n + NODE_OLD_DY] - NodeMatrix[n + NODE_DY])\n          );\n\n        traction = Math.sqrt(\n          (NodeMatrix[n + NODE_OLD_DX] + NodeMatrix[n + NODE_DX]) *\n          (NodeMatrix[n + NODE_OLD_DX] + NodeMatrix[n + NODE_DX]) +\n          (NodeMatrix[n + NODE_OLD_DY] + NodeMatrix[n + NODE_DY]) *\n          (NodeMatrix[n + NODE_OLD_DY] + NodeMatrix[n + NODE_DY])\n        ) / 2;\n\n        nodespeed = NodeMatrix[n + NODE_CONVERGENCE] *\n          Math.log(1 + traction) / (1 + Math.sqrt(swinging));\n\n        // Updating node convergence\n        NodeMatrix[n + NODE_CONVERGENCE] =\n          Math.min(1, Math.sqrt(\n            nodespeed *\n            (Math.pow(NodeMatrix[n + NODE_DX], 2) +\n             Math.pow(NodeMatrix[n + NODE_DY], 2)) /\n            (1 + Math.sqrt(swinging))\n          ));\n\n        // Updating node's positon\n        newX = NodeMatrix[n + NODE_X] + NodeMatrix[n + NODE_DX] *\n          (nodespeed / options.slowDown);\n        NodeMatrix[n + NODE_X] = newX;\n\n        newY = NodeMatrix[n + NODE_Y] + NodeMatrix[n + NODE_DY] *\n          (nodespeed / options.slowDown);\n        NodeMatrix[n + NODE_Y] = newY;\n      }\n    }\n  }\n\n  // We return the information about the layout (no need to return the matrices)\n  return {};\n};\n\n  })();\n\n  var iterate = moduleShim.exports;\n\n  self.addEventListener('message', function(event) {\n    var data = event.data;\n\n    NODES = new Float32Array(data.nodes);\n\n    if (data.edges)\n      EDGES = new Float32Array(data.edges);\n\n    // Running the iteration\n    iterate(\n      data.settings,\n      NODES,\n      EDGES\n    );\n\n    // Sending result to supervisor\n    self.postMessage({\n      nodes: NODES.buffer\n    }, [NODES.buffer]);\n  });\n};\n\n","/**\n * Graphology ForceAtlas2 Helpers\n * ===============================\n *\n * Miscellaneous helper functions.\n */\n\n/**\n * Constants.\n */\nvar PPN = 10,\n    PPE = 3;\n\n/**\n * Very simple Object.assign-like function.\n *\n * @param  {object} target       - First object.\n * @param  {object} [...objects] - Objects to merge.\n * @return {object}\n */\nexports.assign = function(target) {\n  target = target || {};\n\n  var objects = Array.prototype.slice.call(arguments).slice(1),\n      i,\n      k,\n      l;\n\n  for (i = 0, l = objects.length; i < l; i++) {\n    if (!objects[i])\n      continue;\n\n    for (k in objects[i])\n      target[k] = objects[i][k];\n  }\n\n  return target;\n};\n\n/**\n * Function used to validate the given settings.\n *\n * @param  {object}      settings - Settings to validate.\n * @return {object|null}\n */\nexports.validateSettings = function(settings) {\n\n  if ('linLogMode' in settings &&\n      typeof settings.linLogMode !== 'boolean')\n    return {message: 'the `linLogMode` setting should be a boolean.'};\n\n  if ('outboundAttractionDistribution' in settings &&\n      typeof settings.outboundAttractionDistribution !== 'boolean')\n    return {message: 'the `outboundAttractionDistribution` setting should be a boolean.'};\n\n  if ('adjustSizes' in settings &&\n      typeof settings.adjustSizes !== 'boolean')\n    return {message: 'the `adjustSizes` setting should be a boolean.'};\n\n  if ('edgeWeightInfluence' in settings &&\n      typeof settings.edgeWeightInfluence !== 'number' &&\n      settings.edgeWeightInfluence < 0)\n    return {message: 'the `edgeWeightInfluence` setting should be a number >= 0.'};\n\n  if ('scalingRatio' in settings &&\n      typeof settings.scalingRatio !== 'number' &&\n      settings.scalingRatio < 0)\n    return {message: 'the `scalingRatio` setting should be a number >= 0.'};\n\n  if ('strongGravityMode' in settings &&\n      typeof settings.strongGravityMode !== 'boolean')\n    return {message: 'the `strongGravityMode` setting should be a boolean.'};\n\n  if ('gravity' in settings &&\n      typeof settings.gravity !== 'number' &&\n      settings.gravity < 0)\n    return {message: 'the `gravity` setting should be a number >= 0.'};\n\n  if ('slowDown' in settings &&\n      typeof settings.slowDown !== 'number' &&\n      settings.slowDown < 0)\n    return {message: 'the `slowDown` setting should be a number >= 0.'};\n\n  if ('barnesHutOptimize' in settings &&\n      typeof settings.barnesHutOptimize !== 'boolean')\n    return {message: 'the `barnesHutOptimize` setting should be a boolean.'};\n\n  if ('barnesHutTheta' in settings &&\n      typeof settings.barnesHutTheta !== 'number' &&\n      settings.barnesHutTheta < 0)\n    return {message: 'the `barnesHutTheta` setting should be a number >= 0.'};\n\n  return null;\n};\n\n/**\n * Function generating a flat matrix for both nodes & edges of the given graph.\n *\n * @param  {Graph}  graph - Target graph.\n * @return {object}       - Both matrices.\n */\nexports.graphToByteArrays = function(graph) {\n  var order = graph.order,\n      size = graph.size,\n      index = {},\n      j;\n\n  var NodeMatrix = new Float32Array(order * PPN),\n      EdgeMatrix = new Float32Array(size * PPE);\n\n  // Iterate through nodes\n  j = 0;\n  graph.forEachNode(function(node, attr) {\n\n    // Node index\n    index[node] = j;\n\n    // Populating byte array\n    NodeMatrix[j] = attr.x;\n    NodeMatrix[j + 1] = attr.y;\n    NodeMatrix[j + 2] = 0;\n    NodeMatrix[j + 3] = 0;\n    NodeMatrix[j + 4] = 0;\n    NodeMatrix[j + 5] = 0;\n    NodeMatrix[j + 6] = 1 + graph.degree(node);\n    NodeMatrix[j + 7] = 1;\n    NodeMatrix[j + 8] = attr.size || 1;\n    NodeMatrix[j + 9] = attr.fixed ? 1 : 0;\n    j += PPN;\n  });\n\n  // Iterate through edges\n  j = 0;\n  graph.forEachEdge(function(edge, attr, source, target) {\n\n    // Populating byte array\n    EdgeMatrix[j] = index[source];\n    EdgeMatrix[j + 1] = index[target];\n    EdgeMatrix[j + 2] = attr.weight || 0;\n    j += PPE;\n  });\n\n  return {\n    nodes: NodeMatrix,\n    edges: EdgeMatrix\n  };\n};\n\n/**\n * Function applying the layout back to the graph.\n *\n * @param {Graph}        graph      - Target graph.\n * @param {Float32Array} NodeMatrix - Node matrix.\n */\nexports.assignLayoutChanges = function(graph, NodeMatrix) {\n  var nodes = graph.nodes();\n\n  for (var i = 0, j = 0, l = NodeMatrix.length; i < l; i += PPN) {\n    graph.setNodeAttribute(nodes[j], 'x', NodeMatrix[i]);\n    graph.setNodeAttribute(nodes[j], 'y', NodeMatrix[i + 1]);\n    j++;\n  }\n};\n\n/**\n * Function collecting the layout positions.\n *\n * @param  {Graph}        graph      - Target graph.\n * @param  {Float32Array} NodeMatrix - Node matrix.\n * @return {object}                  - Map to node positions.\n */\nexports.collectLayoutChanges = function(graph, NodeMatrix) {\n  var nodes = graph.nodes(),\n      positions = Object.create(null);\n\n  for (var i = 0, j = 0, l = NodeMatrix.length; i < l; i += PPN) {\n    positions[nodes[j]] = {\n      x: NodeMatrix[i],\n      y: NodeMatrix[i + 1]\n    };\n\n    j++;\n  }\n\n  return positions;\n};\n\n/**\n * Function returning a web worker from the given function.\n *\n * @param  {function}  fn - Function for the worker.\n * @return {DOMString}\n */\nexports.createWorker = function createWorker(fn) {\n  var xURL = window.URL || window.webkitURL;\n  var code = fn.toString();\n  var objectUrl = xURL.createObjectURL(new Blob(['(' + code + ').call(this);'], {type: 'text/javascript'}));\n  var worker = new Worker(objectUrl);\n  xURL.revokeObjectURL(objectUrl);\n\n  return worker;\n};\n","/**\n * Graphology ForceAtlas2 Layout Default Settings\n * ===============================================\n */\nmodule.exports = {\n  linLogMode: false,\n  outboundAttractionDistribution: false,\n  adjustSizes: false,\n  edgeWeightInfluence: 0,\n  scalingRatio: 1,\n  strongGravityMode: false,\n  gravity: 1,\n  slowDown: 1,\n  barnesHutOptimize: false,\n  barnesHutTheta: 0.5\n};\n","import React from \"react\";\nimport { useSigma } from \"../hooks\";\n\ninterface Props {\n  animationDuration?: number;\n}\n\nexport const ZoomControl: React.FC<Props> = ({ animationDuration = 200 }) => {\n  // Get sigma\n  const sigma = useSigma();\n\n  /**\n   * Function to zoom in sigma.\n   */\n  function zoom(ratio?: number): void {\n    if (sigma) {\n      if (!ratio) {\n        sigma.getCamera().animatedReset({ duration: animationDuration });\n      } else if (ratio > 0) {\n        sigma.getCamera().animatedZoom({ duration: animationDuration });\n      } else if (ratio < 0) {\n        sigma.getCamera().animatedUnzoom({ duration: animationDuration });\n      }\n    }\n  }\n\n  return (\n    <>\n      <div className=\"react-sigma-control-zoom-in\">\n        <button onClick={() => zoom(1)} title=\"Zoom In\"></button>\n      </div>\n      <div className=\"react-sigma-control-zoom-out\">\n        <button onClick={() => zoom(-1)} title=\"Zoom Out\"></button>\n      </div>\n      <div className=\"react-sigma-control-zoom-center\">\n        <button onClick={() => zoom()} title=\"See whole graph\"></button>\n      </div>\n    </>\n  );\n};\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useSigma } from \"../hooks\";\n\ninterface Props {}\n\nexport const FullScreenControl: React.FC<Props> = ({}) => {\n  // Get Sigma\n  const sigma = useSigma();\n  // Is full screen mode enabled\n  const [isFullScreen, setFullScreen] = useState<boolean>(false);\n  // HTML element for the button\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (containerRef.current) {\n      const sigmaRootElement = containerRef.current.closest(\"div.react-sigma-v2\");\n      if (sigmaRootElement) {\n        if (isFullScreen && !sigmaRootElement.classList.contains(\"fullscreen\"))\n          sigmaRootElement.classList.add(\"fullscreen\");\n        sigma.refresh();\n        if (!isFullScreen && sigmaRootElement.classList.contains(\"fullscreen\"))\n          sigmaRootElement.classList.remove(\"fullscreen\");\n        sigma.refresh();\n      }\n    }\n  }, [isFullScreen, useSigma]);\n\n  return (\n    <>\n      <div ref={containerRef} className={`react-sigma-control-${isFullScreen ? \"normalscreen\" : \"fullscreen\"}`}>\n        <button onClick={() => setFullScreen(!isFullScreen)} title=\"Toggle Fullscreen\"></button>\n      </div>\n    </>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useSigma } from \"../hooks\";\n\ninterface Props {}\nexport const SearchControl: React.FC<Props> = ({}) => {\n  // Get sigma\n  const sigma = useSigma();\n  // Search value\n  const [search, setSearch] = useState<string>(\"\");\n  // Datalist values\n  const [values, setValues] = useState<Array<{ id: string; label: string }>>([]);\n  // Selected\n  const [selected, setSelected] = useState<string | null>(null);\n\n  useEffect(() => {\n    const newValues: Array<{ id: string; label: string }> = [];\n    if (!selected && search.length > 1) {\n      sigma.getGraph().forEachNode((key: string, attributes: any): void => {\n        if (attributes.label && attributes.label.toLowerCase().includes(search.toLowerCase()))\n          newValues.push({ id: key, label: attributes.label });\n      });\n    }\n    setValues(newValues);\n  }, [search]);\n\n  useEffect(() => {\n    if (selected) {\n      sigma.getGraph().setNodeAttribute(selected, \"highlighted\", true);\n      sigma.getCamera().animate(sigma.getNodeAttributes(selected), {\n        easing: \"linear\",\n        duration: 500,\n      });\n      return () => {\n        sigma.getGraph().setNodeAttribute(selected, \"highlighted\", false);\n      };\n    }\n  }, [selected]);\n\n  const onInputChange = e => {\n    const searchString = e.target.value;\n    const valueItem = values.find(value => value.label === searchString);\n    if (valueItem) {\n      setSearch(valueItem.label);\n      setValues([]);\n      setSelected(valueItem.id);\n    } else {\n      setSelected(null);\n      setSearch(searchString);\n    }\n  };\n\n  return (\n    <div>\n      <input type=\"text\" placeholder=\"Search...\" list=\"nodes\" value={search} onChange={onInputChange} />\n      <datalist id=\"nodes\">\n        {values.map((value: { id: string; label: string }) => (\n          <option key={value.id} value={value.label}>\n            {value.label}\n          </option>\n        ))}\n      </datalist>\n    </div>\n  );\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { CameraState } from \"sigma/core/camera\";\nimport { useSigma, useRegisterEvents, useLoadGraph, useSetSettings } from \"./hooks\";\nimport { SigmaContainer } from \"./SigmaContainer\";\nimport { ControlsContainer } from \"./controls/ControlsContainer\";\nimport { ForceAtlasControl } from \"./controls/ForceAtlasControl\";\nimport { ZoomControl } from \"./controls/ZoomControl\";\nimport { FullScreenControl } from \"./controls/FullScreenControl\";\nimport { SearchControl } from \"./controls/SearchControl\";\n\ninterface EventHandlers {\n  clickNode: ({ node: NodeKey, event: MouseCoords }) => void;\n  rightClickNode: ({ node: NodeKey, event: MouseCoords }) => void;\n  downNode: ({ node: NodeKey, event: MouseCoords }) => void;\n  leaveNode: ({ node: NodeKey }) => void;\n  enterNode: ({ node: NodeKey }) => void;\n  clickStage: ({ event: MouseCoords }) => void;\n  rightClickStage: ({ event: MouseCoords }) => void;\n  downStage: ({ event: MouseCoords }) => void;\n  kill: () => void;\n  cameraUpdated: (e: CameraState) => void;\n}\n\nexport {\n  ControlsContainer,\n  EventHandlers,\n  ForceAtlasControl,\n  FullScreenControl,\n  SearchControl,\n  SigmaContainer,\n  ZoomControl,\n  useSigma,\n  useRegisterEvents,\n  useLoadGraph,\n  useSetSettings,\n};\n","// extracted by mini-css-extract-plugin\nexport {};"],"sourceRoot":""}